#!/usr/bin/env python3
"""
–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è Ilya Krasinsky Review Standard –Ω–∞ —Ä–µ–∞–ª—å–Ω–æ–º –∫–æ–Ω—Ç–µ–Ω—Ç–µ
"""

import sys
sys.path.append('/home/runner/workspace')

from advising_platform.src.mcp.python_backends.ilya_review_challenge import IlyaReviewChallenger

def main():
    challenger = IlyaReviewChallenger()
    
    # –¢–µ—Å—Ç–æ–≤—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç –∏–∑ seller24 review —Å —Ç–∏–ø–∏—á–Ω—ã–º–∏ –ø—Ä–æ–±–ª–µ–º–∞–º–∏
    test_content = """
# Seller24 Platform ‚Äî Landing Review

## 3. –ê–Ω–∞–ª–∏–∑ –¥–∏–∑–∞–π–Ω–∞ –∏ –∫–æ–Ω–≤–µ—Ä—Å–∏–∏

### Hero Section
- **Headline:** "–£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –ø—Ä–æ–¥–∞–∂–∏ –Ω–∞ –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–∞—Ö"
- **Subheadline:** –ß–µ—Ç–∫–æ–µ –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–∞–∫ –∞–≥–µ–Ω—Ç—Å—Ç–≤–æ –ø–æ–ª–Ω–æ–≥–æ —Ü–∏–∫–ª–∞
- **CTA:** "–ü–æ–ª—É—á–∏—Ç—å –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é" - —è—Å–Ω—ã–π –ø–µ—Ä–≤—ã–π —à–∞–≥

–ù–∞—à–∞ –∫–æ–º–ø–∞–Ω–∏—è –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –ª—É—á—à–∏–µ —Ä–µ—à–µ–Ω–∏—è –¥–ª—è –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–æ–≤.
–ú—ã —è–≤–ª—è–µ–º—Å—è –ª–∏–¥–µ—Ä–∞–º–∏ —Ä—ã–Ω–∫–∞ —Å 15-–ª–µ—Ç–Ω–∏–º –æ–ø—ã—Ç–æ–º —Ä–∞–±–æ—Ç—ã.

### Services Overview
- –ü–æ–Ω—è—Ç–Ω–æ–µ —Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ —É—Å–ª—É–≥ –ø–æ —Ç–∏–ø–∞–º
- –ß–µ—Ç–∫–∏–µ –ø–∞–∫–µ—Ç—ã: "–°—Ç–∞—Ä—Ç", "–†–æ—Å—Ç", "–ú–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ"
- –û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ —Ä–∞–±–æ—Ç—ã

## 5. Recommendations

### High Priority
1. –î–æ–±–∞–≤–∏—Ç—å –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä —Å—Ç–æ–∏–º–æ—Å—Ç–∏ - –ø–æ–∑–≤–æ–ª–∏—Ç—å –∫–ª–∏–µ–Ω—Ç–∞–º –æ—Ü–µ–Ω–∏—Ç—å –±—é–¥–∂–µ—Ç
2. –°–æ–∑–¥–∞—Ç—å –¥–µ–º–æ-–∫–µ–π—Å - –ø–æ–∫–∞–∑–∞—Ç—å –ø—Ä–æ—Ü–µ—Å—Å —Ä–∞–±–æ—Ç—ã
3. –£–ø—Ä–æ—Å—Ç–∏—Ç—å —Ñ–æ—Ä–º—É –∑–∞—è–≤–∫–∏ - —É–±—Ä–∞—Ç—å –ª–∏—à–Ω–∏–µ –ø–æ–ª—è

–û–±—â–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —É–ª—É—á—à–µ–Ω–∏—é –¥–∏–∑–∞–π–Ω–∞ –∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞.
"""
    
    print("=== –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø ILYA KRASINSKY REVIEW STANDARD ===\n")
    
    # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –¥–æ–∫—É–º–µ–Ω—Ç
    analysis = challenger.analyze_document(test_content, "landing_review")
    
    print(f"üìä –û—Ü–µ–Ω–∫–∞ –∫–∞—á–µ—Å—Ç–≤–∞: {analysis['quality_score']:.1f}/10")
    print(f"üéØ –ù–∞–π–¥–µ–Ω–æ –æ–±–ª–∞—Å—Ç–µ–π –¥–ª—è —á–µ–ª–ª–µ–Ω–¥–∂–∞: {len(analysis['challenge_areas'])}")
    
    if analysis['challenge_areas']:
        print("\nüí≠ –ö–û–ú–ú–ï–ù–¢–ê–†–ò–ò-–ß–ï–õ–õ–ï–ù–î–ñ–ò –û–¢ –ò–õ–¨–ò –ö–†–ê–°–ò–ù–°–ö–û–ì–û:")
        for i, challenge in enumerate(analysis['challenge_areas'], 1):
            print(f"\n{i}. –¢–∏–ø: {challenge['type']}")
            print(f"   –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: {challenge['comment']}")
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –≤ –¥–æ–∫—É–º–µ–Ω—Ç
    enhanced_content = challenger.inject_challenges(test_content, analysis)
    
    print("\n" + "="*60)
    print("–î–û–ö–£–ú–ï–ù–¢ –° –ö–û–ú–ú–ï–ù–¢–ê–†–ò–Ø–ú–ò –ò–õ–¨–ò –ö–†–ê–°–ò–ù–°–ö–û–ì–û:")
    print("="*60)
    print(enhanced_content)
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    with open('advising_platform/demo_review_with_ilya_comments.md', 'w', encoding='utf-8') as f:
        f.write(enhanced_content)
    
    print(f"\n‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤: demo_review_with_ilya_comments.md")

if __name__ == "__main__":
    main()