#!/usr/bin/env python3
"""
Test Enhanced Ilya Krasinsky Review Standard with Advanced Conversion Principles
"""

import sys
sys.path.append('/home/runner/workspace')

from advising_platform.src.mcp.python_backends.ilya_review_challenge import IlyaReviewChallenger

def main():
    challenger = IlyaReviewChallenger()
    
    # Test content with multiple conversion issues
    advanced_test_content = """
# –ù–æ–≤—ã–π SaaS –ø—Ä–æ–¥—É–∫—Ç ‚Äî Landing Review

## Hero Section
–ù–∞—à–∞ –∫–æ–º–ø–∞–Ω–∏—è –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç —Ä–µ–≤–æ–ª—é—Ü–∏–æ–Ω–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ –¥–ª—è –≤—Å–µ—Ö —Ç–∏–ø–æ–≤ –±–∏–∑–Ω–µ—Å–∞.
–ú—ã —è–≤–ª—è–µ–º—Å—è –ª–∏–¥–µ—Ä–∞–º–∏ —Ä—ã–Ω–∫–∞ —Å –∏–Ω–Ω–æ–≤–∞—Ü–∏–æ–Ω–Ω—ã–º–∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è–º–∏.

## Pricing
–£ –Ω–∞—Å –µ—Å—Ç—å –¥–≤–∞ –ø—Ä–æ—Å—Ç—ã—Ö —Ç–∞—Ä–∏—Ñ–∞:
- –ë–∞–∑–æ–≤—ã–π: $99/–º–µ—Å—è—Ü
- –ü—Ä–µ–º–∏—É–º: $299/–º–µ—Å—è—Ü

–í—ã–±–µ—Ä–∏—Ç–µ –ª—é–±–æ–π –∫–æ–≥–¥–∞ —É–¥–æ–±–Ω–æ, –±–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π –ø–æ –≤—Ä–µ–º–µ–Ω–∏.

## Features
–í—Å—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ–¥—É–∫—Ç–µ –¥–æ—Å—Ç—É–ø–Ω–∞ –Ω–∞ –æ–¥–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ:
- –ü–æ–ª–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –≤—Å–µ—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π
- –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ —Å–∏—Å—Ç–µ–º—ã  
- –í—Å–µ –¥–µ—Ç–∞–ª–∏ —Å—Ä–∞–∑—É –¥–ª—è –≤–∞—à–µ–≥–æ —É–¥–æ–±—Å—Ç–≤–∞

## Onboarding
–ì–æ—Ç–æ–≤–æ–µ —Ä–µ—à–µ–Ω–∏–µ –±–µ–∑ —É—Å–∏–ª–∏–π - –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞ –≤–∞—Å.
–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å –¥–ª—è –≤—Å–µ—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤.

## Benefits
–ü–æ–ª—É—á–∏—Ç–µ –≤—ã–≥–æ–¥—ã –æ—Ç –Ω–∞—à–µ–≥–æ –ø—Ä–æ–¥—É–∫—Ç–∞:
- –ü—Ä–∏–æ–±—Ä–µ—Ç–µ—Ç–µ –±–æ–Ω—É—Å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
- –ü–ª—é—Å—ã –ø—Ä–æ–¥—É–∫—Ç–∞ –æ—á–µ–≤–∏–¥–Ω—ã

## Process
–°—Ä–µ–¥–Ω–∏–π –æ–ø—ã—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –æ–±—ã—á–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å –ø–æ–∫—É–ø–∫–∏.
–ó–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —Å –ø–æ–ª–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π.

## Recommendations
- –£–ª—É—á—à–∏—Ç—å –¥–∏–∑–∞–π–Ω
- –î–æ–±–∞–≤–∏—Ç—å –±–æ–ª—å—à–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
- –û–±—â–∏–µ —Å–æ–≤–µ—Ç—ã –ø–æ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
"""
    
    print("=== –¢–ï–°–¢ –†–ê–°–®–ò–†–ï–ù–ù–û–ì–û ILYA KRASINSKY REVIEW STANDARD ===\n")
    
    # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Å —Ñ–æ–∫—É—Å–æ–º –Ω–∞ –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ –ø—Ä–∏–Ω—Ü–∏–ø—ã
    focus_areas = [
        "user_centric", "no_decoy", "info_overload", "no_effort_investment", 
        "no_loss_aversion", "no_temporal_anchor", "peak_end_missing",
        "segment_gaps", "no_tasks"
    ]
    
    analysis = challenger.analyze_document(advanced_test_content, "landing_review")
    
    print(f"üìä –û—Ü–µ–Ω–∫–∞ –∫–∞—á–µ—Å—Ç–≤–∞: {analysis['quality_score']:.1f}/10")
    print(f"üéØ –ù–∞–π–¥–µ–Ω–æ –æ–±–ª–∞—Å—Ç–µ–π –¥–ª—è —á–µ–ª–ª–µ–Ω–¥–∂–∞: {len(analysis['challenge_areas'])}")
    
    if analysis['challenge_areas']:
        print("\nüí≠ –ö–û–ú–ú–ï–ù–¢–ê–†–ò–ò-–ß–ï–õ–õ–ï–ù–î–ñ–ò –û–¢ –ò–õ–¨–ò –ö–†–ê–°–ò–ù–°–ö–û–ì–û:")
        for i, challenge in enumerate(analysis['challenge_areas'], 1):
            print(f"\n{i}. [{challenge['type']}]")
            print(f"   {challenge['comment']}")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–∏–µ —á–µ–ª–ª–µ–Ω–¥–∂–∏
    specific_result = challenger.challenge_specific_content(advanced_test_content, focus_areas)
    
    if specific_result['focused_challenges']:
        print(f"\nüîç –¶–ï–õ–ï–í–´–ï –ß–ï–õ–õ–ï–ù–î–ñ–ò ({len(specific_result['focused_challenges'])} –Ω–∞–π–¥–µ–Ω–æ):")
        for challenge in specific_result['focused_challenges']:
            print(f"- {challenge['area']}: {challenge['comment'][:80]}...")
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –≤ –¥–æ–∫—É–º–µ–Ω—Ç
    enhanced_content = challenger.inject_challenges(advanced_test_content, analysis)
    
    print("\n" + "="*80)
    print("–ò–¢–û–ì–û–í–´–ô –î–û–ö–£–ú–ï–ù–¢ –° –ö–û–ú–ú–ï–ù–¢–ê–†–ò–Ø–ú–ò –ò–õ–¨–ò –ö–†–ê–°–ò–ù–°–ö–û–ì–û:")
    print("="*80)
    print(enhanced_content)
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    with open('advising_platform/enhanced_review_with_advanced_challenges.md', 'w', encoding='utf-8') as f:
        f.write(enhanced_content)
    
    print(f"\n‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤: enhanced_review_with_advanced_challenges.md")
    print(f"üìà –ü–æ–∫—Ä—ã—Ç–∏–µ –ø—Ä–∏–Ω—Ü–∏–ø–æ–≤: {len(analysis['challenge_areas'])}/32 –≤–æ–∑–º–æ–∂–Ω—ã—Ö")

if __name__ == "__main__":
    main()