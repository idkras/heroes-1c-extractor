#!/usr/bin/env python3
"""
–ú–æ–¥—É–ª—å –¥–ª—è –≤—ã–≤–æ–¥–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –≤ —á–∞—Ç –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ —á–µ—Ä–µ–∑ —Å–∏—Å—Ç–µ–º—É —Ç—Ä–∏–≥–≥–µ—Ä–æ–≤.

–≠—Ç–æ—Ç –º–æ–¥—É–ª—å –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –≤—ã–≤–æ–¥ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –≤ —á–∞—Ç –ø—Ä–∏:
1. –°–æ–∑–¥–∞–Ω–∏–∏ –Ω–æ–≤—ã—Ö –∑–∞–¥–∞—á (—Å –≤—ã–≤–æ–¥–æ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏)
2. –°–æ–∑–¥–∞–Ω–∏–∏ –∏–Ω—Ü–∏–¥–µ–Ω—Ç–æ–≤ (—Å –≤—ã–≤–æ–¥–æ–º 5-–ø–æ—á–µ–º—É –∞–Ω–∞–ª–∏–∑–∞)
3. –°–æ–∑–¥–∞–Ω–∏–∏ –≥–∏–ø–æ—Ç–µ–∑ (—Å –≤—ã–≤–æ–¥–æ–º RAT –∏ –∫—Ä–∏—Ç–µ—Ä–∏—è —Ñ–∞–ª—å—Å–∏—Ñ–∏—Ü–∏—Ä—É–µ–º–æ—Å—Ç–∏)
4. –°–æ–∑–¥–∞–Ω–∏–∏ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–æ–≤
5. –î–ª—è –≤—Å–µ—Ö —Ç–∏–ø–æ–≤ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –≤—ã–≤–æ–¥—è—Ç—Å—è —Å—Å—ã–ª–∫–∏ –Ω–∞ –≤–µ–±-–ø—Ä–µ–≤—å—é

–ê–≤—Ç–æ—Ä: AI Assistant
–î–∞—Ç–∞: 22 –º–∞—è 2025
"""

import os
import sys
import json
import time
import logging
from datetime import datetime
from typing import Dict, Any, List, Optional
from abc import ABC, abstractmethod

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    handlers=[
        logging.FileHandler("chat_reporter.log"),
        logging.StreamHandler()
    ]
)
logger = logging.getLogger("chat_reporter")


class TaskStatisticsProvider:
    """JTBD:
–Ø (—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫) —Ö–æ—á—É –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –∫–ª–∞—Å—Å–∞ TaskStatisticsProvider, —á—Ç–æ–±—ã —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ —Ä–µ—à–∞—Ç—å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –∑–∞–¥–∞—á–∏ –≤ —Å–∏—Å—Ç–µ–º–µ.
    
    –ö–ª–∞—Å—Å –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ –∑–∞–¥–∞—á–∞–º."""
    
    def get_task_statistics(self) -> Dict[str, Any]:
        """
        –ü–æ–ª—É—á–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ –∑–∞–¥–∞—á–∞–º –∏–∑ —Å–∏—Å—Ç–µ–º—ã.
        
        Returns:
            Dict[str, Any]: –°–ª–æ–≤–∞—Ä—å —Å –º–µ—Ç—Ä–∏–∫–∞–º–∏ –ø–æ –∑–∞–¥–∞—á–∞–º
        """
        try:
            # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –º–æ–¥—É–ª—å –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∑–∞–¥–∞—á –∏–∑ —Å–∏—Å—Ç–µ–º—ã
            from advising_platform.src.core.storage.task_storage import get_task_statistics
            
            # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∑–∞–¥–∞—á –∏–∑ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞
            stats = get_task_statistics()
            
            # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –∫–ª—é—á–∏ –∏–∑ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞ –≤ –æ–∂–∏–¥–∞–µ–º—ã–µ –∫–ª—é—á–∏ –¥–ª—è –≤—ã–≤–æ–¥–∞ –≤ —á–∞—Ç
            return {
                'total_tasks': stats.get('total', 0),
                'open_tasks': stats.get('not_started', 0),
                'in_progress_tasks': stats.get('in_progress', 0),
                'completed_tasks': stats.get('completed', 0),
                'average_lead_time': 0,  # –≠—Ç–æ –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ–∫–∞ –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–æ –∏–∑ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞
                'high_priority': stats.get('high_priority', 0),
                'medium_priority': stats.get('medium_priority', 0),
                'low_priority': stats.get('low_priority', 0),
                'completion_rate': stats.get('completion_rate', 0)
            }
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∑–∞–¥–∞—á: {str(e)}")
            # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –±–∞–∑–æ–≤—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏
            return {
                'total_tasks': 0,
                'open_tasks': 0,
                'in_progress_tasks': 0,
                'completed_tasks': 0,
                'average_lead_time': 0,
                'high_priority': 0,
                'medium_priority': 0,
                'low_priority': 0,
                'completion_rate': 0
            }


class ChatReporter(ABC):
    """JTBD:
–Ø (—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫) —Ö–æ—á—É –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –∫–ª–∞—Å—Å–∞ ChatReporter, —á—Ç–æ–±—ã —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ —Ä–µ—à–∞—Ç—å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –∑–∞–¥–∞—á–∏ –≤ —Å–∏—Å—Ç–µ–º–µ.
    
    –ë–∞–∑–æ–≤—ã–π –∞–±—Å—Ç—Ä–∞–∫—Ç–Ω—ã–π –∫–ª–∞—Å—Å –¥–ª—è —Ä–µ–ø–æ—Ä—Ç–µ—Ä–æ–≤, –≤—ã–≤–æ–¥—è—â–∏—Ö –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ —á–∞—Ç."""
    
    @abstractmethod
    def report_creation(self, document_data: Dict[str, Any]) -> None:
        """
        –í—ã–≤–æ–¥–∏—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–æ–∑–¥–∞–Ω–∏–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞ –≤ —á–∞—Ç.
        
        Args:
            document_data (Dict[str, Any]): –î–∞–Ω–Ω—ã–µ –æ —Å–æ–∑–¥–∞–Ω–Ω–æ–º –¥–æ–∫—É–º–µ–Ω—Ç–µ
        """
        pass
    
    def _send_to_chat(self, message: str) -> None:
        """
        –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç —á–µ—Ä–µ–∑ –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç report_progress Replit.
        
        Args:
            message (str): –°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ —á–∞—Ç
        """
        try:
            # –õ–æ–≥–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
            logger.info("–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ —á–∞—Ç")
            
            # –î–ª—è –æ—Ç–ª–∞–¥–∫–∏ –≤ –∫–æ–Ω—Å–æ–ª–∏ (–Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é)
            print(f"\n[DEBUG] –°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ —á–∞—Ç:\n{message}")
            
            # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –º–Ω–æ–≥–æ—Å—Ç—Ä–æ—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Ñ–æ—Ä–º–∞—Ç, –ø–æ–¥—Ö–æ–¥—è—â–∏–π –¥–ª—è summary
            # –≤ report_progress
            formatted_summary = self._format_for_report_progress(message)
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞–ø—Ä—è–º—É—é —á–µ—Ä–µ–∑ –≤—Å—Ç—Ä–æ–µ–Ω–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é report_progress
            # –≠—Ç–æ —Å–∞–º—ã–π –Ω–∞–¥–µ–∂–Ω—ã–π —Å–ø–æ—Å–æ–±, —Ç–∞–∫ –∫–∞–∫ —Ñ—É–Ω–∫—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞ –≥–ª–æ–±–∞–ª—å–Ω–æ –≤ —Å—Ä–µ–¥–µ Replit
            try:
                # –í —Å—Ä–µ–¥–µ Replit —Ñ—É–Ω–∫—Ü–∏—è report_progress –¥–æ—Å—Ç—É–ø–Ω–∞ –≥–ª–æ–±–∞–ª—å–Ω–æ
                # –ú—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º –≤—Å—Ç—Ä–æ–µ–Ω–Ω—É—é –≥–ª–æ–±–∞–ª—å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é
                print("\n[CHAT] –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —á–µ—Ä–µ–∑ report_progress")
                
                # –ò—Å–ø–æ–ª—å–∑—É–µ–º –≥–ª–æ–±–∞–ª—å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é –±–µ–∑ –∏–º–ø–æ—Ä—Ç–∞
                report_progress(summary=formatted_summary)
                logger.info("–°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ —á–∞—Ç —á–µ—Ä–µ–∑ –≥–ª–æ–±–∞–ª—å–Ω—É—é report_progress")
            except NameError:
                # –ï—Å–ª–∏ —Ñ—É–Ω–∫—Ü–∏—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ –≥–ª–æ–±–∞–ª—å–Ω–æ, –≤—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
                print("\n[CHAT] –ì–ª–æ–±–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è report_progress –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —á–µ—Ä–µ–∑ –∫–æ–Ω—Å–æ–ª—å")
                print(f"\n[CHAT OUTPUT] {formatted_summary}\n")
            
            logger.info("–°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω–æ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏")
                
        except Exception as e:
            # –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏, –≤—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∫–æ–Ω—Å–æ–ª—å –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
            print(f"\n[ERROR] –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤ —á–∞—Ç: {str(e)}")
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç: {str(e)}")
            
    def _format_for_report_progress(self, message: str) -> str:
        """
        –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ —Ñ—É–Ω–∫—Ü–∏–∏ report_progress.
        –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç –º–Ω–æ–≥–æ—Å—Ç—Ä–æ—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Ñ–æ—Ä–º–∞—Ç, –ø–æ–¥—Ö–æ–¥—è—â–∏–π –¥–ª—è –≤—ã–≤–æ–¥–∞ –≤ —á–∞—Ç.
        
        Args:
            message (str): –ò—Å—Ö–æ–¥–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            
        Returns:
            str: –û—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è report_progress
        """
        lines = [line for line in message.split('\n') if line.strip()]
        if not lines:
            return "–ü—É—Å—Ç–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ"
            
        # –ù–∞—Ö–æ–¥–∏–º –æ—Å–Ω–æ–≤–Ω–æ–π –∑–∞–≥–æ–ª–æ–≤–æ–∫ (–æ–±—ã—á–Ω–æ –ø–µ—Ä–≤–∞—è —Å–æ–¥–µ—Ä–∂–∞—Ç–µ–ª—å–Ω–∞—è —Å—Ç—Ä–æ–∫–∞)
        title = lines[0].strip()
        
        # –î–æ–±–∞–≤–ª—è–µ–º –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Å—Ç—Ä–æ–∫–∏ —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º
        result = title + "\n"
        
        for line in lines[1:]:
            if line.startswith('='):
                continue  # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å–Ω—ã–µ –ª–∏–Ω–∏–∏
            result += line + "\n"
            
        return result


class TaskChatReporter(ChatReporter):
    """JTBD:
–Ø (—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫) —Ö–æ—á—É –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –∫–ª–∞—Å—Å–∞ TaskChatReporter, —á—Ç–æ–±—ã —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ —Ä–µ—à–∞—Ç—å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –∑–∞–¥–∞—á–∏ –≤ —Å–∏—Å—Ç–µ–º–µ.
    
    –ö–ª–∞—Å—Å –¥–ª—è –≤—ã–≤–æ–¥–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∑–∞–¥–∞—á–∞—Ö –≤ —á–∞—Ç."""
    
    def __init__(self, stats_provider: Optional[TaskStatisticsProvider] = None):
        """
        –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Ä–µ–ø–æ—Ä—Ç–µ—Ä –¥–ª—è –∑–∞–¥–∞—á.
        
        Args:
            stats_provider (TaskStatisticsProvider, optional): –ü—Ä–æ–≤–∞–π–¥–µ—Ä —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∑–∞–¥–∞—á
        """
        self.stats_provider = stats_provider or TaskStatisticsProvider()
    
    def report_creation(self, document_data: Dict[str, Any]) -> None:
        """
        –í—ã–≤–æ–¥–∏—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–æ–∑–¥–∞–Ω–∏–∏ –∑–∞–¥–∞—á–∏ –≤ —á–∞—Ç.
        
        Args:
            document_data (Dict[str, Any]): –î–∞–Ω–Ω—ã–µ –æ —Å–æ–∑–¥–∞–Ω–Ω–æ–π –∑–∞–¥–∞—á–µ
        """
        try:
            logger.info(f"–í—ã–≤–æ–¥ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–æ–∑–¥–∞–Ω–∏–∏ –∑–∞–¥–∞—á–∏: {document_data['title']}")
            
            message = "\n" + "="*80 + "\n"
            message += f"üöÄ –°–û–ó–î–ê–ù–ê –ù–û–í–ê–Ø –ó–ê–î–ê–ß–ê: {document_data['title']}\n"
            message += f"–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç: {document_data.get('priority', '–ù–µ —É–∫–∞–∑–∞–Ω')}\n"
            message += f"–°—Ç–∞—Ç—É—Å: {document_data.get('status', '–ù–µ —É–∫–∞–∑–∞–Ω')}\n"
            message += f"–°–æ–∑–¥–∞–Ω–∞: {document_data.get('created_at', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}\n"
            
            # –í—ã–≤–æ–¥ —Å—Å—ã–ª–∫–∏ –Ω–∞ –≤–µ–±-–ø—Ä–µ–≤—å—é
            if document_data.get('url'):
                message += f"\nüîç –°—Å—ã–ª–∫–∞ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞: {document_data['url']}\n"
            
            # –í—ã–≤–æ–¥–∏–º –≤ –∫–æ–Ω—Å–æ–ª—å –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
            print(message)
            
            # –í—ã–≤–æ–¥ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∑–∞–¥–∞—á
            stats_message = self.report_statistics()
            message += stats_message
            
            message += "="*80 + "\n"
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç —á–µ—Ä–µ–∑ API –∏–ª–∏ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é
            self._send_to_chat(message)
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–≤–æ–¥–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–æ–∑–¥–∞–Ω–∏–∏ –∑–∞–¥–∞—á–∏: {str(e)}")
    
    def report_statistics(self) -> str:
        """JTBD:
–Ø (—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫) —Ö–æ—á—É –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é report_statistics, —á—Ç–æ–±—ã —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –æ–ø–µ—Ä–∞—Ü–∏—é.
         
        –§–æ—Ä–º–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π –∑–∞–¥–∞—á –¥–ª—è –≤—ã–≤–æ–¥–∞ –≤ —á–∞—Ç.
        
        Returns:
            str: –°–æ–æ–±—â–µ–Ω–∏–µ —Å–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π –∑–∞–¥–∞—á
        """
        try:
            logger.info("–§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∑–∞–¥–∞—á –¥–ª—è —á–∞—Ç–∞")
            
            stats = self.stats_provider.get_task_statistics()
            
            message = "\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞–¥–∞—á:\n"
            message += f"–í—Å–µ–≥–æ –∑–∞–¥–∞—á: {stats['total_tasks']}\n"
            message += f"–û—Ç–∫—Ä—ã—Ç—ã—Ö –∑–∞–¥–∞—á: {stats['open_tasks']}\n"
            message += f"–ó–∞–¥–∞—á –≤ —Ä–∞–±–æ—Ç–µ: {stats['in_progress_tasks']}\n"
            message += f"–í—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞—á: {stats['completed_tasks']}\n"
            
            # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞—Ö –∑–∞–¥–∞—á
            message += f"\nüî• –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞–º:\n"
            message += f"–í—ã—Å–æ–∫–∏–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç: {stats.get('high_priority', 0)}\n"
            message += f"–°—Ä–µ–¥–Ω–∏–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç: {stats.get('medium_priority', 0)}\n"
            message += f"–ù–∏–∑–∫–∏–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç: {stats.get('low_priority', 0)}\n"
            
            # –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–æ—Ü–µ–Ω—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
            if stats.get('completion_rate', 0) > 0:
                message += f"\n‚úÖ –ü—Ä–æ–≥—Ä–µ—Å—Å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: {stats.get('completion_rate', 0)}%\n"
            
            if stats.get('average_lead_time', 0) > 0:
                message += f"–°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: {stats['average_lead_time']} –¥–Ω–µ–π\n"
            
            return message
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∑–∞–¥–∞—á: {str(e)}")
            return "\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞–¥–∞—á –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞\n"


class IncidentChatReporter(ChatReporter):
    """JTBD:
–Ø (—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫) —Ö–æ—á—É –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –∫–ª–∞—Å—Å–∞ IncidentChatReporter, —á—Ç–æ–±—ã —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ —Ä–µ—à–∞—Ç—å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –∑–∞–¥–∞—á–∏ –≤ —Å–∏—Å—Ç–µ–º–µ.
    
    –ö–ª–∞—Å—Å –¥–ª—è –≤—ã–≤–æ–¥–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∏–Ω—Ü–∏–¥–µ–Ω—Ç–∞—Ö –≤ —á–∞—Ç."""
    
    def report_creation(self, document_data: Dict[str, Any]) -> None:
        """
        –í—ã–≤–æ–¥–∏—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–æ–∑–¥–∞–Ω–∏–∏ –∏–Ω—Ü–∏–¥–µ–Ω—Ç–∞ –≤ —á–∞—Ç.
        
        Args:
            document_data (Dict[str, Any]): –î–∞–Ω–Ω—ã–µ –æ —Å–æ–∑–¥–∞–Ω–Ω–æ–º –∏–Ω—Ü–∏–¥–µ–Ω—Ç–µ
        """
        try:
            logger.info(f"–í—ã–≤–æ–¥ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–æ–∑–¥–∞–Ω–∏–∏ –∏–Ω—Ü–∏–¥–µ–Ω—Ç–∞: {document_data['title']}")
            
            message = "\n" + "="*80 + "\n"
            message += f"‚ö†Ô∏è –°–û–ó–î–ê–ù –ù–û–í–´–ô –ò–ù–¶–ò–î–ï–ù–¢: {document_data['title']}\n"
            message += f"–í–∞–∂–Ω–æ—Å—Ç—å: {document_data.get('severity', '–ù–µ —É–∫–∞–∑–∞–Ω–∞')}\n"
            message += f"–°–æ–∑–¥–∞–Ω: {document_data.get('created_at', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}\n"
            
            # –í—ã–≤–æ–¥ —Å—Å—ã–ª–∫–∏ –Ω–∞ –≤–µ–±-–ø—Ä–µ–≤—å—é
            if document_data.get('url'):
                message += f"\nüîç –°—Å—ã–ª–∫–∞ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞: {document_data['url']}\n"
            
            # –í—ã–≤–æ–¥–∏–º –≤ –∫–æ–Ω—Å–æ–ª—å –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
            print(message)
            
            # –í—ã–≤–æ–¥ 5-–ø–æ—á–µ–º—É –∞–Ω–∞–ª–∏–∑–∞, –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å
            if document_data.get('five_why_analysis'):
                analysis_message = self.report_five_why_analysis(document_data)
                message += analysis_message
            
            message += "="*80 + "\n"
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç —á–µ—Ä–µ–∑ API –∏–ª–∏ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é
            self._send_to_chat(message)
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–≤–æ–¥–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–æ–∑–¥–∞–Ω–∏–∏ –∏–Ω—Ü–∏–¥–µ–Ω—Ç–∞: {str(e)}")
    
    def report_five_why_analysis(self, document_data: Dict[str, Any]) -> str:
        """
        –§–æ—Ä–º–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å 5-–ø–æ—á–µ–º—É –∞–Ω–∞–ª–∏–∑–æ–º –∏–Ω—Ü–∏–¥–µ–Ω—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞ –≤ —á–∞—Ç.
        
        Args:
            document_data (Dict[str, Any]): –î–∞–Ω–Ω—ã–µ –æ–± –∏–Ω—Ü–∏–¥–µ–Ω—Ç–µ
            
        Returns:
            str: –°–æ–æ–±—â–µ–Ω–∏–µ —Å 5-–ø–æ—á–µ–º—É –∞–Ω–∞–ª–∏–∑–æ–º
        """
        try:
            logger.info(f"–§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ 5-–ø–æ—á–µ–º—É –∞–Ω–∞–ª–∏–∑–∞ –¥–ª—è –∏–Ω—Ü–∏–¥–µ–Ω—Ç–∞: {document_data['title']}")
            
            five_why = document_data.get('five_why_analysis', {})
            
            message = "\nüîé 5-–ø–æ—á–µ–º—É –∞–Ω–∞–ª–∏–∑:\n"
            
            # –í—ã–≤–æ–¥ –ø—Ä–æ–±–ª–µ–º—ã
            if five_why.get('problem'):
                message += f"–ü—Ä–æ–±–ª–µ–º–∞: {five_why['problem']}\n"
            
            # –í—ã–≤–æ–¥ —Ü–µ–ø–æ—á–∫–∏ "–ø–æ—á–µ–º—É"
            if five_why.get('whys') and isinstance(five_why['whys'], list):
                message += "\n–¶–µ–ø–æ—á–∫–∞ –ø—Ä–∏—á–∏–Ω:\n"
                for i, why in enumerate(five_why['whys'], 1):
                    message += f"{i}. {why}\n"
            
            # –í—ã–≤–æ–¥ –∫–æ—Ä–Ω–µ–≤–æ–π –ø—Ä–∏—á–∏–Ω—ã
            if five_why.get('root_cause'):
                message += f"\n–ö–æ—Ä–Ω–µ–≤–∞—è –ø—Ä–∏—á–∏–Ω–∞: {five_why['root_cause']}\n"
            
            # –í—ã–≤–æ–¥ —Ä–µ—à–µ–Ω–∏—è
            if five_why.get('solution'):
                message += f"\n–†–µ—à–µ–Ω–∏–µ: {five_why['solution']}\n"
            
            return message
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–∏ 5-–ø–æ—á–µ–º—É –∞–Ω–∞–ª–∏–∑–∞: {str(e)}")
            return "\nüîé 5-–ø–æ—á–µ–º—É –∞–Ω–∞–ª–∏–∑ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω\n"


class HypothesisChatReporter(ChatReporter):
    """JTBD:
–Ø (—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫) —Ö–æ—á—É –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –∫–ª–∞—Å—Å–∞ HypothesisChatReporter, —á—Ç–æ–±—ã —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ —Ä–µ—à–∞—Ç—å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –∑–∞–¥–∞—á–∏ –≤ —Å–∏—Å—Ç–µ–º–µ.
    
    –ö–ª–∞—Å—Å –¥–ª—è –≤—ã–≤–æ–¥–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≥–∏–ø–æ—Ç–µ–∑–∞—Ö –≤ —á–∞—Ç."""
    
    def report_creation(self, document_data: Dict[str, Any]) -> None:
        """
        –í—ã–≤–æ–¥–∏—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–æ–∑–¥–∞–Ω–∏–∏ –≥–∏–ø–æ—Ç–µ–∑—ã –≤ —á–∞—Ç.
        
        Args:
            document_data (Dict[str, Any]): –î–∞–Ω–Ω—ã–µ –æ —Å–æ–∑–¥–∞–Ω–Ω–æ–π –≥–∏–ø–æ—Ç–µ–∑–µ
        """
        try:
            logger.info(f"–í—ã–≤–æ–¥ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–æ–∑–¥–∞–Ω–∏–∏ –≥–∏–ø–æ—Ç–µ–∑—ã: {document_data['title']}")
            
            message = "\n" + "="*80 + "\n"
            message += f"‚ùì –°–û–ó–î–ê–ù–ê –ù–û–í–ê–Ø –ì–ò–ü–û–¢–ï–ó–ê: {document_data['title']}\n"
            message += f"–°–æ–∑–¥–∞–Ω–∞: {document_data.get('created_at', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}\n"
            
            # –í—ã–≤–æ–¥ —Å—Å—ã–ª–∫–∏ –Ω–∞ –≤–µ–±-–ø—Ä–µ–≤—å—é
            if document_data.get('url'):
                message += f"\nüîç –°—Å—ã–ª–∫–∞ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞: {document_data['url']}\n"
            
            # –í—ã–≤–æ–¥–∏–º –≤ –∫–æ–Ω—Å–æ–ª—å –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
            print(message)
            
            # –í—ã–≤–æ–¥ RAT –∏ –∫—Ä–∏—Ç–µ—Ä–∏—è —Ñ–∞–ª—å—Å–∏—Ñ–∏—Ü–∏—Ä—É–µ–º–æ—Å—Ç–∏
            rat_message = self.report_rat_and_falsifiability(document_data)
            message += rat_message
            
            message += "="*80 + "\n"
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç —á–µ—Ä–µ–∑ API –∏–ª–∏ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é
            self._send_to_chat(message)
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–≤–æ–¥–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–æ–∑–¥–∞–Ω–∏–∏ –≥–∏–ø–æ—Ç–µ–∑—ã: {str(e)}")
    
    def report_rat_and_falsifiability(self, document_data: Dict[str, Any]) -> str:
        """
        –§–æ—Ä–º–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å RAT –∏ –∫—Ä–∏—Ç–µ—Ä–∏–µ–º —Ñ–∞–ª—å—Å–∏—Ñ–∏—Ü–∏—Ä—É–µ–º–æ—Å—Ç–∏ –≥–∏–ø–æ—Ç–µ–∑—ã –¥–ª—è –≤—ã–≤–æ–¥–∞ –≤ —á–∞—Ç.
        
        Args:
            document_data (Dict[str, Any]): –î–∞–Ω–Ω—ã–µ –æ –≥–∏–ø–æ—Ç–µ–∑–µ
            
        Returns:
            str: –°–æ–æ–±—â–µ–Ω–∏–µ —Å RAT –∏ –∫—Ä–∏—Ç–µ—Ä–∏–µ–º —Ñ–∞–ª—å—Å–∏—Ñ–∏—Ü–∏—Ä—É–µ–º–æ—Å—Ç–∏
        """
        try:
            logger.info(f"–§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ RAT –∏ –∫—Ä–∏—Ç–µ—Ä–∏—è —Ñ–∞–ª—å—Å–∏—Ñ–∏—Ü–∏—Ä—É–µ–º–æ—Å—Ç–∏ –¥–ª—è –≥–∏–ø–æ—Ç–µ–∑—ã: {document_data['title']}")
            
            rat = document_data.get('rat', {})
            
            message = "\nüìã RAT-–∞–Ω–∞–ª–∏–∑:\n"
            
            # –í—ã–≤–æ–¥ —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω–æ—Å—Ç–∏
            if rat.get('realistic'):
                message += f"R - {rat['realistic']}\n"
            
            # –í—ã–≤–æ–¥ –∞–º–±–∏—Ü–∏–æ–∑–Ω–æ—Å—Ç–∏
            if rat.get('ambitious'):
                message += f"A - {rat['ambitious']}\n"
            
            # –í—ã–≤–æ–¥ —Ç–µ—Å—Ç–∏—Ä—É–µ–º–æ—Å—Ç–∏
            if rat.get('testable'):
                message += f"T - {rat['testable']}\n"
            
            # –í—ã–≤–æ–¥ –∫—Ä–∏—Ç–µ—Ä–∏—è —Ñ–∞–ª—å—Å–∏—Ñ–∏—Ü–∏—Ä—É–µ–º–æ—Å—Ç–∏
            if document_data.get('falsifiability'):
                message += f"\nüî¨ –ö—Ä–∏—Ç–µ—Ä–∏–π —Ñ–∞–ª—å—Å–∏—Ñ–∏—Ü–∏—Ä—É–µ–º–æ—Å—Ç–∏:\n"
                message += f"{document_data['falsifiability']}\n"
            
            return message
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–∏ RAT –∏ –∫—Ä–∏—Ç–µ—Ä–∏—è —Ñ–∞–ª—å—Å–∏—Ñ–∏—Ü–∏—Ä—É–µ–º–æ—Å—Ç–∏: {str(e)}")
            return "\nüìã RAT-–∞–Ω–∞–ª–∏–∑ –∏ –∫—Ä–∏—Ç–µ—Ä–∏–π —Ñ–∞–ª—å—Å–∏—Ñ–∏—Ü–∏—Ä—É–µ–º–æ—Å—Ç–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã\n"


class StandardChatReporter(ChatReporter):
    """JTBD:
–Ø (—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫) —Ö–æ—á—É –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –∫–ª–∞—Å—Å–∞ StandardChatReporter, —á—Ç–æ–±—ã —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ —Ä–µ—à–∞—Ç—å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –∑–∞–¥–∞—á–∏ –≤ —Å–∏—Å—Ç–µ–º–µ.
    
    –ö–ª–∞—Å—Å –¥–ª—è –≤—ã–≤–æ–¥–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∞—Ö –≤ —á–∞—Ç."""
    
    def report_creation(self, document_data: Dict[str, Any]) -> None:
        """
        –í—ã–≤–æ–¥–∏—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∞ –≤ —á–∞—Ç.
        
        Args:
            document_data (Dict[str, Any]): –î–∞–Ω–Ω—ã–µ –æ —Å–æ–∑–¥–∞–Ω–Ω–æ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–µ
        """
        try:
            logger.info(f"–í—ã–≤–æ–¥ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∞: {document_data['title']}")
            
            message = "\n" + "="*80 + "\n"
            message += f"üìã –°–û–ó–î–ê–ù –ù–û–í–´–ô –°–¢–ê–ù–î–ê–†–¢: {document_data['title']}\n"
            message += f"–°–æ–∑–¥–∞–Ω: {document_data.get('created_at', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}\n"
            
            # –í—ã–≤–æ–¥ —Å—Å—ã–ª–∫–∏ –Ω–∞ –≤–µ–±-–ø—Ä–µ–≤—å—é
            if document_data.get('url'):
                message += f"\nüîç –°—Å—ã–ª–∫–∞ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞: {document_data['url']}\n"
            
            message += "="*80 + "\n"
            
            # –í—ã–≤–æ–¥–∏–º –≤ –∫–æ–Ω—Å–æ–ª—å –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
            print(message)
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç —á–µ—Ä–µ–∑ API –∏–ª–∏ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é
            self._send_to_chat(message)
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–≤–æ–¥–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∞: {str(e)}")


class ChatReporterFactory:
    """JTBD:
–Ø (—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫) —Ö–æ—á—É –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –∫–ª–∞—Å—Å–∞ ChatReporterFactory, —á—Ç–æ–±—ã —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ —Ä–µ—à–∞—Ç—å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –∑–∞–¥–∞—á–∏ –≤ —Å–∏—Å—Ç–µ–º–µ.
    
    –§–∞–±—Ä–∏–∫–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ä–µ–ø–æ—Ä—Ç–µ—Ä–æ–≤ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ç–∏–ø–æ–≤ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤."""
    
    def create_reporter(self, document_type: str) -> ChatReporter:
        """
        –°–æ–∑–¥–∞–µ—Ç —Ä–µ–ø–æ—Ä—Ç–µ—Ä –¥–ª—è —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ —Ç–∏–ø–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞.
        
        Args:
            document_type (str): –¢–∏–ø –¥–æ–∫—É–º–µ–Ω—Ç–∞ ('task', 'incident', 'hypothesis', 'standard')
        
        Returns:
            ChatReporter: –†–µ–ø–æ—Ä—Ç–µ—Ä –¥–ª—è —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ —Ç–∏–ø–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞
        
        Raises:
            ValueError: –ï—Å–ª–∏ —É–∫–∞–∑–∞–Ω –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø –¥–æ–∫—É–º–µ–Ω—Ç–∞
        """
        if document_type == 'task':
            return TaskChatReporter()
        elif document_type == 'incident':
            return IncidentChatReporter()
        elif document_type == 'hypothesis':
            return HypothesisChatReporter()
        elif document_type == 'standard':
            return StandardChatReporter()
        else:
            raise ValueError(f"–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø –¥–æ–∫—É–º–µ–Ω—Ç–∞: {document_type}")


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å —Ç—Ä–∏–≥–≥–µ—Ä–∞–º–∏
def process_document_creation_trigger(document_type: str, document_data: Dict[str, Any]) -> None:
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ç—Ä–∏–≥–≥–µ—Ä —Å–æ–∑–¥–∞–Ω–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–∞ –∏ –≤—ã–≤–æ–¥–∏—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ —á–∞—Ç.
    
    Args:
        document_type (str): –¢–∏–ø —Å–æ–∑–¥–∞–Ω–Ω–æ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞
        document_data (Dict[str, Any]): –î–∞–Ω–Ω—ã–µ –æ —Å–æ–∑–¥–∞–Ω–Ω–æ–º –¥–æ–∫—É–º–µ–Ω—Ç–µ
    """
    try:
        logger.info(f"–û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç—Ä–∏–≥–≥–µ—Ä–∞ —Å–æ–∑–¥–∞–Ω–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–∞ —Ç–∏–ø–∞ {document_type}")
        
        factory = ChatReporterFactory()
        reporter = factory.create_reporter(document_type)
        reporter.report_creation(document_data)
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ç—Ä–∏–≥–≥–µ—Ä–∞ —Å–æ–∑–¥–∞–Ω–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–∞: {str(e)}")