#!/usr/bin/env python3
"""
API –º–∞—Ä—à—Ä—É—Ç—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –≥–∏–ø–æ—Ç–µ–∑–∞–º–∏ –∏ –∏—Ö –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç—É.
"""

import os
import json
from flask import Blueprint, request, jsonify, send_file, current_app
from advising_platform.src.tools.hypothesis_validator import HypothesisValidator

# –°–æ–∑–¥–∞–µ–º Blueprint –¥–ª—è –º–∞—Ä—à—Ä—É—Ç–æ–≤ –≥–∏–ø–æ—Ç–µ–∑
hypothesis_routes = Blueprint('hypothesis_routes', __name__)

# –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –≤–∞–ª–∏–¥–∞—Ç–æ—Ä–∞ –≥–∏–ø–æ—Ç–µ–∑
hypothesis_validator = HypothesisValidator()

@hypothesis_routes.route('/validate', methods=['POST'])
def validate_hypothesis():
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≥–∏–ø–æ—Ç–µ–∑—É –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç—É.
    
    –ü—Ä–∏–Ω–∏–º–∞–µ—Ç —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –≥–∏–ø–æ—Ç–µ–∑—ã –≤ –∑–∞–ø—Ä–æ—Å–µ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏.
    """
    try:
        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –∑–∞–ø—Ä–æ—Å–∞
        data = request.get_json()
        
        if not data or 'content' not in data:
            return jsonify({'error': '–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –≥–∏–ø–æ—Ç–µ–∑—ã –≤ –ø–æ–ª–µ "content"'}), 400
            
        # –ü–æ–ª—É—á–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –≥–∏–ø–æ—Ç–µ–∑—ã
        content = data['content']
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≥–∏–ø–æ—Ç–µ–∑—É
        validation_result = hypothesis_validator.validate_hypothesis(content)
        
        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏
        return jsonify({
            'is_valid': validation_result['is_valid'],
            'missing_sections': validation_result.get('missing_sections', []),
            'issues': validation_result.get('issues', []),
            'suggestions': validation_result.get('suggestions', []),
            'extracted_sections': validation_result.get('extracted_sections', {})
        }), 200
    
    except Exception as e:
        current_app.logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –≥–∏–ø–æ—Ç–µ–∑—ã: {e}")
        return jsonify({'error': str(e)}), 500

@hypothesis_routes.route('/report', methods=['POST'])
def generate_report():
    """
    –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –æ—Ç—á–µ—Ç –æ –ø—Ä–æ–≤–µ—Ä–∫–µ –≥–∏–ø–æ—Ç–µ–∑—ã.
    
    –ü—Ä–∏–Ω–∏–º–∞–µ—Ç —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –≥–∏–ø–æ—Ç–µ–∑—ã –≤ –∑–∞–ø—Ä–æ—Å–µ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ—Ç—á–µ—Ç –≤ —Ñ–æ—Ä–º–∞—Ç–µ Markdown.
    """
    try:
        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –∑–∞–ø—Ä–æ—Å–∞
        data = request.get_json()
        
        if not data or 'content' not in data:
            return jsonify({'error': '–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –≥–∏–ø–æ—Ç–µ–∑—ã –≤ –ø–æ–ª–µ "content"'}), 400
            
        # –ü–æ–ª—É—á–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –≥–∏–ø–æ—Ç–µ–∑—ã
        content = data['content']
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≥–∏–ø–æ—Ç–µ–∑—É
        validation_result = hypothesis_validator.validate_hypothesis(content)
        
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ—Ç—á–µ—Ç
        report = hypothesis_validator.generate_report(validation_result)
        
        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—Ç—á–µ—Ç
        return jsonify({'report': report}), 200
    
    except Exception as e:
        current_app.logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç—á–µ—Ç–∞: {e}")
        return jsonify({'error': str(e)}), 500

@hypothesis_routes.route('/template', methods=['GET'])
def get_template():
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —à–∞–±–ª–æ–Ω –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≥–∏–ø–æ—Ç–µ–∑—ã.
    """
    template = """# –ì–∏–ø–æ—Ç–µ–∑–∞: [–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ]

<!-- üîí PROTECTED SECTION: BEGIN -->
updated: [–î–∞—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è]  
based on: 2.2 hypothesis standard 14 may 2025 0740 cet by ai assistant
status: draft
<!-- üîí PROTECTED SECTION: END -->

---

## üìù –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –≥–∏–ø–æ—Ç–µ–∑—ã

```
ID: H-XXX
–ê–≤—Ç–æ—Ä: [–ò–º—è –∞–≤—Ç–æ—Ä–∞]
–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è: [–¥–¥.–º–º.–≥–≥–≥–≥]
–ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: [–¥–¥.–º–º.–≥–≥–≥–≥]
–°—Ç–∞—Ç—É—Å: –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∞
–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç: [P0/P1/P2/P3]
–°–≤—è–∑–∞–Ω–Ω—ã–µ –≥–∏–ø–æ—Ç–µ–∑—ã: [ID —Å–≤—è–∑–∞–Ω–Ω—ã—Ö –≥–∏–ø–æ—Ç–µ–∑]
–¢–µ–≥–∏: [–∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞, —Ä–∞–∑–¥–µ–ª–µ–Ω–Ω—ã–µ –∑–∞–ø—è—Ç—ã–º–∏]
```

## üß™ –§–æ—Ä–º—É–ª–∏—Ä–æ–≤–∫–∞ –≥–∏–ø–æ—Ç–µ–∑—ã (—Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç)

**–ù–∞–±–ª—é–¥–µ–Ω–∏–µ:** [—á—Ç–æ –º—ã –∑–∞–º–µ—Ç–∏–ª–∏, –∫–∞–∫—É—é –ø—Ä–æ–±–ª–µ–º—É –∏–ª–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —É–≤–∏–¥–µ–ª–∏]

–ú—ã –≤–µ—Ä–∏–º, —á—Ç–æ [–¥–µ–π—Å—Ç–≤–∏–µ/–∏–∑–º–µ–Ω–µ–Ω–∏–µ] –¥–ª—è [–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å/—Å–µ–≥–º–µ–Ω—Ç] –ø—Ä–∏–≤–µ–¥–µ—Ç –∫ [–æ–∂–∏–¥–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç].

–≠—Ç–æ –ø—Ä–æ–∏–∑–æ–π–¥–µ—Ç, –ø–æ—Ç–æ–º—É —á—Ç–æ [–º–µ—Ö–∞–Ω–∏–∑–º/–ø—Ä–∏—á–∏–Ω–Ω–æ-—Å–ª–µ–¥—Å—Ç–≤–µ–Ω–Ω–∞—è —Å–≤—è–∑—å].

–ú—ã –ø–æ–π–º–µ–º, —á—Ç–æ —ç—Ç–æ –ø—Ä–∞–≤–¥–∞, –∫–æ–≥–¥–∞ —É–≤–∏–¥–∏–º [–∏–∑–º–µ—Ä–∏–º—ã–π –∫—Ä–∏—Ç–µ—Ä–∏–π —É—Å–ø–µ—Ö–∞].

**–†–∏—Å–∫–∏ –∏ –¥–æ–ø—É—â–µ–Ω–∏—è:**
- [–†–∏—Å–∫ 1]
- [–†–∏—Å–∫ 2]
- [–î–æ–ø—É—â–µ–Ω–∏–µ 1]
- [–î–æ–ø—É—â–µ–Ω–∏–µ 2]

## üîç –ú–µ—Ç–æ–¥ –ø—Ä–æ–≤–µ—Ä–∫–∏ –≥–∏–ø–æ—Ç–µ–∑—ã

1. **–¢–∏–ø —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:** [A/B —Ç–µ—Å—Ç, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –∏–Ω—Ç–µ—Ä–≤—å—é, –æ–ø—Ä–æ—Å, –ø—Ä–æ—Ç–æ—Ç–∏–ø]
2. **–í—Ä–µ–º–µ–Ω–Ω–æ–π –ø–µ—Ä–∏–æ–¥:** [–ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è]
3. **–¶–µ–ª–µ–≤—ã–µ –º–µ—Ç—Ä–∏–∫–∏:**
   - –û—Å–Ω–æ–≤–Ω–∞—è: [–∫–ª—é—á–µ–≤–∞—è –º–µ—Ç—Ä–∏–∫–∞]
   - –í—Ç–æ—Ä–∏—á–Ω—ã–µ:
     - [–í—Ç–æ—Ä–∏—á–Ω–∞—è –º–µ—Ç—Ä–∏–∫–∞ 1]
     - [–í—Ç–æ—Ä–∏—á–Ω–∞—è –º–µ—Ç—Ä–∏–∫–∞ 2]

4. **–ú–µ—Ç–æ–¥–æ–ª–æ–≥–∏—è:**
   - [–û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ—Ü–µ—Å—Å–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è]
   - [–†–∞–∑–º–µ—Ä –≤—ã–±–æ—Ä–∫–∏]
   - [–ö—Ä–∏—Ç–µ—Ä–∏–∏ –æ—Ü–µ–Ω–∫–∏]

## üîÑ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –∫—Ä–∏—Ç–µ—Ä–∏—è–º –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–π –≥–∏–ø–æ—Ç–µ–∑—ã

1. **–ö–æ–Ω–∫—Ä–µ—Ç–Ω–æ—Å—Ç—å:** [–æ—Ü–µ–Ω–∫–∞]
2. **–¢–µ—Å—Ç–∏—Ä—É–µ–º–æ—Å—Ç—å:** [–æ—Ü–µ–Ω–∫–∞]
3. **–§–∞–ª—å—Å–∏—Ñ–∏—Ü–∏—Ä—É–µ–º–æ—Å—Ç—å:** [–æ—Ü–µ–Ω–∫–∞]
4. **–û—Å–Ω–æ–≤–∞–Ω–Ω–æ—Å—Ç—å –Ω–∞ –¥–∞–Ω–Ω—ã—Ö:** [–æ—Ü–µ–Ω–∫–∞]
5. **–ü—Ä–∏—á–∏–Ω–Ω–æ-—Å–ª–µ–¥—Å—Ç–≤–µ–Ω–Ω–∞—è —Å–≤—è–∑—å:** [–æ—Ü–µ–Ω–∫–∞]
6. **–í—Ä–µ–º–µ–Ω–Ω–æ–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ:** [–æ—Ü–µ–Ω–∫–∞]
7. **–ö–æ–º–ø–∞–∫—Ç–Ω–æ—Å—Ç—å:** [–æ—Ü–µ–Ω–∫–∞]

## üîÑ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏ –ø–æ—Å–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏

[–ó–∞–ø–æ–ª–Ω—è–µ—Ç—Å—è –ø–æ—Å–ª–µ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è]
"""
    
    return jsonify({'template': template}), 200


def register_routes(app):
    """
    –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –º–∞—Ä—à—Ä—É—Ç—ã API –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ Flask.
    
    Args:
        app: –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ Flask.
    """
    app.register_blueprint(hypothesis_routes, url_prefix='/api/hypothesis')
