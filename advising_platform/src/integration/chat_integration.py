#!/usr/bin/env python3
"""
–ú–æ–¥—É–ª—å –¥–ª—è –ø—Ä—è–º–æ–π –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å —á–∞—Ç–æ–º Replit.
–ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –ø—Ä–æ—Å—Ç—ã–µ –∏ –Ω–∞–¥–µ–∂–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ç–∏–ø–æ–≤
–¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –≤ —á–∞—Ç-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å Replit –±–µ–∑ –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã—Ö —Å–ª–æ–µ–≤.

–ê–≤—Ç–æ—Ä: AI Assistant
–î–∞—Ç–∞: 21 –º–∞—è 2025
"""

import logging
from typing import Dict, Any, Optional, Union, List

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s'
)
logger = logging.getLogger(__name__)

# –ì–ª–æ–±–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è report_progress –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ —á–∞—Ç
# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç—Å—è –∫–∞–∫ None, –±—É–¥–µ—Ç –∑–∞–º–µ–Ω–µ–Ω–∞ –Ω–∞ —Ñ—É–Ω–∫—Ü–∏—é –∏–∑ antml.function_calls
report_progress = None

def initialize_report_function():
    """
    –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é report_progress –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ —á–∞—Ç.
    –≠—Ç–æ—Ç —à–∞–≥ –Ω–µ–æ–±—Ö–æ–¥–∏–º –¥–ª—è –æ–±–µ—Å–ø–µ—á–µ–Ω–∏—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏.
    """
    global report_progress
    
    # –ü—ã—Ç–∞–µ–º—Å—è –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é –∏–∑ antml.function_calls (–≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π Replit API)
    try:
        from antml.function_calls import report_progress as rp
        report_progress = rp
        logger.info("–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞ –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π —á–µ—Ä–µ–∑ Replit API")
        return True
    except ImportError:
        logger.warning("–ù–µ —É–¥–∞–ª–æ—Å—å –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å report_progress –∏–∑ antml.function_calls")
        
        # –ï—Å–ª–∏ –º—ã –≤ —Å—Ä–µ–¥–µ, –≥–¥–µ –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ antml, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—É—é –≤–µ—Ä—Å–∏—é
        try:
            # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –≤–µ—Ä—Å–∏—é —Ñ—É–Ω–∫—Ü–∏–∏ –∏–∑ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ Replit Blueprint
            import sys
            from replit_blueprint_tools import report_progress as bp_rp
            report_progress = bp_rp
            logger.info("–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞ –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π —á–µ—Ä–µ–∑ Blueprint –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã")
            return True
        except ImportError:
            # –ï—Å–ª–∏ –Ω–∏—á–µ–≥–æ –Ω–µ —É–¥–∞–ª–æ—Å—å –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å, —Å–æ–∑–¥–∞–µ–º fallback —Ñ—É–Ω–∫—Ü–∏—é
            logger.warning("–ù–µ —É–¥–∞–ª–æ—Å—å –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å report_progress –∏–∑ blueprints")
            
            def fallback_report_progress(data):
                if isinstance(data, dict) and 'summary' in data:
                    print(f"\n--- –°–û–û–ë–©–ï–ù–ò–ï –í –ß–ê–¢ ---\n{data['summary']}\n----------------------\n")
                else:
                    print(f"\n--- –°–û–û–ë–©–ï–ù–ò–ï –í –ß–ê–¢ ---\n{data}\n----------------------\n")
                return True
            
            report_progress = fallback_report_progress
            logger.warning("–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤—ã–≤–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –∫–æ–Ω—Å–æ–ª—å –≤–º–µ—Å—Ç–æ —á–∞—Ç–∞")
            return False

def send_message_to_chat(message: Union[str, Dict[str, Any]]) -> bool:
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å Replit.
    
    Args:
        message: –°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è (—Å—Ç—Ä–æ–∫–∞ –∏–ª–∏ —Å–ª–æ–≤–∞—Ä—å —Å –∫–ª—é—á–æ–º 'summary')
    
    Returns:
        bool: True –µ—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ, –∏–Ω–∞—á–µ False
    """
    global report_progress
    
    # –ï—Å–ª–∏ —Ñ—É–Ω–∫—Ü–∏—è report_progress –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞, –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –µ–µ
    if report_progress is None:
        initialize_report_function()
    
    try:
        # –ï—Å–ª–∏ –ø–µ—Ä–µ–¥–∞–Ω–∞ —Å—Ç—Ä–æ–∫–∞, –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ —Å–ª–æ–≤–∞—Ä—å
        if isinstance(message, str):
            message_data = {"summary": message}
        else:
            message_data = message
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑ —Ñ—É–Ω–∫—Ü–∏—é report_progress
        report_progress(message_data)
        logger.info("–°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ —á–∞—Ç")
        return True
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç: {e}")
        return False

def send_task_to_chat(task_name: str, status: str = "TODO", priority: str = "–°—Ä–µ–¥–Ω–∏–π",
                    stats_total: int = 15, stats_completed: int = 5, stats_in_progress: int = 3,
                    priority_high: int = 4, priority_medium: int = 6, priority_low: int = 5) -> bool:
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–¥–∞—á–µ –≤ —á–∞—Ç —Å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π.
    
    Args:
        task_name: –ù–∞–∑–≤–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏
        status: –°—Ç–∞—Ç—É—Å –∑–∞–¥–∞—á–∏
        priority: –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç –∑–∞–¥–∞—á–∏
        stats_total: –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–¥–∞—á
        stats_completed: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞—á
        stats_in_progress: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–¥–∞—á –≤ —Ä–∞–±–æ—Ç–µ
        priority_high: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–¥–∞—á —Å –≤—ã—Å–æ–∫–∏–º –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–º
        priority_medium: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–¥–∞—á —Å–æ —Å—Ä–µ–¥–Ω–∏–º –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–º  
        priority_low: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–¥–∞—á —Å –Ω–∏–∑–∫–∏–º –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–º
    
    Returns:
        bool: True –µ—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ, –∏–Ω–∞—á–µ False
    """
    # –°–æ–∑–¥–∞–µ–º URL-—Å–æ–≤–º–µ—Å—Ç–∏–º–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏
    url_name = task_name.lower().replace(" ", "-")
    
    # –í—ã—á–∏—Å–ª—è–µ–º –ø—Ä–æ—Ü–µ–Ω—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–µ–∑–∞–ø—É—â–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞—á
    completion_percentage = int((stats_completed / stats_total) * 100) if stats_total > 0 else 0
    not_started = stats_total - stats_completed - stats_in_progress
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    message = (
        f"‚úÖ **–ó–∞–¥–∞—á–∞ —Å–æ–∑–¥–∞–Ω–∞**: {task_name}\n"
        f"üìã –°—Ç–∞—Ç—É—Å: {status}\n"
        f"üî¥ –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç: {priority}\n"
        f"üåê –ü—Ä–æ—Å–º–æ—Ç—Ä: http://0.0.0.0:5000/tasks/{url_name}\n\n"
        f"üìä **–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –∑–∞–¥–∞—á–∞–º**:\n"
        f"üìù –í—Å–µ–≥–æ –∑–∞–¥–∞—á: {stats_total}\n"
        f"‚úÖ –í—ã–ø–æ–ª–Ω–µ–Ω–æ: {stats_completed} ({completion_percentage}%)\n"
        f"‚è≥ –í –ø—Ä–æ—Ü–µ—Å—Å–µ: {stats_in_progress}\n"
        f"üÜï –ù–µ –Ω–∞—á–∞—Ç–æ: {not_started}\n\n"
        f"üî¢ **–ü–æ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞–º**:\n"
        f"üî¥ –í—ã—Å–æ–∫–∏–π: {priority_high}\n"
        f"üü† –°—Ä–µ–¥–Ω–∏–π: {priority_medium}\n"
        f"üü¢ –ù–∏–∑–∫–∏–π: {priority_low}\n"
    )
    
    return send_message_to_chat(message)

def send_incident_to_chat(incident_name: str, status: str = "INVESTIGATING", severity: str = "–í—ã—Å–æ–∫–∏–π",
                         five_why_analysis: Optional[str] = None,
                         stats_total: int = 5, stats_resolved: int = 2, 
                         stats_in_progress: int = 2, stats_new: int = 1) -> bool:
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∏–Ω—Ü–∏–¥–µ–Ω—Ç–µ –≤ —á–∞—Ç —Å –∞–Ω–∞–ª–∏–∑–æ–º 5-–ø–æ—á–µ–º—É.
    
    Args:
        incident_name: –ù–∞–∑–≤–∞–Ω–∏–µ –∏–Ω—Ü–∏–¥–µ–Ω—Ç–∞
        status: –°—Ç–∞—Ç—É—Å –∏–Ω—Ü–∏–¥–µ–Ω—Ç–∞
        severity: –°–µ—Ä—å–µ–∑–Ω–æ—Å—Ç—å –∏–Ω—Ü–∏–¥–µ–Ω—Ç–∞
        five_why_analysis: –ê–Ω–∞–ª–∏–∑ 5-–ø–æ—á–µ–º—É (—Å—Ç—Ä–æ–∫–∞ —Å —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º)
        stats_total: –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–Ω—Ü–∏–¥–µ–Ω—Ç–æ–≤
        stats_resolved: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ—à–µ–Ω–Ω—ã—Ö –∏–Ω—Ü–∏–¥–µ–Ω—Ç–æ–≤
        stats_in_progress: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–Ω—Ü–∏–¥–µ–Ω—Ç–æ–≤ –≤ —Ä–∞–±–æ—Ç–µ
        stats_new: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–æ–≤—ã—Ö –∏–Ω—Ü–∏–¥–µ–Ω—Ç–æ–≤
    
    Returns:
        bool: True –µ—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ, –∏–Ω–∞—á–µ False
    """
    # –°–æ–∑–¥–∞–µ–º URL-—Å–æ–≤–º–µ—Å—Ç–∏–º–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∏–Ω—Ü–∏–¥–µ–Ω—Ç–∞
    url_name = incident_name.lower().replace(" ", "-")
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    message = (
        f"üö® **–ò–Ω—Ü–∏–¥–µ–Ω—Ç —Å–æ–∑–¥–∞–Ω**: {incident_name}\n"
        f"üìã –°—Ç–∞—Ç—É—Å: {status}\n"
        f"‚ö†Ô∏è –°–µ—Ä—å–µ–∑–Ω–æ—Å—Ç—å: {severity}\n"
        f"üåê –ü—Ä–æ—Å–º–æ—Ç—Ä: http://0.0.0.0:5000/incidents/{url_name}\n\n"
    )
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∞–Ω–∞–ª–∏–∑ 5-–ø–æ—á–µ–º—É, –µ—Å–ª–∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω
    if five_why_analysis:
        message += f"üîç **–ê–Ω–∞–ª–∏–∑ 5 –ø–æ—á–µ–º—É**:\n{five_why_analysis}\n\n"
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏–Ω—Ü–∏–¥–µ–Ω—Ç–æ–≤
    message += (
        f"üìä **–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏–Ω—Ü–∏–¥–µ–Ω—Ç–æ–≤**:\n"
        f"üö® –í—Å–µ–≥–æ –∏–Ω—Ü–∏–¥–µ–Ω—Ç–æ–≤: {stats_total}\n"
        f"‚úÖ –†–µ—à–µ–Ω–æ: {stats_resolved}\n"
        f"‚è≥ –í –ø—Ä–æ—Ü–µ—Å—Å–µ: {stats_in_progress}\n"
        f"üÜï –ù–æ–≤—ã—Ö: {stats_new}\n\n"
    )
    
    return send_message_to_chat(message)

def send_hypothesis_to_chat(hypothesis_name: str, status: str = "PROPOSED",
                          rat: Optional[str] = None, falsifiability: Optional[str] = None,
                          stats_total: int = 3, stats_confirmed: int = 1, 
                          stats_rejected: int = 0, stats_testing: int = 2) -> bool:
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≥–∏–ø–æ—Ç–µ–∑–µ –≤ —á–∞—Ç —Å RAT –∏ –∫—Ä–∏—Ç–µ—Ä–∏–µ–º —Ñ–∞–ª—å—Å–∏—Ñ–∏—Ü–∏—Ä—É–µ–º–æ—Å—Ç–∏.
    
    Args:
        hypothesis_name: –ù–∞–∑–≤–∞–Ω–∏–µ –≥–∏–ø–æ—Ç–µ–∑—ã
        status: –°—Ç–∞—Ç—É—Å –≥–∏–ø–æ—Ç–µ–∑—ã
        rat: RAT (Rapid Assumption Testing) —Ç–µ–∫—Å—Ç
        falsifiability: –ö—Ä–∏—Ç–µ—Ä–∏–π —Ñ–∞–ª—å—Å–∏—Ñ–∏—Ü–∏—Ä—É–µ–º–æ—Å—Ç–∏ —Ç–µ–∫—Å—Ç
        stats_total: –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≥–∏–ø–æ—Ç–µ–∑
        stats_confirmed: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã—Ö –≥–∏–ø–æ—Ç–µ–∑
        stats_rejected: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–ø—Ä–æ–≤–µ—Ä–≥–Ω—É—Ç—ã—Ö –≥–∏–ø–æ—Ç–µ–∑
        stats_testing: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≥–∏–ø–æ—Ç–µ–∑ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    
    Returns:
        bool: True –µ—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ, –∏–Ω–∞—á–µ False
    """
    # –°–æ–∑–¥–∞–µ–º URL-—Å–æ–≤–º–µ—Å—Ç–∏–º–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–∏–ø–æ—Ç–µ–∑—ã
    url_name = hypothesis_name.lower().replace(" ", "-")
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    message = (
        f"üí° **–ì–∏–ø–æ—Ç–µ–∑–∞ —Å–æ–∑–¥–∞–Ω–∞**: {hypothesis_name}\n"
        f"üìã –°—Ç–∞—Ç—É—Å: {status}\n"
        f"üåê –ü—Ä–æ—Å–º–æ—Ç—Ä: http://0.0.0.0:5000/hypotheses/{url_name}\n\n"
    )
    
    # –î–æ–±–∞–≤–ª—è–µ–º RAT, –µ—Å–ª–∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω
    if rat:
        message += f"üî¨ **RAT (Rapid Assumption Testing)**:\n{rat}\n\n"
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫—Ä–∏—Ç–µ—Ä–∏–π —Ñ–∞–ª—å—Å–∏—Ñ–∏—Ü–∏—Ä—É–µ–º–æ—Å—Ç–∏, –µ—Å–ª–∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω
    if falsifiability:
        message += f"‚ùå **–ö—Ä–∏—Ç–µ—Ä–∏–π —Ñ–∞–ª—å—Å–∏—Ñ–∏—Ü–∏—Ä—É–µ–º–æ—Å—Ç–∏**:\n{falsifiability}\n\n"
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –≥–∏–ø–æ—Ç–µ–∑
    message += (
        f"üìä **–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≥–∏–ø–æ—Ç–µ–∑**:\n"
        f"üí° –í—Å–µ–≥–æ –≥–∏–ø–æ—Ç–µ–∑: {stats_total}\n"
        f"‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ: {stats_confirmed}\n"
        f"‚ùå –û–ø—Ä–æ–≤–µ—Ä–≥–Ω—É—Ç–æ: {stats_rejected}\n"
        f"‚è≥ –í –ø—Ä–æ—Ü–µ—Å—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏: {stats_testing}\n\n"
    )
    
    return send_message_to_chat(message)