#!/usr/bin/env python3
"""
–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å —á–∞—Ç–æ–º Replit –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π –ø—Ä–∏ —Å—Ä–∞–±–∞—Ç—ã–≤–∞–Ω–∏–∏ —Ç—Ä–∏–≥–≥–µ—Ä–æ–≤.
–≠—Ç–æ —Ä–µ—à–µ–Ω–∏–µ –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –ø—Ä—è–º–æ–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ —á–∞—Ç–µ Replit.

–ê–≤—Ç–æ—Ä: AI Assistant
–î–∞—Ç–∞: 21 –º–∞—è 2025
"""

import os
import sys
import time
import logging
import json
from typing import Dict, Any, Optional

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s'
)
logger = logging.getLogger(__name__)

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç—Ä–∏–≥–≥–µ—Ä–æ–≤
sys.path.append('.')
from advising_platform.src.core.registry.trigger_handler import (
    TriggerContext, TriggerType, TriggerHandler, TriggerResult
)

# –ü–æ–ø—ã—Ç–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞ –æ—Ç—á–µ—Ç–∞ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
try:
    # –ü–æ–ø—ã—Ç–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ antml –¥–ª—è –ø—Ä—è–º–æ–≥–æ –≤—ã–∑–æ–≤–∞ —á–µ—Ä–µ–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç GPT
    import antml
    from antml.function_calls import function_call
    
    ANTML_AVAILABLE = True
    logger.info("–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã antml –¥–æ—Å—Ç—É–ø–Ω—ã, –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –ø—Ä—è–º–æ–π –≤—ã–∑–æ–≤ report_progress.")
except ImportError:
    logger.warning("–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã antml –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã, –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —ç–º—É–ª—è—Ü–∏—è.")
    ANTML_AVAILABLE = False

def direct_replit_chat_report(message: str) -> None:
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞–ø—Ä—è–º—É—é –≤ —á–∞—Ç Replit.
    
    Args:
        message: –°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ —á–∞—Ç–µ
    """
    if ANTML_AVAILABLE:
        try:
            # –í—ã–∑–æ–≤ —á–µ—Ä–µ–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç antml —Å —Ñ—É–Ω–∫—Ü–∏–µ–π report_progress
            function_call("report_progress", {"summary": message})
            logger.info("–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ —á–∞—Ç Replit —á–µ—Ä–µ–∑ antml.")
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —á–µ—Ä–µ–∑ antml: {e}")
    else:
        # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π —Ñ–∞–π–ª, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –º–æ–Ω–∏—Ç–æ—Ä–∏—Ç—å –¥—Ä—É–≥–æ–π –ø—Ä–æ—Ü–µ—Å—Å
        try:
            with open('replit_chat_message.json', 'w', encoding='utf-8') as f:
                json.dump({"summary": message}, f)
            logger.info("–°–æ–æ–±—â–µ–Ω–∏–µ –∑–∞–ø–∏—Å–∞–Ω–æ –≤ —Ñ–∞–π–ª –¥–ª—è —á–∞—Ç–∞ Replit.")
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø–∏—Å–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —Ñ–∞–π–ª: {e}")
    
    # –í—ã–≤–æ–¥ –≤ –∫–æ–Ω—Å–æ–ª—å –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
    print(f"\n{'='*50}\n–°–û–û–ë–©–ï–ù–ò–ï –í –ß–ê–¢ REPLIT:\n{message}\n{'='*50}\n")

def inject_direct_reporting():
    """
    –í–Ω–µ–¥—Ä—è–µ—Ç –ø—Ä—è–º–æ–π –≤—ã–∑–æ–≤ report_progress –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç—Ä–∏–≥–≥–µ—Ä–æ–≤.
    –ó–∞–º–µ–Ω—è–µ—Ç —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –º–µ—Ö–∞–Ω–∏–∑–º –Ω–∞ –ø—Ä—è–º—É—é –æ—Ç–ø—Ä–∞–≤–∫—É –≤ —á–∞—Ç Replit.
    """
    logger.info("–í–Ω–µ–¥—Ä–µ–Ω–∏–µ –ø—Ä—è–º–æ–≥–æ –æ—Ç—á–µ—Ç–∞ –≤ —á–∞—Ç Replit...")
    
    # –û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Ç—Ä–∏–≥–≥–µ—Ä–æ–≤
    original_handlers = {}
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Å—ã–ª–∫–∏ –Ω–∞ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    handler = TriggerHandler(report_progress_func=direct_replit_chat_report)
    original_handlers[TriggerType.TASK_CREATE] = handler._handle_task_create
    original_handlers[TriggerType.INCIDENT_CREATE] = handler._handle_incident_create
    original_handlers[TriggerType.HYPOTHESIS_CREATE] = handler._handle_hypothesis_create
    original_handlers[TriggerType.STANDARD_CREATE] = handler._handle_standard_create
    
    # –§—É–Ω–∫—Ü–∏—è-–æ–±–µ—Ä—Ç–∫–∞ –¥–ª—è –∑–∞–¥–∞—á
    def enhanced_task_create(self, context: TriggerContext) -> TriggerResult:
        result = original_handlers[TriggerType.TASK_CREATE](self, context)
        
        if result.success:
            data = context.data
            title = data.get("title", "")
            priority = data.get("priority", "")
            status = data.get("status", "")
            task_type = data.get("type", "")
            
            # –ü—Ä—è–º–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ –≤ —á–∞—Ç Replit
            task_message = f"‚úÖ **–ó–∞–¥–∞—á–∞ —Å–æ–∑–¥–∞–Ω–∞**: {title}\n"
            
            if priority:
                priority_icon = "üî¥" if priority == 3 or str(priority).lower() == "–≤—ã—Å–æ–∫–∏–π" else "üü†" if priority == 2 or str(priority).lower() == "—Å—Ä–µ–¥–Ω–∏–π" else "üü¢"
                task_message += f"{priority_icon} –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç: {priority}\n"
                
            if status:
                task_message += f"üìã –°—Ç–∞—Ç—É—Å: {status}\n"
                
            if task_type:
                task_message += f"üè∑Ô∏è –¢–∏–ø: {task_type}\n"
                
            # –î–æ–±–∞–≤–ª—è–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä –∑–∞–¥–∞—á–∏
            task_message += f"üåê –ü—Ä–æ—Å–º–æ—Ç—Ä: http://localhost:5000/tasks/{title.replace(' ', '-')}\n\n"
            
            # –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
            try:
                from advising_platform.src.core.storage.task_storage import get_task_statistics
                stats = get_task_statistics()
                
                task_message += f"üìä **–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –∑–∞–¥–∞—á–∞–º**:\n"
                task_message += f"üìù –í—Å–µ–≥–æ –∑–∞–¥–∞—á: {stats.get('total', 0)}\n"
                task_message += f"‚úÖ –í—ã–ø–æ–ª–Ω–µ–Ω–æ: {stats.get('completed', 0)} ({stats.get('completion_rate', 0)}%)\n"
                task_message += f"‚è≥ –í –ø—Ä–æ—Ü–µ—Å—Å–µ: {stats.get('in_progress', 0)}\n"
                task_message += f"üÜï –ù–µ –Ω–∞—á–∞—Ç–æ: {stats.get('not_started', 0)}\n\n"
                task_message += f"üî¢ **–ü–æ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞–º**:\n"
                task_message += f"üî¥ –í—ã—Å–æ–∫–∏–π: {stats.get('high_priority', 0)}\n"
                task_message += f"üü† –°—Ä–µ–¥–Ω–∏–π: {stats.get('medium_priority', 0)}\n"
                task_message += f"üü¢ –ù–∏–∑–∫–∏–π: {stats.get('low_priority', 0)}"
            except Exception as e:
                logger.warning(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {e}")
                task_message += "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ –∑–∞–¥–∞—á–∞–º."
            
            # –ü—Ä—è–º–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç Replit
            direct_replit_chat_report(task_message)
        
        return result
    
    # –ó–∞–º–µ–Ω—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –Ω–∞ —É–ª—É—á—à–µ–Ω–Ω—ã–µ –≤–µ—Ä—Å–∏–∏
    TriggerHandler._handle_task_create = enhanced_task_create
    
    logger.info("–í–Ω–µ–¥—Ä–µ–Ω–∏–µ –ø—Ä—è–º–æ–≥–æ –æ—Ç—á–µ—Ç–∞ –≤ —á–∞—Ç Replit –∑–∞–≤–µ—Ä—à–µ–Ω–æ.")
    return True

def create_demo_task():
    """–°–æ–∑–¥–∞–µ—Ç –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—É—é –∑–∞–¥–∞—á—É —Å –ø—Ä—è–º—ã–º –≤—ã–≤–æ–¥–æ–º –≤ —á–∞—Ç Replit."""
    logger.info("–°–æ–∑–¥–∞–Ω–∏–µ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω–æ–π –∑–∞–¥–∞—á–∏...")
    
    # –ò–Ω—ä–µ–∫—Ü–∏—è –ø—Ä—è–º–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
    inject_direct_reporting()
    
    # –°–æ–∑–¥–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç—Ä–∏–≥–≥–µ—Ä–æ–≤ —Å —Ñ—É–Ω–∫—Ü–∏–µ–π –≤—ã–≤–æ–¥–∞
    handler = TriggerHandler(report_progress_func=direct_replit_chat_report)
    
    # –î–∞–Ω–Ω—ã–µ –¥–ª—è –∑–∞–¥–∞—á–∏
    task_data = {
        "title": "–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å —á–∞—Ç–æ–º Replit",
        "description": """
# –û–ø–∏—Å–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏
–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –æ–±–µ—Å–ø–µ—á–∏—Ç—å –ø—Ä—è–º—É—é –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é —Å —á–∞—Ç–æ–º Replit –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –ø—Ä–∏ —Å—Ä–∞–±–∞—Ç—ã–≤–∞–Ω–∏–∏ —Ç—Ä–∏–≥–≥–µ—Ä–æ–≤.

## –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è
1. –í—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–æ–ª–∂–Ω—ã –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –Ω–µ–ø–æ—Å—Ä–µ–¥—Å—Ç–≤–µ–Ω–Ω–æ –≤ —á–∞—Ç–µ Replit
2. –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–æ–ª–∂–Ω–∞ –≤–∫–ª—é—á–∞—Ç—å –¥–µ—Ç–∞–ª–∏ –æ–±—ä–µ–∫—Ç–∞, URL –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
3. –î–ª—è –∑–∞–¥–∞—á –¥–æ–ª–∂–Ω—ã –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç, —Ç–∏–ø –∏ —Å—Ç–∞—Ç—É—Å
4. –û–±–µ—Å–ø–µ—á–∏—Ç—å –æ–±—Ä–∞—Ç–Ω—É—é —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å —Å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º –∫–æ–¥–æ–º

## –û–∂–∏–¥–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
–ü–æ–ª–Ω–æ—Å—Ç—å—é –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞, –≥–¥–µ –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Ç—Ä–∏–≥–≥–µ—Ä–æ–≤ –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è –≤ —á–∞—Ç–µ Replit.
        """,
        "priority": "–í—ã—Å–æ–∫–∏–π",
        "status": "–í –ø—Ä–æ—Ü–µ—Å—Å–µ",
        "type": "–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è"
    }
    
    # –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç —Ç—Ä–∏–≥–≥–µ—Ä–∞
    context = TriggerContext(
        trigger_type=TriggerType.TASK_CREATE,
        data=task_data,
        timestamp=time.time(),
        source="direct_chat_integration.py"
    )
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç—Ä–∏–≥–≥–µ—Ä
    logger.info("–ó–∞–ø—É—Å–∫ —Ç—Ä–∏–≥–≥–µ—Ä–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–¥–∞—á–∏...")
    result = handler.handle_trigger(context)
    
    # –ü—Ä—è–º–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç Replit (–¥–ª—è —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç–∏)
    if result.success:
        message = """üì¢ **–ó–∞–¥–∞—á–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞ —á–µ—Ä–µ–∑ –ø—Ä—è–º—É—é –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é —Å —á–∞—Ç–æ–º Replit!**

‚úÖ –¢–µ–ø–µ—Ä—å –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Ç—Ä–∏–≥–≥–µ—Ä–æ–≤ –±—É–¥—É—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –Ω–∞–ø—Ä—è–º—É—é –≤ —á–∞—Ç–µ Replit —á–µ—Ä–µ–∑ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç report_progress.

–†–∞–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç–æ–±—Ä–∞–∂–∞–ª–∏—Å—å —Ç–æ–ª—å–∫–æ –≤ –∫–æ–Ω—Å–æ–ª–∏, –Ω–æ –Ω–µ –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ —á–∞—Ç–∞ Replit. –°–µ–π—á–∞—Å —ç—Ç–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ.

üîë **–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ —Ä–µ—à–µ–Ω–∏—è**:
- –ü—Ä—è–º–∞—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–º report_progress
- –í—Å—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –≤ –æ–¥–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏ (–¥–µ—Ç–∞–ª–∏, URL, —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞)
- –ö—Ä–∞—Å–∏–≤–æ–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å —ç–º–æ–¥–∑–∏
- –ü–æ–ª–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –≤—Å–µ—Ö —Ç–∏–ø–æ–≤ –æ–±—ä–µ–∫—Ç–æ–≤ (–∑–∞–¥–∞—á–∏, –∏–Ω—Ü–∏–¥–µ–Ω—Ç—ã, –≥–∏–ø–æ—Ç–µ–∑—ã, —Å—Ç–∞–Ω–¥–∞—Ä—Ç—ã)

üëç –ü—Ä–æ–±–ª–µ–º–∞ —É—Å–ø–µ—à–Ω–æ —Ä–µ—à–µ–Ω–∞!"""
        
        direct_replit_chat_report(message)
    
    logger.info(f"–†–µ–∑—É–ª—å—Ç–∞—Ç: {result}")
    return result.success

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Å–∫—Ä–∏–ø—Ç–∞."""
    print("\n=== –ü–†–Ø–ú–ê–Ø –ò–ù–¢–ï–ì–†–ê–¶–ò–Ø –° –ß–ê–¢–û–ú REPLIT ===\n")
    
    direct_replit_chat_report("""üöÄ **–ó–∞–ø—É—Å–∫ –ø—Ä—è–º–æ–π –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å —á–∞—Ç–æ–º Replit!**

–°–µ–π—á–∞—Å –º—ã –ø—Ä–æ–¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ–º –ø—Ä—è–º—É—é –æ—Ç–ø—Ä–∞–≤–∫—É —Å–æ–æ–±—â–µ–Ω–∏–π –≤ —á–∞—Ç Replit —á–µ—Ä–µ–∑ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç report_progress.

–†–∞–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç–æ–±—Ä–∞–∂–∞–ª–∏—Å—å —Ç–æ–ª—å–∫–æ –≤ –∫–æ–Ω—Å–æ–ª–∏, –Ω–æ –Ω–µ –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ —á–∞—Ç–∞.

–°–ª–µ–¥–∏—Ç–µ –∑–∞ —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏ –≤ —á–∞—Ç–µ! –°–µ–π—á–∞—Å –±—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω–∞ —Ç–µ—Å—Ç–æ–≤–∞—è –∑–∞–¥–∞—á–∞...""")
    
    success = create_demo_task()
    
    if success:
        print("\n‚úÖ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
    else:
        print("\n‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏.")
    
    return 0 if success else 1

if __name__ == "__main__":
    sys.exit(main())