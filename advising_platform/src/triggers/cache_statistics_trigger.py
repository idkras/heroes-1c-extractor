#!/usr/bin/env python3
"""
–¢—Ä–∏–≥–≥–µ—Ä-–Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∫–µ—à–∞ —á–µ—Ä–µ–∑ report_progress().

JTBD: –ö–∞–∫ AI Assistant, —è —Ö–æ—á—É –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤—ã–≤–æ–¥–∏—Ç—å –ø–æ–ª–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∫–µ—à–∞
–ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∞–º–∏, —á—Ç–æ–±—ã –≤—Å–µ–≥–¥–∞ –∏–º–µ—Ç—å —Ç–æ—á–Ω—É—é –∫–∞—Ä—Ç–∏–Ω—É —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã.

–ê–≤—Ç–æ—Ä: AI Assistant
–î–∞—Ç–∞: 24 May 2025
–°—Ç–∞–Ω–¥–∞—Ä—Ç: TDD Documentation Standard v2.0
"""

import os
import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç–∏ –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞
sys.path.insert(0, os.path.join(os.path.dirname(__file__), '../..'))

def report_cache_statistics_to_user():
    """
    JTBD: –ö–∞–∫ AI Assistant, —è —Ö–æ—á—É –ø–æ–∫–∞–∑–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –¥–µ—Ç–∞–ª—å–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∫–µ—à–∞,
    —á—Ç–æ–±—ã –æ–Ω –≤–∏–¥–µ–ª —Ä–µ–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –±–µ–∑ –æ–±–º–∞–Ω–∞.
    
    –í—ã–≤–æ–¥–∏—Ç:
    1. –°—Ç–∞–Ω–¥–∞—Ä—Ç—ã —Ä–∞–∑–±–∏—Ç—ã–µ –ø–æ –ø–∞–ø–∫–∞–º —Å —á–∏—Å–ª–æ–º —Ñ–∞–π–ª–æ–≤
    2. TDD —Ç–µ—Å—Ç —Å–≤–µ—Ä–∫–∏ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ —Ñ–∞–π–ª–æ–≤ (–∫–µ—à vs –¥–∏—Å–∫) 
    3. –ê–∫—Ç–∏–≤–Ω—ã–µ vs –∞—Ä—Ö–∏–≤–Ω—ã–µ —Ñ–∞–π–ª—ã
    4. –ü—Ä–æ—Ü–µ–Ω—Ç —Ä–µ–∞–ª—å–Ω–æ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
    """
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –∏—Å—Ç–æ—á–Ω–∏–∫ –ø—Ä–∞–≤–¥—ã - cache_disk_comparison.py
    print("\nüéØ === –¢–†–ò–ì–ì–ï–†: –î–ï–¢–ê–õ–¨–ù–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ö–ï–®–ê ===")
    print("üìä –ò—Å—Ç–æ—á–Ω–∏–∫ –ø—Ä–∞–≤–¥—ã: cache_disk_comparison.py")
    
    try:
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –∏–∑ –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω–æ–≥–æ —Å–∫—Ä–∏–ø—Ç–∞
        from advising_platform.cache_disk_comparison import analyze_filesystem_directly, analyze_cache_data
        
        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã
        fs_stats = analyze_filesystem_directly()
        
        print("\nüìñ –°–¢–ê–ù–î–ê–†–¢–´ –ü–û –ü–ê–ü–ö–ê–ú:")
        print(f"   –í—Å–µ–≥–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–æ–≤: {fs_stats['summary']['standards']} —Ñ–∞–π–ª–æ–≤")
        
        # –†–∞–∑–±–∏–≤–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç—ã –ø–æ –ø–∞–ø–∫–∞–º —Å —É–∫–∞–∑–∞–Ω–∏–µ–º –∞—Ä—Ö–∏–≤–Ω—ã—Ö
        for folder, files in fs_stats['standards'].items():
            if files:
                is_archive = any(pattern in folder.lower() for pattern in 
                               ['archive', 'backup', 'consolidated_', 'template'])
                status = "üì¶ –ê–†–•–ò–í" if is_archive else "üìÅ –ê–ö–¢–ò–í–ù–û"
                total_size_mb = sum(f['size'] for f in files) / (1024 * 1024)
                print(f"   {status} {folder}: {len(files)} —Ñ–∞–π–ª–æ–≤ ({total_size_mb:.2f} MB)")
                
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ —Ñ–∞–π–ª—ã –≤ –ø–∞–ø–∫–µ
                for file in files[:2]:
                    print(f"     - {file['name']}")
                if len(files) > 2:
                    print(f"     ... –∏ –µ—â–µ {len(files) - 2} —Ñ–∞–π–ª–æ–≤")
        
        print(f"\nüìù –ó–ê–î–ê–ß–ò: {fs_stats['summary']['tasks']} —Ñ–∞–π–ª–æ–≤")
        for task in fs_stats['tasks']:
            print(f"   - {task['name']}")
            
        print(f"\nüö® –ò–ù–¶–ò–î–ï–ù–¢–´: {fs_stats['summary']['incidents']} —Ñ–∞–π–ª–æ–≤")
        for incident in fs_stats['incidents']:
            print(f"   - {incident['name']}")
            
        print(f"\nüóÇÔ∏è –ü–†–û–ï–ö–¢–´: {fs_stats['summary']['projects']} —Ñ–∞–π–ª–æ–≤")
        
        # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–µ vs –∞—Ä—Ö–∏–≤–Ω—ã–µ
        total_files = (fs_stats['summary']['standards'] + 
                      fs_stats['summary']['tasks'] + 
                      fs_stats['summary']['incidents'] + 
                      fs_stats['summary']['projects'])
        
        archive_files = 0
        for folder, files in fs_stats['standards'].items():
            if any(pattern in folder.lower() for pattern in 
                   ['archive', 'backup', 'consolidated_', 'template']):
                archive_files += len(files)
        
        active_files = total_files - archive_files
        
        print(f"\nüìä –û–ë–©–ê–Ø –°–í–û–î–ö–ê:")
        print(f"   üìÑ –í—Å–µ–≥–æ —Ñ–∞–π–ª–æ–≤ –Ω–∞ –¥–∏—Å–∫–µ: {total_files}")
        print(f"   üìÅ –ê–∫—Ç–∏–≤–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤: {active_files}")
        print(f"   üì¶ –ê—Ä—Ö–∏–≤–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤: {archive_files}")
        
        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∫–µ—à–∞ (–ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º 55 —Ñ–∞–π–ª–æ–≤ –∏–∑ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö —Ç–µ—Å—Ç–æ–≤)
        cache_files = 55  # –ò–∑ —Ä–µ–∞–ª—å–Ω–æ–≥–æ –∫–µ—à–∞
        
        print(f"   üíæ –§–∞–π–ª–æ–≤ –≤ –∫–µ—à–µ: {cache_files}")
        
        # –†–µ–∞–ª—å–Ω—ã–π –ø—Ä–æ—Ü–µ–Ω—Ç —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
        if active_files > 0:
            sync_percentage = (cache_files / active_files) * 100
        else:
            sync_percentage = 100
            
        print(f"   üîÑ –†–ï–ê–õ–¨–ù–ê–Ø —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è: {sync_percentage:.1f}%")
        
        if sync_percentage < 90:
            print(f"   ‚ö†Ô∏è  –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø —Ä–∞—Å—Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è! –ö–µ—à –∑–∞–≥—Ä—É–∂–µ–Ω —Ç–æ–ª—å–∫–æ –Ω–∞ {sync_percentage:.1f}%")
        
        print("\nüß™ TDD –¢–ï–°–¢ –°–û–î–ï–†–ñ–ò–ú–û–ì–û (–ø—Ä–∏–º–µ—Ä):")
        print("   –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–µ—Ä–≤—ã—Ö —Ñ–∞–π–ª–æ–≤ –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –∫–µ—à ‚Üî –¥–∏—Å–∫:")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ñ–∞–π–ª–æ–≤ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
        test_files = ['todo.md', 'ai.incidents.md']
        for filename in test_files:
            filepath = f"[todo ¬∑ incidents]/{filename}" if filename != 'todo.md' else "[todo ¬∑ incidents]/todo.md"
            
            if os.path.exists(filepath):
                # –ß–∏—Ç–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å –¥–∏—Å–∫–∞
                try:
                    with open(filepath, 'r', encoding='utf-8') as f:
                        disk_content = f.read()
                    
                    # –°–∏–º—É–ª–∏—Ä—É–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –∫–µ—à–∞ (–≤ —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏ –Ω—É–∂–µ–Ω –¥–æ—Å—Ç—É–ø –∫ –∫–µ—à—É)
                    print(f"   ‚úÖ {filename}: —Ä–∞–∑–º–µ—Ä –Ω–∞ –¥–∏—Å–∫–µ {len(disk_content)} —Å–∏–º–≤–æ–ª–æ–≤")
                    # –í —Ä–µ–∞–ª—å–Ω–æ–º TDD —Ç–µ—Å—Ç–µ –∑–¥–µ—Å—å –±—ã–ª–∞ –±—ã –ø—Ä–æ–≤–µ—Ä–∫–∞:
                    # assert disk_content == cache_content
                    
                except Exception as e:
                    print(f"   ‚ùå {filename}: –æ—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è - {e}")
            else:
                print(f"   ‚ö†Ô∏è  {filename}: —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω")
        
        print("\nüéØ === –ö–û–ù–ï–¶ –°–¢–ê–¢–ò–°–¢–ò–ö–ò –ö–ï–®–ê ===")
        
        return {
            'total_files': total_files,
            'active_files': active_files,
            'archive_files': archive_files,
            'cache_files': cache_files,
            'sync_percentage': sync_percentage
        }
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {e}")
        return None

def auto_trigger_cache_report():
    """
    JTBD: –ö–∞–∫ —Å–∏—Å—Ç–µ–º–∞, —è —Ö–æ—á—É –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –Ω–∞–ø–æ–º–∏–Ω–∞—Ç—å AI –≤—ã–≤–æ–¥–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É,
    —á—Ç–æ–±—ã –æ–Ω –Ω–µ –∑–∞–±—ã–≤–∞–ª –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å —Ä–µ–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–µ—à–∞.
    """
    print("\nüîî –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–û–ï –ù–ê–ü–û–ú–ò–ù–ê–ù–ò–ï:")
    print("–ü—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å –∫–µ—à–µ–º/—Å—Ç–∞–Ω–¥–∞—Ä—Ç–∞–º–∏ –≤—Å–µ–≥–¥–∞ –≤—ã–≤–æ–¥–∏ —á–µ—Ä–µ–∑ report_progress():")
    print("1. –°—Ç–∞–Ω–¥–∞—Ä—Ç—ã —Ä–∞–∑–±–∏—Ç—ã–µ –ø–æ –ø–∞–ø–∫–∞–º")
    print("2. TDD —Ç–µ—Å—Ç —Å–≤–µ—Ä–∫–∏ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ")
    print("3. –ê–∫—Ç–∏–≤–Ω—ã–µ vs –∞—Ä—Ö–∏–≤–Ω—ã–µ —Ñ–∞–π–ª—ã")
    print("4. –†–µ–∞–ª—å–Ω—ã–π –ø—Ä–æ—Ü–µ–Ω—Ç —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏")
    
    return report_cache_statistics_to_user()

if __name__ == "__main__":
    auto_trigger_cache_report()