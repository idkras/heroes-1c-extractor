#!/usr/bin/env python3
"""
MCP Checksums Updater
–û–±–Ω–æ–≤–ª—è–µ—Ç –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—ã–µ —Å—É–º–º—ã –ø–æ—Å–ª–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π MCP —Ñ–∞–π–ª–æ–≤
"""

import sys
import json
import time
from pathlib import Path

sys.path.insert(0, str(Path(__file__).parent.parent.parent / 'src' / 'mcp' / 'modules'))

from documentation_validator import MCPDocumentationValidator


def main():
    """–û–±–Ω–æ–≤–ª—è–µ—Ç –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—ã–µ —Å—É–º–º—ã –∑–∞—â–∏—â–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤"""
    validator = MCPDocumentationValidator()
    
    print("üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—ã—Ö —Å—É–º–º MCP —Ñ–∞–π–ª–æ–≤...")
    
    checksums_file = validator.project_root / '.mcp_checksums.json'
    checksums = {}
    
    # –í—ã—á–∏—Å–ª—è–µ–º –Ω–æ–≤—ã–µ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—ã–µ —Å—É–º–º—ã –¥–ª—è –≤—Å–µ—Ö –∑–∞—â–∏—â–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
    for file_key, file_path in validator.protected_files.items():
        if file_path.exists():
            new_checksum = validator._calculate_checksum(file_path)
            checksums[file_key] = {
                'checksum': new_checksum,
                'path': str(file_path.relative_to(validator.project_root)),
                'last_updated': validator._get_timestamp(),
                'updated_by': 'mcp_authorized_update'
            }
            print(f"   ‚úÖ {file_key}: {new_checksum[:16]}...")
        else:
            print(f"   ‚ö†Ô∏è  {file_key}: —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω")
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—ã–µ —Å—É–º–º—ã
    validator._save_checksums(checksums_file, checksums)
    
    print(f"‚úÖ –ö–æ–Ω—Ç—Ä–æ–ª—å–Ω—ã–µ —Å—É–º–º—ã –æ–±–Ω–æ–≤–ª–µ–Ω—ã: {len(checksums)} —Ñ–∞–π–ª–æ–≤")
    print(f"üìÅ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ –≤: {checksums_file}")
    
    return 0


if __name__ == '__main__':
    sys.exit(main())