#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∑–∞–¥–∞—á –≤ –∫–æ–Ω—Å–æ–ª–∏ –∏ —á–∞—Ç–µ.
–ú–æ–∂–µ—Ç –∑–∞–ø—É—Å–∫–∞—Ç—å—Å—è –≤—Ä—É—á–Ω—É—é –∏–ª–∏ –ø–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é.
"""

import os
import sys
import logging
import time
from typing import Dict, Any

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s'
)
logger = logging.getLogger(__name__)

# –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞
current_dir = os.path.dirname(os.path.abspath(__file__))
sys.path.insert(0, current_dir)

def display_statistics():
    """
    –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∑–∞–¥–∞—á –≤ –∫–æ–Ω—Å–æ–ª–∏ –∏ —á–∞—Ç–µ.
    –ò—Å–ø–æ–ª—å–∑—É–µ—Ç –æ—Å–æ–±—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–ª—è –ø–æ–≤—ã—à–µ–Ω–∏—è –∑–∞–º–µ—Ç–Ω–æ—Å—Ç–∏.
    """
    try:
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π
        from advising_platform.src.core.storage.task_storage import get_task_statistics
        
        # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        stats = get_task_statistics()
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∑–∞–º–µ—Ç–Ω—ã–º —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º
        header = "=" * 80
        message = f"""
{header}
                        –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ó–ê–î–ê–ß
{header}

üìù –í—Å–µ–≥–æ –∑–∞–¥–∞—á: {stats.get('total', 0)}
‚úÖ –í—ã–ø–æ–ª–Ω–µ–Ω–æ: {stats.get('completed', 0)} ({stats.get('completion_rate', 0)}%)
‚è≥ –í –ø—Ä–æ—Ü–µ—Å—Å–µ: {stats.get('in_progress', 0)}
üÜï –ù–µ –Ω–∞—á–∞—Ç–æ: {stats.get('not_started', 0)}

üî¢ –ü–û –ü–†–ò–û–†–ò–¢–ï–¢–ê–ú:
üî¥ –í—ã—Å–æ–∫–∏–π: {stats.get('high_priority', 0)}
üü† –°—Ä–µ–¥–Ω–∏–π: {stats.get('medium_priority', 0)}
üü¢ –ù–∏–∑–∫–∏–π: {stats.get('low_priority', 0)}

–ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: {stats.get('last_update', '')}
{header}
"""
        
        # –í—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∫–æ–Ω—Å–æ–ª—å —Å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π –∑–∞–º–µ—Ç–Ω–æ—Å—Ç—å—é
        print(message)
        
        # –ü—ã—Ç–∞–µ–º—Å—è —Ç–∞–∫–∂–µ –≤—ã–≤–µ—Å—Ç–∏ —á–µ—Ä–µ–∑ report_progress
        try:
            from advising_platform.src.tools.reporting.report_interface import report_progress
            report_progress({"summary": message}, force_output=True)
        except Exception as e:
            logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–≤–µ—Å—Ç–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —á–µ—Ä–µ–∑ report_progress: {e}")
            
        return stats
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {e}")
        return None

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Å–∫—Ä–∏–ø—Ç–∞."""
    logger.info("–ó–∞–ø—É—Å–∫ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∑–∞–¥–∞—á")
    
    # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –æ–¥–∏–Ω —Ä–∞–∑
    stats = display_statistics()
    
    if stats:
        logger.info("–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞–¥–∞—á —É—Å–ø–µ—à–Ω–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∞")
    else:
        logger.error("–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–æ–±—Ä–∞–∑–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∑–∞–¥–∞—á")
    
if __name__ == "__main__":
    main()