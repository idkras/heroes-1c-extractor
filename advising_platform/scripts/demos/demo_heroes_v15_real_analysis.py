#!/usr/bin/env python3
"""
Demo HeroesGPT v1.5 Real Landing Analysis
–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∞–Ω–∞–ª–∏–∑–∞ —Ä–µ–∞–ª—å–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º –æ—Ç—á–µ—Ç–∞
"""

import asyncio
import sys
import json
from datetime import datetime

sys.path.append('.')
from advising_platform.src.mcp.heroes.heroes_workflow_orchestrator import analyze_landing

async def demo_real_landing_analysis():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∞–Ω–∞–ª–∏–∑–∞ —Ä–µ–∞–ª—å–Ω–æ–≥–æ –ª–µ–Ω–¥–∏–Ω–≥–∞"""
    
    # –ö–æ–Ω—Ç–µ–Ω—Ç —Ç–∏–ø–∏—á–Ω–æ–≥–æ –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω–æ–≥–æ –ª–µ–Ω–¥–∏–Ω–≥–∞
    real_landing_content = """
    –°—Ç–∞–Ω—å—Ç–µ –≤–æ—Å—Ç—Ä–µ–±–æ–≤–∞–Ω–Ω—ã–º Data Scientist –∑–∞ 6 –º–µ—Å—è—Ü–µ–≤
    
    –ì–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ–º —Ç—Ä—É–¥–æ—É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –≤ IT-–∫–æ–º–ø–∞–Ω–∏—é –∏–ª–∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º 100% —Å—Ç–æ–∏–º–æ—Å—Ç–∏
    
    –ß—Ç–æ –≤–∞—Å –∂–¥–µ—Ç:
    ‚úì –û–±—É—á–µ–Ω–∏–µ —Å –Ω—É–ª—è –¥–æ —É—Ä–æ–≤–Ω—è Middle —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞
    ‚úì –†–µ–∞–ª—å–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç—ã –≤ –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ
    ‚úì –ü–æ–º–æ—â—å –≤ —Ç—Ä—É–¥–æ—É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ –æ—Ç HR-–ø–∞—Ä—Ç–Ω–µ—Ä–æ–≤
    ‚úì –ú–µ–Ω—Ç–æ—Ä—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ 24/7
    ‚úì –î–æ—Å—Ç—É–ø –∫ –∑–∞–∫—Ä—ã—Ç–æ–º—É –∫–æ–º—å—é–Ω–∏—Ç–∏ –≤—ã–ø—É—Å–∫–Ω–∏–∫–æ–≤
    
    –ù–∞—à–∏ –≤—ã–ø—É—Å–∫–Ω–∏–∫–∏ —Ä–∞–±–æ—Ç–∞—é—Ç –≤:
    ‚Ä¢ –Ø–Ω–¥–µ–∫—Å ‚Ä¢ –°–±–µ—Ä ‚Ä¢ –í–¢–ë ‚Ä¢ –ê–ª—å—Ñ–∞-–±–∞–Ω–∫ ‚Ä¢ –ê–≤–∏—Ç–æ
    
    –ó–∞ 3 –≥–æ–¥–∞ –≤—ã–ø—É—Å—Ç–∏–ª–∏ 2,847 —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤
    –°—Ä–µ–¥–Ω—è—è –∑–∞—Ä–ø–ª–∞—Ç–∞ –≤—ã–ø—É—Å–∫–Ω–∏–∫–∞: 180,000 —Ä—É–±–ª–µ–π
    
    –ü—Ä–æ–≥—Ä–∞–º–º–∞ –æ–±—É—á–µ–Ω–∏—è:
    
    –ú–æ–¥—É–ª—å 1: Python –∏ –æ—Å–Ω–æ–≤—ã –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è (4 –Ω–µ–¥–µ–ª–∏)
    - –°–∏–Ω—Ç–∞–∫—Å–∏—Å Python
    - –†–∞–±–æ—Ç–∞ —Å –¥–∞–Ω–Ω—ã–º–∏ (Pandas, NumPy)
    - –í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è (Matplotlib, Seaborn)
    
    –ú–æ–¥—É–ª—å 2: –ú–∞—à–∏–Ω–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ (8 –Ω–µ–¥–µ–ª—å)
    - Scikit-learn
    - –ö–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—è –∏ —Ä–µ–≥—Ä–µ—Å—Å–∏—è
    - –ö–ª–∞—Å—Ç–µ—Ä–∏–∑–∞—Ü–∏—è
    - –ù–µ–π—Ä–æ–Ω–Ω—ã–µ —Å–µ—Ç–∏
    
    –ú–æ–¥—É–ª—å 3: –ì–ª—É–±–æ–∫–æ–µ –æ–±—É—á–µ–Ω–∏–µ (6 –Ω–µ–¥–µ–ª—å)
    - TensorFlow –∏ PyTorch
    - Computer Vision
    - NLP
    
    –ú–æ–¥—É–ª—å 4: –ü—Ä–æ–µ–∫—Ç–Ω–∞—è —Ä–∞–±–æ—Ç–∞ (6 –Ω–µ–¥–µ–ª—å)
    - 3 –ø—Ä–æ–µ–∫—Ç–∞ –≤ –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ
    - –ü—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—è —Ä–∞–±–æ—Ç–æ–¥–∞—Ç–µ–ª—è–º
    
    –°—Ç–æ–∏–º–æ—Å—Ç—å: 
    –ü–æ–ª–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: 198,000 —Ä—É–±–ª–µ–π
    –ü—Ä–∏ –æ–ø–ª–∞—Ç–µ —Å–µ–≥–æ–¥–Ω—è: 89,000 —Ä—É–±–ª–µ–π (—Å–∫–∏–¥–∫–∞ 55%)
    
    –†–∞—Å—Å—Ä–æ—á–∫–∞: –æ—Ç 7,400 —Ä—É–±–ª–µ–π –≤ –º–µ—Å—è—Ü
    
    –ë–æ–Ω—É—Å—ã –ø—Ä–∏ –∑–∞–ø–∏—Å–∏ —Å–µ–≥–æ–¥–Ω—è:
    + –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π –∫—É—Ä—Å "–ê–Ω–≥–ª–∏–π—Å–∫–∏–π –¥–ª—è IT" (—Å—Ç–æ–∏–º–æ—Å—Ç—å 29,000‚ÇΩ)
    + –ì–æ–¥ –¥–æ—Å—Ç—É–ø–∞ –∫ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ —Å –∑–∞–¥–∞—á–∞–º–∏
    + –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è —Å –∫–∞—Ä—å–µ—Ä–Ω—ã–º –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç–æ–º
    
    –û—Ç–∑—ã–≤—ã –≤—ã–ø—É—Å–∫–Ω–∏–∫–æ–≤:
    
    "–ü—Ä–æ—à–µ–ª –∫—É—Ä—Å –ø–æ–ª–≥–æ–¥–∞ –Ω–∞–∑–∞–¥, —Å–µ–π—á–∞—Å —Ä–∞–±–æ—Ç–∞—é –≤ –°–±–µ—Ä–µ –Ω–∞ –∑–∞—Ä–ø–ª–∞—Ç–µ 220–∫. 
    –û—á–µ–Ω—å –¥–æ–≤–æ–ª–µ–Ω –∫–∞—á–µ—Å—Ç–≤–æ–º –æ–±—É—á–µ–Ω–∏—è –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π." - –ê–ª–µ–∫—Å–µ–π –ö.
    
    "–ë–µ–∑ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–≥–æ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è –∑–∞ 8 –º–µ—Å—è—Ü–µ–≤ —Å—Ç–∞–ª–∞ ML-–∏–Ω–∂–µ–Ω–µ—Ä–æ–º. 
    –ö—É—Ä—Å –¥–∞–ª –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∑–Ω–∞–Ω–∏—è." - –ú–∞—Ä–∏—è –°.
    
    "–ü–æ–ª—É—á–∏–ª –æ—Ñ—Ñ–µ—Ä –≤ –Ø–Ω–¥–µ–∫—Å–µ —á–µ—Ä–µ–∑ 2 –º–µ—Å—è—Ü–∞ –ø–æ—Å–ª–µ –æ–∫–æ–Ω—á–∞–Ω–∏—è –∫—É—Ä—Å–∞. 
    –†–µ–∫–æ–º–µ–Ω–¥—É—é –≤—Å–µ–º!" - –î–º–∏—Ç—Ä–∏–π –ü.
    
    –ì–∞—Ä–∞–Ω—Ç–∏–∏:
    ‚úì –í–æ–∑–≤—Ä–∞—Ç 100% —Å—Ä–µ–¥—Å—Ç–≤, –µ—Å–ª–∏ –Ω–µ –Ω–∞–π–¥–µ—Ç–µ —Ä–∞–±–æ—Ç—É –≤ —Ç–µ—á–µ–Ω–∏–µ 6 –º–µ—Å—è—Ü–µ–≤
    ‚úì –ë–µ—Å–ø–ª–∞—Ç–Ω–æ–µ –ø—Ä–æ–¥–ª–µ–Ω–∏–µ –∫—É—Ä—Å–∞, –µ—Å–ª–∏ –Ω–µ —É—Å–≤–æ–∏–ª–∏ –º–∞—Ç–µ—Ä–∏–∞–ª
    ‚úì –ü–æ–º–æ—â—å –≤ —Å–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–∏ —Ä–µ–∑—é–º–µ –∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–µ –∫ —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏—è–º
    
    FAQ:
    –í: –ü–æ–¥–æ–π–¥–µ—Ç –ª–∏ –∫—É—Ä—Å –±–µ–∑ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–≥–æ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è?
    –û: –î–∞, 70% –Ω–∞—à–∏—Ö —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –ø—Ä–∏—Ö–æ–¥—è—Ç –±–µ–∑ –æ–ø—ã—Ç–∞ –≤ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–∏
    
    –í: –°–∫–æ–ª—å–∫–æ –≤—Ä–µ–º–µ–Ω–∏ –Ω—É–∂–Ω–æ –∑–∞–Ω–∏–º–∞—Ç—å—Å—è?
    –û: 15-20 —á–∞—Å–æ–≤ –≤ –Ω–µ–¥–µ–ª—é –¥–ª—è –∫–æ–º—Ñ–æ—Ä—Ç–Ω–æ–≥–æ –æ—Å–≤–æ–µ–Ω–∏—è –º–∞—Ç–µ—Ä–∏–∞–ª–∞
    
    –í: –ö–∞–∫–∏–µ –Ω–∞–≤—ã–∫–∏ –Ω—É–∂–Ω—ã –¥–ª—è —Ç—Ä—É–¥–æ—É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞?
    –û: –í—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –Ω–∞–≤—ã–∫–∏ –¥–∞—é—Ç—Å—è –≤ —Ä–∞–º–∫–∞—Ö –∫—É—Ä—Å–∞
    
    –ó–∞–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –≤–µ–±–∏–Ω–∞—Ä –∏ –ø–æ–ª—É—á–∏—Ç–µ:
    ‚Ä¢ –ö–∞—Ä—Ç—É —Ä–∞–∑–≤–∏—Ç–∏—è Data Scientist
    ‚Ä¢ –ß–µ–∫-–ª–∏—Å—Ç –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –∫ —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏—é
    ‚Ä¢ –î–æ—Å—Ç—É–ø –∫ –ø–µ—Ä–≤–æ–º—É —É—Ä–æ–∫—É –∫—É—Ä—Å–∞
    
    –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–µ—Å—Ç –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–æ - –æ—Å—Ç–∞–ª–æ—Å—å 12 –∏–∑ 30
    –î–æ –∫–æ–Ω—Ü–∞ –∞–∫—Ü–∏–∏: 2 –¥–Ω—è 14 —á–∞—Å–æ–≤ 23 –º–∏–Ω—É—Ç—ã
    
    –ó–ê–ü–ò–°–ê–¢–¨–°–Ø –°–û –°–ö–ò–î–ö–û–ô 55%
    """
    
    print("üöÄ –ó–∞–ø—É—Å–∫ –∞–Ω–∞–ª–∏–∑–∞ —Ä–µ–∞–ª—å–Ω–æ–≥–æ –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω–æ–≥–æ –ª–µ–Ω–¥–∏–Ω–≥–∞")
    print("=" * 70)
    print(f"üìù –î–ª–∏–Ω–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–∞: {len(real_landing_content)} —Å–∏–º–≤–æ–ª–æ–≤")
    print("üéØ –ü—Ä–∏–º–µ–Ω—è–µ–º HeroesGPT Standard v1.5")
    print()
    
    try:
        # –ó–∞–ø—É—Å–∫ –ø–æ–ª–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞
        report = await analyze_landing(content=real_landing_content)
        
        print("‚úÖ –ê–ù–ê–õ–ò–ó –ó–ê–í–ï–†–®–ï–ù –£–°–ü–ï–®–ù–û")
        print("=" * 50)
        print(f"üìä ID –æ—Ç—á–µ—Ç–∞: {report.id}")
        print(f"‚≠ê –û–±—â–∞—è –æ—Ü–µ–Ω–∫–∞: {report.rating}/5")
        print(f"üìù Narrative coherence: {report.narrative_coherence_score}/10")
        print(f"üîç Self-compliance: {'PASSED' if report.self_compliance_passed else 'FAILED'}")
        print()
        
        # –î–µ—Ç–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        print("üìà –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ê–ù–ê–õ–ò–ó–ê:")
        print("-" * 30)
        print(f"‚Ä¢ –ù–∞–π–¥–µ–Ω–æ –æ—Ñ–µ—Ä–æ–≤: {len(report.offers_table)}")
        print(f"‚Ä¢ JTBD —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤: {len(report.jtbd_scenarios)}")
        print(f"‚Ä¢ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö —Å–µ–≥–º–µ–Ω—Ç–æ–≤: {len(report.segments)}")
        print(f"‚Ä¢ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π: {len(report.recommendations)}")
        print(f"‚Ä¢ Reflections checkpoints: {len(report.reflections)}")
        print()
        
        # –ê–Ω–∞–ª–∏–∑ –æ—Ñ–µ—Ä–æ–≤ –ø–æ —Ç–∏–ø–∞–º
        offer_types = {}
        value_benefits = 0
        tax_offers = 0
        
        for offer in report.offers_table:
            offer_type = offer.offer_type
            if offer_type not in offer_types:
                offer_types[offer_type] = 0
            offer_types[offer_type] += 1
            
            if hasattr(offer, 'value_tax_rating'):
                if "–≤—ã–≥–æ–¥–∞" in offer.value_tax_rating.lower():
                    value_benefits += 1
                elif "–Ω–∞–ª–æ–≥" in offer.value_tax_rating.lower():
                    tax_offers += 1
        
        print("üéØ –ê–ù–ê–õ–ò–ó –û–§–ï–†–û–í:")
        print("-" * 20)
        for offer_type, count in offer_types.items():
            print(f"‚Ä¢ {offer_type}: {count}")
        print()
        print(f"‚öñÔ∏è –í–´–ì–û–î–ê/–ù–ê–õ–û–ì:")
        print(f"‚Ä¢ –í—ã–≥–æ–¥—ã: {value_benefits}")
        print(f"‚Ä¢ –ù–∞–ª–æ–≥–∏: {tax_offers}")
        print()
        
        # –¢–æ–ø-5 –æ—Ñ–µ—Ä–æ–≤
        print("üîù –¢–û–ü-5 –û–§–ï–†–û–í:")
        print("-" * 20)
        for i, offer in enumerate(report.offers_table[:5], 1):
            rating = getattr(offer, 'value_tax_rating', '–Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–æ')
            print(f"{i}. \"{offer.offer_text[:60]}...\"")
            print(f"   –¢–∏–ø: {offer.offer_type} | –û—Ü–µ–Ω–∫–∞: {rating}")
            print()
        
        # JTBD –∞–Ω–∞–ª–∏–∑
        print("üéØ JTBD –°–¶–ï–ù–ê–†–ò–ò:")
        print("-" * 20)
        for i, jtbd in enumerate(report.jtbd_scenarios[:5], 1):
            print(f"{i}. {jtbd.big_jtbd}")
            print(f"   When: {jtbd.when_trigger}")
            print(f"   Status: {jtbd.status}")
            print()
        
        # Reflections status
        print("üîç REFLECTIONS CHECKPOINTS:")
        print("-" * 30)
        passed = sum(1 for r in report.reflections if r.passed)
        total = len(report.reflections)
        print(f"–ü—Ä–æ–π–¥–µ–Ω–æ: {passed}/{total}")
        
        for reflection in report.reflections:
            status = "‚úÖ" if reflection.passed else "‚ùå"
            print(f"{status} {reflection.stage}")
        print()
        
        # –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
        print("üí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:")
        print("-" * 20)
        for i, rec in enumerate(report.recommendations, 1):
            print(f"{i}. {rec}")
        print()
        
        # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ JSON –æ—Ç—á–µ—Ç–∞
        report_data = {
            "id": report.id,
            "timestamp": report.timestamp,
            "rating": report.rating,
            "narrative_coherence": report.narrative_coherence_score,
            "self_compliance": report.self_compliance_passed,
            "statistics": {
                "offers_count": len(report.offers_table),
                "jtbd_count": len(report.jtbd_scenarios),
                "segments_count": len(report.segments),
                "recommendations_count": len(report.recommendations),
                "reflections_passed": passed,
                "reflections_total": total,
                "value_benefits": value_benefits,
                "tax_offers": tax_offers
            },
            "offer_types": offer_types,
            "top_offers": [
                {
                    "text": offer.offer_text[:100],
                    "type": offer.offer_type,
                    "rating": getattr(offer, 'value_tax_rating', '–Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–æ')
                }
                for offer in report.offers_table[:10]
            ]
        }
        
        filename = f"heroes_v15_analysis_report_{datetime.now().strftime('%Y%m%d_%H%M')}.json"
        with open(filename, 'w', encoding='utf-8') as f:
            json.dump(report_data, f, ensure_ascii=False, indent=2)
        
        print(f"üíæ –î–µ—Ç–∞–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω: {filename}")
        print()
        print("üéâ –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –ó–ê–í–ï–†–®–ï–ù–ê –£–°–ü–ï–®–ù–û")
        print("HeroesGPT v1.5 workflow —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ: {e}")
        import traceback
        traceback.print_exc()
        return False

if __name__ == "__main__":
    success = asyncio.run(demo_real_landing_analysis())
    sys.exit(0 if success else 1)