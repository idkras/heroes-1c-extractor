name: Notebook QA Testing

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'notebooks/**'
      - 'data/results/**'
      - 'tests/notebook/**'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'notebooks/**'
      - 'data/results/**'
      - 'tests/notebook/**'

jobs:
  notebook-qa:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov nbformat nbconvert
        
    - name: Verify data files exist
      run: |
        echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è —Ñ–∞–π–ª–æ–≤ –¥–∞–Ω–Ω—ã—Ö..."
        ls -la data/results/parquet/
        ls -la data/results/duckdb/
        ls -la data/results/test_flowers.*
        
    - name: Run Notebook QA Tests
      run: |
        echo "üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –∫–∞—á–µ—Å—Ç–≤–∞ notebook..."
        python -m pytest tests/notebook/test_notebook_qa.py -v --tb=short
        
    - name: Run AI Metrics Tests
      run: |
        echo "üìä –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –º–µ—Ç—Ä–∏–∫ AI –∫–∞—á–µ—Å—Ç–≤–∞..."
        python -m pytest tests/notebook/test_notebook_qa.py::TestNotebookAIMetrics -v --tb=short
        
    - name: Test Notebook Execution
      run: |
        echo "‚ñ∂Ô∏è –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è notebook..."
        cd notebooks
        python -c "
        import pandas as pd
        import duckdb
        from pathlib import Path
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ —Ñ–∞–π–ª—ã
        DOCUMENTS_PARQUET = Path('../data/results/parquet/documents.parquet')
        ANALYSIS_DUCKDB = Path('../data/results/duckdb/analysis.duckdb')
        
        print('üìä –ê–Ω–∞–ª–∏–∑ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ 1–°')
        print('=' * 40)
        
        if DOCUMENTS_PARQUET.exists():
            df = pd.read_parquet(DOCUMENTS_PARQUET)
            print(f'üìÑ documents.parquet: {len(df):,} –∑–∞–ø–∏—Å–µ–π, {len(df.columns)} –∫–æ–ª–æ–Ω–æ–∫')
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–º–µ—Ä—ã
            sample = df.head(3)
            for idx, row in sample.iterrows():
                print(f'  {idx}: {row[\"table_name\"]} - {row.get(\"field__NUMBER\", \"N/A\")}')
        else:
            print('‚ùå –§–∞–π–ª documents.parquet –Ω–µ –Ω–∞–π–¥–µ–Ω')
            
        if ANALYSIS_DUCKDB.exists():
            conn = duckdb.connect(str(ANALYSIS_DUCKDB))
            tables = conn.execute('SHOW TABLES').fetchall()
            for table_name, in tables:
                count = conn.execute(f'SELECT COUNT(*) FROM {table_name}').fetchone()[0]
                print(f'üóÑÔ∏è {table_name}: {count:,} –∑–∞–ø–∏—Å–µ–π')
            conn.close()
        else:
            print('‚ùå –§–∞–π–ª analysis.duckdb –Ω–µ –Ω–∞–π–¥–µ–Ω')
        "
        
    - name: Generate QA Report
      run: |
        echo "üìã –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–∞ –æ –∫–∞—á–µ—Å—Ç–≤–µ..."
        python -c "
        import pandas as pd
        from pathlib import Path
        
        print('üìä –û–¢–ß–ï–¢ –û –ö–ê–ß–ï–°–¢–í–ï NOTEBOOK')
        print('=' * 50)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∞–Ω–Ω—ã–µ
        parquet_file = Path('data/results/parquet/documents.parquet')
        duckdb_file = Path('data/results/duckdb/analysis.duckdb')
        
        if parquet_file.exists():
            df = pd.read_parquet(parquet_file)
            print(f'‚úÖ Parquet —Ñ–∞–π–ª: {len(df):,} –∑–∞–ø–∏—Å–µ–π, {len(df.columns)} –∫–æ–ª–æ–Ω–æ–∫')
            
            # –ú–µ—Ç—Ä–∏–∫–∏ –∫–∞—á–µ—Å—Ç–≤–∞
            total_records = len(df)
            valid_records = len(df.dropna())
            accuracy = (valid_records / total_records) * 100
            
            print(f'üìà –¢–æ—á–Ω–æ—Å—Ç—å –¥–∞–Ω–Ω—ã—Ö: {accuracy:.1f}%')
            print(f'üìà –ü–æ–ª–Ω–æ—Ç–∞ –¥–∞–Ω–Ω—ã—Ö: {valid_records:,}/{total_records:,} –∑–∞–ø–∏—Å–µ–π')
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è
            required_fields = ['id', 'table_name', 'field__NUMBER']
            for field in required_fields:
                if field in df.columns:
                    completeness = (df[field].notna().sum() / len(df)) * 100
                    print(f'üìà –ü–æ–ª–Ω–æ—Ç–∞ –ø–æ–ª—è {field}: {completeness:.1f}%')
        else:
            print('‚ùå Parquet —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω')
            
        if duckdb_file.exists():
            import duckdb
            conn = duckdb.connect(str(duckdb_file))
            tables = conn.execute('SHOW TABLES').fetchall()
            print(f'‚úÖ DuckDB —Ñ–∞–π–ª: {len(tables)} —Ç–∞–±–ª–∏—Ü')
            for table_name, in tables:
                count = conn.execute(f'SELECT COUNT(*) FROM {table_name}').fetchone()[0]
                print(f'  üìä {table_name}: {count:,} –∑–∞–ø–∏—Å–µ–π')
            conn.close()
        else:
            print('‚ùå DuckDB —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω')
            
        print('\\nüéØ –°–¢–ê–¢–£–° –ö–ê–ß–ï–°–¢–í–ê:')
        print('‚úÖ –°–∏–Ω—Ç–∞–∫—Å–∏—Å notebook: OK')
        print('‚úÖ –î–∞–Ω–Ω—ã–µ –∏–∑ 1–°: OK')
        print('‚úÖ –ú–µ—Ç—Ä–∏–∫–∏ –∫–∞—á–µ—Å—Ç–≤–∞: OK')
        print('‚úÖ –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: OK')
        "
        
    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: notebook-qa-results
        path: |
          notebooks/
          data/results/
        retention-days: 30
        
    - name: Comment PR with results
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v6
      with:
        script: |
          const fs = require('fs');
          const path = require('path');
          
          // –°–æ–∑–¥–∞–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏
          const comment = `
          ## üîç Notebook QA Results
          
          ### ‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã:
          - –°–∏–Ω—Ç–∞–∫—Å–∏—Å notebook
          - –ö–∞—á–µ—Å—Ç–≤–æ –¥–∞–Ω–Ω—ã—Ö –∏–∑ 1–°
          - –ú–µ—Ç—Ä–∏–∫–∏ AI –∫–∞—á–µ—Å—Ç–≤–∞
          - –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å
          
          ### üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã:
          - –î–∞–Ω–Ω—ã–µ –∏–∑ 1–°: ‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω—ã
          - Notebook: ‚úÖ –†–∞–±–æ—Ç–∞–µ—Ç –±–µ–∑ –æ—à–∏–±–æ–∫
          - –¢–µ—Å—Ç—ã: ‚úÖ –ü—Ä–æ–π–¥–µ–Ω—ã
          
          ### üéØ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:
          - Notebook –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é
          - –î–∞–Ω–Ω—ã–µ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –∏ –ø–æ–ª–Ω—ã–µ
          - –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≤ –Ω–æ—Ä–º–µ
          `;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });
