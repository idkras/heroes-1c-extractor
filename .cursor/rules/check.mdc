---
alwaysApply: false
---

Use the todo_tool to break down tasks into sub-tasks

1.
прочитай что получилось, выпиши все, что не учел, что нужно дописать? что будет не понятно менеджеру или разработчику или команде? Протокол челендж.

Не создаай новые документы с постфиксами fixed, unified и другие, работай с ранее созданным документом и обновляй его, чтобы не ломать процесс.

зачем ты создаешь новый документ? почему не меняешь старый? Что делаешь не так?

наведи порядок за собой, проверь корень и другие файлы, они точно на своем месте? протокол челендж, где бардак?


2.
Прочитай @1.4 from-the-end и @AI QA стандарты.

Выпиши output cвоих действий в чат и критерии его проверки с чеклистом, кросс-чеком. Если в {projectname}.todo.md или другом месте у тебя не выписаны тест-кейсы, спроектируй и выпиши их, чтобы была качественная, а не количественная проверка.

Не переходи к следующему пункту, пока не выпишешь как ты проверишь и откроешь все ссылки, проверишь результат по ним и пройдешься по тест-кейсам и напишешь их результат. Явно напиши вердикт в чат, есть ли у тебя тесткейсы, что ты с этим планируешь сделать, выпиши тест-кейсы и образ качественного результата.

3.
Открой лично каждый артефакт и проверь его по тест-кейсам.
Явно записы ссылки на все артефакты в чат, чтобы пользователь мог их проверить. Явно в чат запиши качественные критерии, что артефакт сделан хорошо и output чеклист, что в артефакте (output) нет брака.

прочитай и проверь получившийся результат, если нужно прочитай логи и проверь что ты сделал? сам выпиши что ты не учел и сделал не так, где ты ошибся? где видишь проблемы?
Фальсицифируй свой вывод и гипотезу. протокол челендж


4.
проверь gap между output ожидаемым и фактическим. Убедись, что у тебя есть независимый cross-check, не подверждай что что-то сделано без него.

5.
Запусти CI/CD тесты, убедись, что у нас нет ошибок в коде, выведи результаты тестов в чат.

запусти mcp команды валидации output'a: mcp @validate_actual_outcome и покажи в чате скриншоты output_screenshots как evidance.

**ОБЯЗАТЕЛЬНО: Анализ логов и Output панели**
- Проверь логи Cursor: `~/Library/Application Support/Cursor/logs/` (macOS)
- Проверь Output панель в IDE на наличие ошибок
- Предложи решения для каждой ошибки
