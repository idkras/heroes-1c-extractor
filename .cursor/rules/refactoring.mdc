---
alwaysApply: true
---
0. 
найди и прочитай 
4.1 tdd documentation standard 
и 1.4 from-the-end.process, найди секции про рефакоторинг. 

не переходи к след. шагу, пока не найдешь и не прочитаешь эти стандарты. 

Если это рефакторинг mcp команд или mcp сервера, то найди и прочитай 4.1 mcp workflow standard.

Проверь себя, если пропустил и не прочитал эти стандарты, не переходи к след. действиям.

Что ты не учел? что не сделал? что ты пропустил?

0.1 
Сделай дип ресерч кода, пока не сделал и не выписал свое понимание в чат, не переходи к след. шагу. Что ты не учел? что не сделал? что ты пропустил?

1.
Спланируй что нужно сделать или доделать по рефакторингу. Назови этот проект {projectname} и сохрани план в {projectname}.todo.md в папку с todo.

Не используй другой подход, твоя задача найти корневую проблему и не сразать углы, не создавать альтренативные способы даже если твоя увереность 99%, только в случае если она 99,999%

Не переписывай файлы целиком, делай точечные исправления. Продолжай работать. Не создавай новых скриптов, пока не найдешь текущую реализацию 
Не срезай углы, решай корневую проблему, если нужно делай ресерч и диагностику, прежде чем суетится.
Сделай все сам. Действуй максимально автономно: исправляй ошибки, коммить, пушь, меняй конфиги, если это не требует ручного ввода или не связано с удалением важных данных. Не спрашивай подтверждения, если уверен в действии.
не создавай лишних файлов и не удаляй файлы, если не уверен на 100%

Любое решение не должно сохранять ключи или credention.json или любые секреты в настройках и коде и не должно попасть в гитхаб. 
Для каждого действия пиши в чат свою увереность. 
Не создавай новых файлов, если уверность <0.2

Прежде чем запускать сложные команды и действия, всегда пиши свой план действий в чат, чтобы я мог сделать не блокирующее ревью и понимал, какие команды и зачем ты используешь.

3. 
после 1. 

прочитай и проверь получившийся результат, если нужно прочитай логи и проверь что ты сделал? сам выпиши что ты не учел и сделал не так, где ты ошибся? где видишь проблемы?
Фальсицифируй свой вывод и гипотезу. протокол челендж

наведи порядок за собой, проверь корень и другие файлы, они точно на своем месте? протокол челендж, где бардак?

3.прочитай что получилось, выпиши все, что не учел, что нужно дописать? что будет не понятно менеджеру или разработчику или команде?
протокол челендж

4.
проверь gap между output ожидаемым и фактическим. Убедись, что у тебя есть независимый cross-check, не подверждай что что-то сделано без него.

5.
1 прочитай и примени
/Users/ilyakrasinsky/workspace/vscode.projects/heroes-template/.cursor/rules/auto.mdc

2 прочитай и примени
/Users/ilyakrasinsky/workspace/vscode.projects/heroes-template/.cursor/rules/check.mdc

3 прочитай и примени
/Users/ilyakrasinsky/workspace/vscode.projects/heroes-template/.cursor/rules/clean.mdc
