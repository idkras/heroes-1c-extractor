#!/usr/bin/env python3
# -*- coding: utf-8 -*-

from onec_dtools.database_reader import DatabaseReader
import sys
import os

def analyze_table_structure():
    """
    –î–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ç–∞–±–ª–∏—Ü
    """
    print("üîç –î–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ç–∞–±–ª–∏—Ü")
    print("=" * 60)
    
    try:
        with open('raw/1Cv8.1CD', 'rb') as f:
            db = DatabaseReader(f)
            
            print(f"‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –æ—Ç–∫—Ä—ã—Ç–∞ —É—Å–ø–µ—à–Ω–æ!")
            print(f"üìä –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–∞–±–ª–∏—Ü: {len(db.tables)}")
            
            # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–µ—Ä–≤—ã–µ 5 —Ç–∞–±–ª–∏—Ü —Å –¥–∞–Ω–Ω—ã–º–∏
            data_tables = []
            for table_name in db.tables.keys():
                table = db.tables[table_name]
                if len(table) > 0:
                    data_tables.append((table_name, len(table)))
            
            data_tables.sort(key=lambda x: x[1], reverse=True)
            
            print(f"\nüìã –ê–Ω–∞–ª–∏–∑ —Ç–æ–ø-5 —Ç–∞–±–ª–∏—Ü:")
            
            for i, (table_name, record_count) in enumerate(data_tables[:5]):
                print(f"\n{i+1}. üìä {table_name}: {record_count:,} –∑–∞–ø–∏—Å–µ–π")
                
                table = db.tables[table_name]
                first_row = table[0]
                
                # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–æ–ª—è
                print(f"   üìù –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø–æ–ª–µ–π:")
                for field_name, field_desc in table.fields.items():
                    print(f"      - {field_name}: —Ç–∏–ø={field_desc.type}, –¥–ª–∏–Ω–∞={field_desc.length}, null_exists={field_desc.null_exists}")
                
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—ã—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ
                print(f"   üìÑ –°—ã—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–µ—Ä–≤–æ–π –∑–∞–ø–∏—Å–∏:")
                print(f"      –†–∞–∑–º–µ—Ä –∑–∞–ø–∏—Å–∏: {len(first_row._row_bytes)} –±–∞–π—Ç")
                print(f"      –î–∞–Ω–Ω—ã–µ: {first_row._row_bytes[:50].hex()}")
                
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø–æ–ª–µ–π
                print(f"   üîç –ó–Ω–∞—á–µ–Ω–∏—è –ø–µ—Ä–≤—ã—Ö –ø–æ–ª–µ–π:")
                field_names = list(table.fields.keys())[:5]
                for field_name in field_names:
                    try:
                        value = first_row[field_name]
                        print(f"      {field_name}: {value} (—Ç–∏–ø: {type(value)})")
                    except Exception as e:
                        print(f"      {field_name}: –û–®–ò–ë–ö–ê - {e}")
                
                if i >= 2:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—ã–µ 3 —Ç–∞–±–ª–∏—Ü—ã
                    break
                    
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    analyze_table_structure()
    print("\n‚úÖ –ê–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω") 