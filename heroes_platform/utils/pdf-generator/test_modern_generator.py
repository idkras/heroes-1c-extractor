#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ PDF –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞
–°–æ–∑–¥–∞–µ—Ç PDF –∏–∑ vipavenue-adjust-appmetrica.md –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–∞—á–µ—Å—Ç–≤–∞
"""

import asyncio
import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞–º
sys.path.insert(0, str(Path(__file__).parent / "generators"))


def test_modern_generator():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä –Ω–∞ —Ä–µ–∞–ª—å–Ω–æ–º —Ñ–∞–π–ª–µ"""

    # –ü—É—Ç—å –∫ –∏—Å—Ö–æ–¥–Ω–æ–º—É markdown —Ñ–∞–π–ª—É
    md_file = Path(
        "../../heroes-template/[rick.ai]/clients/vipavenue.ru/vipavenue-adjust-appmetrica.md"
    )

    if not md_file.exists():
        print(f"‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {md_file}")
        print("–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –∫–æ—Ä–Ω–µ–≤–æ–π –ø–∞–ø–∫–µ –ø—Ä–æ–µ–∫—Ç–∞")
        return False

    # –ü—É—Ç—å –¥–ª—è –≤—ã—Ö–æ–¥–Ω–æ–≥–æ PDF
    output_pdf = Path("vipavenue-adjust-appmetrica_MODERN.pdf")

    print(f"üìñ –ß–∏—Ç–∞—é —Ñ–∞–π–ª: {md_file}")
    print(f"üìÑ –°–æ–∑–¥–∞—é PDF: {output_pdf}")

    try:
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä
        from generators.pdf_generator_modern import convert_md_to_pdf_modern_sync

        # –°–æ–∑–¥–∞–µ–º PDF
        print("üîÑ –ì–µ–Ω–µ—Ä–∏—Ä—É—é PDF —Å —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–π —Ç–∏–ø–æ–≥—Ä–∞—Ñ–∏–∫–æ–π...")
        result = convert_md_to_pdf_modern_sync(str(md_file), str(output_pdf))

        if result["success"]:
            print(f"‚úÖ PDF —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω: {output_pdf}")
            print(f"üìä –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {output_pdf.stat().st_size / 1024:.1f} KB")
            print(f"üí¨ –°–æ–æ–±—â–µ–Ω–∏–µ: {result['message']}")

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞—á–µ—Å—Ç–≤–æ
            check_pdf_quality(output_pdf)

            return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è PDF: {result['error']}")
            return False

    except ImportError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
        print("–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: pip install -r requirements_modern.txt")
        return False
    except Exception as e:
        print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
        return False


def check_pdf_quality(pdf_path: Path):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∫–∞—á–µ—Å—Ç–≤–æ —Å–æ–∑–¥–∞–Ω–Ω–æ–≥–æ PDF"""

    print("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞—á–µ—Å—Ç–≤–∞ PDF:")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞
    size_kb = pdf_path.stat().st_size / 1024
    if size_kb > 100:
        print(f"‚úÖ –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {size_kb:.1f} KB (–Ω–æ—Ä–º–∞–ª—å–Ω–æ)")
    else:
        print(f"‚ö†Ô∏è –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {size_kb:.1f} KB (–≤–æ–∑–º–æ–∂–Ω–æ —Å–ª–∏—à–∫–æ–º –º–∞–ª–µ–Ω—å–∫–∏–π)")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ñ–∞–π–ª –Ω–µ –ø—É—Å—Ç–æ–π
    if size_kb > 1:
        print("‚úÖ –§–∞–π–ª –Ω–µ –ø—É—Å—Ç–æ–π")
    else:
        print("‚ùå –§–∞–π–ª —Å–ª–∏—à–∫–æ–º –º–∞–ª–µ–Ω—å–∫–∏–π")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ
    if pdf_path.suffix.lower() == ".pdf":
        print("‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ .pdf")
    else:
        print("‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ —Ñ–∞–π–ª–∞")

    print("\nüìã –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
    print("- –û—Ç–∫—Ä–æ–π—Ç–µ PDF –≤ –±—Ä–∞—É–∑–µ—Ä–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è")
    print("- –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–∞—á–µ—Å—Ç–≤–æ —Ç–∞–±–ª–∏—Ü –∏ details –±–ª–æ–∫–æ–≤")
    print("- –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ä—É—Å—Å–∫–∏–π —Ç–µ–∫—Å—Ç —á–∏—Ç–∞–µ–º")


async def test_async_generator():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—É—é –≤–µ—Ä—Å–∏—é –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞"""

    md_file = Path(
        "../../heroes-template/[rick.ai]/clients/vipavenue.ru/vipavenue-adjust-appmetrica.md"
    )
    output_pdf = Path("vipavenue-adjust-appmetrica_MODERN_ASYNC.pdf")

    if not md_file.exists():
        print(f"‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {md_file}")
        return False

    try:
        from generators.pdf_generator_modern import convert_md_to_pdf_modern

        print("üîÑ –¢–µ—Å—Ç–∏—Ä—É—é –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä...")
        result = await convert_md_to_pdf_modern(str(md_file), str(output_pdf))

        if result["success"]:
            print(f"‚úÖ –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π PDF —Å–æ–∑–¥–∞–Ω: {output_pdf}")
            return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–≥–æ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞: {result['error']}")
            return False

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–≥–æ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞: {e}")
        return False


def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""

    print("üöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ PDF –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞")
    print("=" * 50)

    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–∏–Ω—Ö—Ä–æ–Ω–Ω—É—é –≤–µ—Ä—Å–∏—é
    print("\nüìã –¢–µ—Å—Ç 1: –°–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä")
    sync_success = test_modern_generator()

    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—É—é –≤–µ—Ä—Å–∏—é
    print("\nüìã –¢–µ—Å—Ç 2: –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä")
    try:
        async_success = asyncio.run(test_async_generator())
    except Exception as e:
        print(f"‚ùå –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π —Ç–µ—Å—Ç –Ω–µ –ø—Ä–æ—à–µ–ª: {e}")
        async_success = False

    # –ò—Ç–æ–≥–æ–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    print("\n" + "=" * 50)
    print("üìä –ò–¢–û–ì–û–í–´–ô –†–ï–ó–£–õ–¨–¢–ê–¢:")
    print(f"–°–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä: {'‚úÖ' if sync_success else '‚ùå'}")
    print(f"–ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä: {'‚úÖ' if async_success else '‚ùå'}")

    if sync_success or async_success:
        print("\nüéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!")
        print("üìÅ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–æ–∑–¥–∞–Ω–Ω—ã–µ PDF —Ñ–∞–π–ª—ã:")

        pdf_files = list(Path(".").glob("vipavenue-adjust-appmetrica_MODERN*.pdf"))
        for pdf_file in pdf_files:
            if pdf_file.exists():
                size_kb = pdf_file.stat().st_size / 1024
                print(f"   - {pdf_file.name} ({size_kb:.1f} KB)")
    else:
        print("\n‚ùå –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–≤–∞–ª–∏–ª–∏—Å—å")
        print("üîß –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∫—É –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏")


if __name__ == "__main__":
    main()
