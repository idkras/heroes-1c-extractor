#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Node.js PDF –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞ —á–µ—Ä–µ–∑ md-to-pdf
–°–æ–∑–¥–∞–µ—Ç PDF –∏–∑ vipavenue-adjust-appmetrica.md –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–∞—á–µ—Å—Ç–≤–∞
"""

import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞–º
sys.path.insert(0, str(Path(__file__).parent / "generators"))

def test_nodejs_generator():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç Node.js –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä –Ω–∞ —Ä–µ–∞–ª—å–Ω–æ–º —Ñ–∞–π–ª–µ"""
    
    # –ü—É—Ç—å –∫ –∏—Å—Ö–æ–¥–Ω–æ–º—É markdown —Ñ–∞–π–ª—É
    md_file = Path("../../heroes-template/[rick.ai]/clients/vipavenue.ru/vipavenue-adjust-appmetrica.md")
    
    if not md_file.exists():
        print(f"‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {md_file}")
        print("–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –∫–æ—Ä–Ω–µ–≤–æ–π –ø–∞–ø–∫–µ –ø—Ä–æ–µ–∫—Ç–∞")
        return False
    
    # –ü—É—Ç—å –¥–ª—è –≤—ã—Ö–æ–¥–Ω–æ–≥–æ PDF
    output_pdf = Path("vipavenue-adjust-appmetrica_NODEJS.pdf")
    
    print(f"üìñ –ß–∏—Ç–∞—é —Ñ–∞–π–ª: {md_file}")
    print(f"üìÑ –°–æ–∑–¥–∞—é PDF: {output_pdf}")
    
    try:
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º Node.js –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä
        from generators.pdf_generator_nodejs import convert_md_to_pdf_nodejs
        
        # –°–æ–∑–¥–∞–µ–º PDF
        print("üîÑ –ì–µ–Ω–µ—Ä–∏—Ä—É—é PDF —á–µ—Ä–µ–∑ md-to-pdf...")
        result = convert_md_to_pdf_nodejs(str(md_file), str(output_pdf))
        
        if result["success"]:
            print(f"‚úÖ PDF —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω: {output_pdf}")
            print(f"üìä –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {result['file_size_kb']:.1f} KB")
            print(f"üí¨ –°–æ–æ–±—â–µ–Ω–∏–µ: {result['message']}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞—á–µ—Å—Ç–≤–æ
            check_pdf_quality(output_pdf)
            
            return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è PDF: {result['error']}")
            if 'stdout' in result:
                print(f"üì§ stdout: {result['stdout']}")
            if 'stderr' in result:
                print(f"üì• stderr: {result['stderr']}")
            return False
            
    except ImportError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
        print("–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ Node.js –∏ npm —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
        return False
    except Exception as e:
        print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
        return False

def test_nodejs_advanced_options():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç Node.js –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–º–∏ –æ–ø—Ü–∏—è–º–∏"""
    
    md_file = Path("../../heroes-template/[rick.ai]/clients/vipavenue.ru/vipavenue-adjust-appmetrica.md")
    output_pdf = Path("vipavenue-adjust-appmetrica_NODEJS_ADVANCED.pdf")
    
    if not md_file.exists():
        print(f"‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {md_file}")
        return False
    
    try:
        from generators.pdf_generator_nodejs import convert_md_to_pdf_nodejs_advanced
        
        # –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ –æ–ø—Ü–∏–∏
        options = {
            "format": "A4",
            "margin": "15mm",
            "highlight": True,
            "toc": True,
            "numbered": False
        }
        
        print(f"üîÑ –¢–µ—Å—Ç–∏—Ä—É—é —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ –æ–ø—Ü–∏–∏: {options}")
        result = convert_md_to_pdf_nodejs_advanced(str(md_file), str(output_pdf), options)
        
        if result["success"]:
            print(f"‚úÖ –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π PDF —Å–æ–∑–¥–∞–Ω: {output_pdf}")
            print(f"üìä –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {result['file_size_kb']:.1f} KB")
            print(f"üîß –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã–µ –æ–ø—Ü–∏–∏: {result['options_used']}")
            return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–≥–æ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞: {result['error']}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–≥–æ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞: {e}")
        return False

def check_pdf_quality(pdf_path: Path):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∫–∞—á–µ—Å—Ç–≤–æ —Å–æ–∑–¥–∞–Ω–Ω–æ–≥–æ PDF"""
    
    print("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞—á–µ—Å—Ç–≤–∞ PDF:")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞
    size_kb = pdf_path.stat().st_size / 1024
    if size_kb > 100:
        print(f"‚úÖ –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {size_kb:.1f} KB (–Ω–æ—Ä–º–∞–ª—å–Ω–æ)")
    else:
        print(f"‚ö†Ô∏è –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {size_kb:.1f} KB (–≤–æ–∑–º–æ–∂–Ω–æ —Å–ª–∏—à–∫–æ–º –º–∞–ª–µ–Ω—å–∫–∏–π)")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ñ–∞–π–ª –Ω–µ –ø—É—Å—Ç–æ–π
    if size_kb > 1:
        print("‚úÖ –§–∞–π–ª –Ω–µ –ø—É—Å—Ç–æ–π")
    else:
        print("‚ùå –§–∞–π–ª —Å–ª–∏—à–∫–æ–º –º–∞–ª–µ–Ω—å–∫–∏–π")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ
    if pdf_path.suffix.lower() == '.pdf':
        print("‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ .pdf")
    else:
        print("‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ —Ñ–∞–π–ª–∞")
    
    print("\nüìã –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
    print("- –û—Ç–∫—Ä–æ–π—Ç–µ PDF –≤ –±—Ä–∞—É–∑–µ—Ä–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è")
    print("- –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–∞—á–µ—Å—Ç–≤–æ —Ç–∞–±–ª–∏—Ü –∏ details –±–ª–æ–∫–æ–≤")
    print("- –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ä—É—Å—Å–∫–∏–π —Ç–µ–∫—Å—Ç —á–∏—Ç–∞–µ–º")
    print("- –°—Ä–∞–≤–Ω–∏—Ç–µ —Å PDF –æ—Ç Playwright –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞")

def check_nodejs_dependencies():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ Node.js –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"""
    
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ Node.js –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π:")
    
    try:
        import subprocess
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º Node.js
        result = subprocess.run(["node", "--version"], capture_output=True, text=True, check=True)
        print(f"‚úÖ Node.js: {result.stdout.strip()}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º npm
        result = subprocess.run(["npm", "--version"], capture_output=True, text=True, check=True)
        print(f"‚úÖ npm: {result.stdout.strip()}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º md-to-pdf
        result = subprocess.run(["npx", "md-to-pdf", "--version"], capture_output=True, text=True, check=False)
        if result.returncode == 0:
            print(f"‚úÖ md-to-pdf: {result.stdout.strip()}")
        else:
            print("‚ö†Ô∏è md-to-pdf –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –±—É–¥–µ—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π: {e}")
        return False

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    
    print("üöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Node.js PDF –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞ (md-to-pdf)")
    print("=" * 60)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
    print("\nüìã –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π")
    deps_ok = check_nodejs_dependencies()
    
    if not deps_ok:
        print("‚ùå –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
        print("–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Node.js –∏ npm: https://nodejs.org/")
        return
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –±–∞–∑–æ–≤—ã–π –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä
    print("\nüìã –¢–µ—Å—Ç 1: –ë–∞–∑–æ–≤—ã–π Node.js –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä")
    basic_success = test_nodejs_generator()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ –æ–ø—Ü–∏–∏
    print("\nüìã –¢–µ—Å—Ç 2: –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ –æ–ø—Ü–∏–∏")
    advanced_success = test_nodejs_advanced_options()
    
    # –ò—Ç–æ–≥–æ–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    print("\n" + "=" * 60)
    print("üìä –ò–¢–û–ì–û–í–´–ô –†–ï–ó–£–õ–¨–¢–ê–¢:")
    print(f"–ë–∞–∑–æ–≤—ã–π –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä: {'‚úÖ' if basic_success else '‚ùå'}")
    print(f"–†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ –æ–ø—Ü–∏–∏: {'‚úÖ' if advanced_success else '‚ùå'}")
    
    if basic_success or advanced_success:
        print("\nüéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!")
        print("üìÅ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–æ–∑–¥–∞–Ω–Ω—ã–µ PDF —Ñ–∞–π–ª—ã:")
        
        pdf_files = list(Path(".").glob("vipavenue-adjust-appmetrica_NODEJS*.pdf"))
        for pdf_file in pdf_files:
            if pdf_file.exists():
                size_kb = pdf_file.stat().st_size / 1024
                print(f"   - {pdf_file.name} ({size_kb:.1f} KB)")
        
        print("\nüîç –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å Playwright –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–æ–º:")
        playwright_files = list(Path(".").glob("vipavenue-adjust-appmetrica_MODERN*.pdf"))
        for pdf_file in playwright_files:
            if pdf_file.exists():
                size_kb = pdf_file.stat().st_size / 1024
                print(f"   - {pdf_file.name} ({size_kb:.1f} KB)")
        
        print("\nüí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
        print("- –°—Ä–∞–≤–Ω–∏—Ç–µ –∫–∞—á–µ—Å—Ç–≤–æ PDF –æ—Ç —Ä–∞–∑–Ω—ã—Ö –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–æ–≤")
        print("- md-to-pdf –æ–±—ã—á–Ω–æ –¥–∞–µ—Ç –ª—É—á—à–µ–µ –∫–∞—á–µ—Å—Ç–≤–æ —Ç–∏–ø–æ–≥—Ä–∞—Ñ–∏–∫–∏")
        print("- Playwright –ª—É—á—à–µ –¥–ª—è —Å–ª–æ–∂–Ω—ã—Ö CSS –∏ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏")
        
    else:
        print("\n‚ùå –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–≤–∞–ª–∏–ª–∏—Å—å")
        print("üîß –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∫—É Node.js –∏ npm")

if __name__ == "__main__":
    main()
