#!/usr/bin/env python3
"""
–¢–µ—Å—Ç—ã –¥–ª—è —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–µ–Ω–Ω–æ–≥–æ PDF –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞.
TDD –ø–æ–¥—Ö–æ–¥: —Å–Ω–∞—á–∞–ª–∞ —Ç–µ—Å—Ç—ã, –ø–æ—Ç–æ–º —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è.
"""

import os
import tempfile
from pathlib import Path

import pytest

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–æ–≤—ã–π –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä
from generators.pdf_generator_refactored import convert_md_to_pdf_refactored


class TestRefactoredPDFGenerator:
    """
    JTBD: –ö–∞–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤—â–∏–∫, —è —Ö–æ—á—É –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–æ–≤—ã–π PDF –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä,
    —á—Ç–æ–±—ã —É–±–µ–¥–∏—Ç—å—Å—è –≤ –µ–≥–æ –∫–∞—á–µ—Å—Ç–≤–µ –∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏.
    """

    def test_markdown_extensions_support(self):
        """
        JTBD: –ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, —è —Ö–æ—á—É —á—Ç–æ–±—ã details –±–ª–æ–∫–∏ –æ—Ç–æ–±—Ä–∞–∂–∞–ª–∏—Å—å –ø—Ä–∞–≤–∏–ª—å–Ω–æ,
        —á—Ç–æ–±—ã —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Å–ª–æ–∂–Ω—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤.

        GIVEN markdown —Å details –±–ª–æ–∫–∞–º–∏
        WHEN –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É—é –≤ PDF
        THEN details –±–ª–æ–∫–∏ —á–∏—Ç–∞–µ–º—ã –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω—ã
        """
        markdown_content = """
        <details open>
        <summary>## üöÄ QUICK START ¬∑ 5 –º–∏–Ω—É—Ç –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞</summary>

        Content inside details block
        - Point 1
        - Point 2
        </details>
        """

        with tempfile.NamedTemporaryFile(mode="w", suffix=".md", delete=False) as f:
            f.write(markdown_content)
            md_file = f.name

        try:
            pdf_file = md_file.replace(".md", ".pdf")

            # –ù–æ–≤—ã–π –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä –¥–æ–ª–∂–µ–Ω —Ä–∞–±–æ—Ç–∞—Ç—å
            success = convert_md_to_pdf_refactored(md_file, pdf_file)
            assert success, "–ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —É—Å–ø–µ—à–Ω–æ–π"

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ PDF —Å–æ–∑–¥–∞–ª—Å—è
            assert os.path.exists(pdf_file), "PDF –¥–æ–ª–∂–µ–Ω —Å–æ–∑–¥–∞—Ç—å—Å—è"

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä - –µ—Å–ª–∏ PDF —Å–ª–∏—à–∫–æ–º –º–∞–ª–µ–Ω—å–∫–∏–π, –∑–Ω–∞—á–∏—Ç –∫–æ–Ω—Ç–µ–Ω—Ç –ø–æ—Ç–µ—Ä—è–ª—Å—è
            pdf_size = os.path.getsize(pdf_file)
            assert pdf_size > 1000, (
                f"PDF —Å–ª–∏—à–∫–æ–º –º–∞–ª–µ–Ω—å–∫–∏–π ({pdf_size} bytes), –∫–æ–Ω—Ç–µ–Ω—Ç –ø–æ—Ç–µ—Ä—è–ª—Å—è"
            )

        finally:
            os.unlink(md_file)
            if os.path.exists(pdf_file):
                os.unlink(pdf_file)

    def test_complex_tables_rendering(self):
        """
        JTBD: –ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, —è —Ö–æ—á—É —á—Ç–æ–±—ã —Ç–∞–±–ª–∏—Ü—ã —Å —Ä—É—Å—Å–∫–∏–º —Ç–µ–∫—Å—Ç–æ–º –æ—Ç–æ–±—Ä–∞–∂–∞–ª–∏—Å—å –ø—Ä–∞–≤–∏–ª—å–Ω–æ,
        —á—Ç–æ–±—ã –æ–±–µ—Å–ø–µ—á–∏—Ç—å —á–∏—Ç–∞–µ–º–æ—Å—Ç—å —Å–ª–æ–∂–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö.

        GIVEN —Ç–∞–±–ª–∏—Ü—ã —Å —Ä—É—Å—Å–∫–∏–º —Ç–µ–∫—Å—Ç–æ–º
        WHEN –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É—é –≤ PDF
        THEN —Ç–∞–±–ª–∏—Ü—ã –∏–º–µ—é—Ç —á–∏—Ç–∞–µ–º—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É
        """
        markdown_content = """
        | **‚Ññ** | **AppMetrica Event** | **Adjust Event** | **Adjust Event Token** |
        |-------|----------------------|------------------|------------------------|
        | **1** | `received adjust attribution on app launch screen` | - | |
        | **2** | `system adjust_id is synced with appmetrica` | - | |
        | **3** | - | `APPMETRICA_DEVICE_ID_SYNC` | `appmetrica_device_id_sync_sep25` |
        """

        with tempfile.NamedTemporaryFile(mode="w", suffix=".md", delete=False) as f:
            f.write(markdown_content)
            md_file = f.name

        try:
            pdf_file = md_file.replace(".md", ".pdf")

            # –ù–æ–≤—ã–π –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä –¥–æ–ª–∂–µ–Ω —Å–æ–∑–¥–∞—Ç—å –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–π PDF
            success = convert_md_to_pdf_refactored(md_file, pdf_file)
            assert success, "–ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —É—Å–ø–µ—à–Ω–æ–π"

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ PDF —Å–æ–∑–¥–∞–ª—Å—è
            assert os.path.exists(pdf_file), "PDF –¥–æ–ª–∂–µ–Ω —Å–æ–∑–¥–∞—Ç—å—Å—è"

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä - –µ—Å–ª–∏ PDF —Å–ª–∏—à–∫–æ–º –º–∞–ª–µ–Ω—å–∫–∏–π, –∑–Ω–∞—á–∏—Ç –∫–æ–Ω—Ç–µ–Ω—Ç –ø–æ—Ç–µ—Ä—è–ª—Å—è
            pdf_size = os.path.getsize(pdf_file)
            assert pdf_size > 1000, (
                f"PDF —Å–ª–∏—à–∫–æ–º –º–∞–ª–µ–Ω—å–∫–∏–π ({pdf_size} bytes), –∫–æ–Ω—Ç–µ–Ω—Ç –ø–æ—Ç–µ—Ä—è–ª—Å—è"
            )

        finally:
            os.unlink(md_file)
            if os.path.exists(pdf_file):
                os.unlink(pdf_file)

    def test_russian_text_typography(self):
        """
        JTBD: –ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, —è —Ö–æ—á—É —á—Ç–æ–±—ã —Ä—É—Å—Å–∫–∏–π —Ç–µ–∫—Å—Ç –æ—Ç–æ–±—Ä–∞–∂–∞–ª—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ,
        —á—Ç–æ–±—ã –æ–±–µ—Å–ø–µ—á–∏—Ç—å —á–∏—Ç–∞–µ–º–æ—Å—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç–∞.

        GIVEN —Ä—É—Å—Å–∫–∏–π —Ç–µ–∫—Å—Ç
        WHEN –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É—é –≤ PDF
        THEN —Ç–∏–ø–æ–≥—Ä–∞—Ñ–∏–∫–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞
        """
        markdown_content = """
        # –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è: –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è Adjust —Å AppMetrica –¥–ª—è UTM-—Ç—Ä–µ–∫–∏–Ω–≥–∞

        –ì–ª—É–±–æ–∫–∏–π –∞–Ω–∞–ª–∏–∑ –¥–ª—è –º–æ–±–∏–ª—å–Ω–æ–π –∞—Ç—Ä–∏–±—É—Ü–∏–∏ –∏ –∫—Ä–æ—Å—Å-–ø–ª–∞—Ç—Ñ–æ—Ä–º–µ–Ω–Ω–æ–≥–æ —Ç—Ä–µ–∫–∏–Ω–≥–∞.

        ## üìã Next Actions

        ### üîß –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –∑–∞–¥–∞—á–∏
        - [x] –î–ª—è –≤—Å–µ—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –¥–æ–ø–∏—Å–∞—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π
        - [ ] –û–±–Ω–æ–≤–∏—Ç—å —Ç–µ–∫—Å—Ç –∑–∞–ø—Ä–æ—Å–æ–≤ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π
        """

        with tempfile.NamedTemporaryFile(mode="w", suffix=".md", delete=False) as f:
            f.write(markdown_content)
            md_file = f.name

        try:
            pdf_file = md_file.replace(".md", ".pdf")

            # –ù–æ–≤—ã–π –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä –¥–æ–ª–∂–µ–Ω —Å–æ–∑–¥–∞—Ç—å –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–π PDF
            success = convert_md_to_pdf_refactored(md_file, pdf_file)
            assert success, "–ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —É—Å–ø–µ—à–Ω–æ–π"

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ PDF —Å–æ–∑–¥–∞–ª—Å—è
            assert os.path.exists(pdf_file), "PDF –¥–æ–ª–∂–µ–Ω —Å–æ–∑–¥–∞—Ç—å—Å—è"

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä - –µ—Å–ª–∏ PDF —Å–ª–∏—à–∫–æ–º –º–∞–ª–µ–Ω—å–∫–∏–π, –∑–Ω–∞—á–∏—Ç –∫–æ–Ω—Ç–µ–Ω—Ç –ø–æ—Ç–µ—Ä—è–ª—Å—è
            pdf_size = os.path.getsize(pdf_file)
            assert pdf_size > 2000, (
                f"PDF —Å–ª–∏—à–∫–æ–º –º–∞–ª–µ–Ω—å–∫–∏–π ({pdf_size} bytes), —Ä—É—Å—Å–∫–∏–π —Ç–µ–∫—Å—Ç –ø–æ—Ç–µ—Ä—è–ª—Å—è"
            )

        finally:
            os.unlink(md_file)
            if os.path.exists(pdf_file):
                os.unlink(pdf_file)

    def test_vipavenue_document_rendering(self):
        """
        JTBD: –ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, —è —Ö–æ—á—É —á—Ç–æ–±—ã vipavenue-adjust-appmetrica.md –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–ª—Å—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ,
        —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–π PDF –¥–æ–∫—É–º–µ–Ω—Ç.

        GIVEN —Ä–µ–∞–ª—å–Ω—ã–π –¥–æ–∫—É–º–µ–Ω—Ç vipavenue-adjust-appmetrica.md
        WHEN –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É—é –≤ PDF
        THEN –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ
        """
        vipavenue_md_path = Path(
            "[rick.ai]/knowledge base/in progress/1. when new lead come/when mobile ¬∑ appmetric ¬∑ ajust/vipavenue.ru/vipavenue-adjust-appmetrica.md"
        )

        if not vipavenue_md_path.exists():
            pytest.skip("–§–∞–π–ª vipavenue-adjust-appmetrica.md –Ω–µ –Ω–∞–π–¥–µ–Ω")

        # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π PDF
        with tempfile.NamedTemporaryFile(suffix=".pdf", delete=False) as f:
            pdf_file = f.name

        try:
            # –ù–æ–≤—ã–π –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä –¥–æ–ª–∂–µ–Ω —Å–æ–∑–¥–∞—Ç—å –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–π PDF
            success = convert_md_to_pdf_refactored(str(vipavenue_md_path), pdf_file)
            assert success, "–ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —É—Å–ø–µ—à–Ω–æ–π"

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ PDF —Å–æ–∑–¥–∞–ª—Å—è
            assert os.path.exists(pdf_file), "PDF –¥–æ–ª–∂–µ–Ω —Å–æ–∑–¥–∞—Ç—å—Å—è"

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä - –µ—Å–ª–∏ PDF —Å–ª–∏—à–∫–æ–º –º–∞–ª–µ–Ω—å–∫–∏–π, –∑–Ω–∞—á–∏—Ç –∫–æ–Ω—Ç–µ–Ω—Ç –ø–æ—Ç–µ—Ä—è–ª—Å—è
            pdf_size = os.path.getsize(pdf_file)
            assert pdf_size > 50000, (
                f"PDF —Å–ª–∏—à–∫–æ–º –º–∞–ª–µ–Ω—å–∫–∏–π ({pdf_size} bytes), —Å–ª–æ–∂–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç –ø–æ—Ç–µ—Ä—è–ª—Å—è"
            )

        finally:
            if os.path.exists(pdf_file):
                os.unlink(pdf_file)


if __name__ == "__main__":
    pytest.main([__file__, "-v"])
