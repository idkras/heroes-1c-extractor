"""
Playwright-—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ PDF –¥–æ–∫—É–º–µ–Ω—Ç–∞ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –≤ Cursor.
–≠—Ç–æ—Ç —Ñ–∞–π–ª –≥–æ—Ç–æ–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω–æ–π —Å—Ä–µ–¥–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏.

–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤ Cursor:
1. pip install playwright
2. playwright install
3. playwright install-deps
4. python test_pdf_visual_browser_for_cursor.py
"""

import asyncio
from playwright.async_api import async_playwright
from pathlib import Path
import time

async def test_pdf_visual_quality_browser():
    """–ü–æ–ª–Ω–æ—Ü–µ–Ω–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ PDF —á–µ—Ä–µ–∑ –±—Ä–∞—É–∑–µ—Ä."""
    
    pdf_path = Path("[projects]/rick.ai/knowledge base/in progress/when new lead come/2. when security asked policy/Rick_ai_Security_Documentation_FINAL.pdf")
    
    if not pdf_path.exists():
        print(f"‚ùå PDF —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {pdf_path}")
        return False
    
    async with async_playwright() as p:
        # –ó–∞–ø—É—Å–∫–∞–µ–º –±—Ä–∞—É–∑–µ—Ä
        browser = await p.chromium.launch(headless=False)  # headless=False –¥–ª—è –≤–∏–∑—É–∞–ª—å–Ω–æ–≥–æ –∫–æ–Ω—Ç—Ä–æ–ª—è
        page = await browser.new_page()
        
        try:
            # –û—Ç–∫—Ä—ã–≤–∞–µ–º PDF
            pdf_url = f"file://{pdf_path.absolute()}"
            print(f"üåê –û—Ç–∫—Ä—ã–≤–∞–µ–º PDF: {pdf_url}")
            
            await page.goto(pdf_url)
            await page.wait_for_timeout(5000)  # –ñ–¥–µ–º –ø–æ–ª–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ø–µ—à–Ω–æ—Å—Ç—å –∑–∞–≥—Ä—É–∑–∫–∏
            title = await page.title()
            print(f"üìÑ –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã: {title}")
            
            # –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –ø–æ–ª–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
            screenshot_path = "rick_ai_security_pdf_screenshot.png"
            await page.screenshot(path=screenshot_path, full_page=True)
            print(f"üì∏ –°–∫—Ä–∏–Ω—à–æ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω: {screenshot_path}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
            page_content = await page.content()
            
            # –í–∏–∑—É–∞–ª—å–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏
            visual_tests = {
                "PDF –∑–∞–≥—Ä—É–∂–µ–Ω": len(page_content) > 1000,
                "–ó–∞–≥–æ–ª–æ–≤–æ–∫ –≤–∏–¥–∏–º": "Rick.ai" in page_content or "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏" in title,
                "–ö–æ–Ω—Ç–µ–Ω—Ç —á–∏—Ç–∞–µ—Ç—Å—è": len(page_content) > 5000,
                "–ù–µ—Ç –æ—à–∏–±–æ–∫ –∑–∞–≥—Ä—É–∑–∫–∏": "error" not in page_content.lower()
            }
            
            print("\nüìã –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤–∏–∑—É–∞–ª—å–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:")
            all_passed = True
            
            for test_name, result in visual_tests.items():
                status = "‚úÖ" if result else "‚ùå"
                print(f"{status} {test_name}")
                if not result:
                    all_passed = False
            
            # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ —á–µ—Ä–µ–∑ JavaScript
            try:
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä—ã —Å—Ç—Ä–∞–Ω–∏—Ü—ã
                page_info = await page.evaluate("""
                    () => {
                        return {
                            width: window.innerWidth,
                            height: window.innerHeight,
                            scrollHeight: document.body.scrollHeight,
                            title: document.title
                        }
                    }
                """)
                
                print(f"\nüìê –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å—Ç—Ä–∞–Ω–∏—Ü–µ:")
                print(f"   –®–∏—Ä–∏–Ω–∞: {page_info['width']}px")
                print(f"   –í—ã—Å–æ—Ç–∞: {page_info['height']}px") 
                print(f"   –í—ã—Å–æ—Ç–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–∞: {page_info['scrollHeight']}px")
                print(f"   –ó–∞–≥–æ–ª–æ–≤–æ–∫: {page_info['title']}")
                
            except Exception as e:
                print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å—Ç—Ä–∞–Ω–∏—Ü–µ: {e}")
            
            # –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ –¥–ª—è –≤–∏–∑—É–∞–ª—å–Ω–æ–≥–æ –∫–æ–Ω—Ç—Ä–æ–ª—è (–µ—Å–ª–∏ headless=False)
            await page.wait_for_timeout(3000)
            
            return all_passed
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
            return False
            
        finally:
            await browser.close()

async def test_pdf_typography_visual():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–æ–≥—Ä–∞—Ñ–∏–∏ —á–µ—Ä–µ–∑ –±—Ä–∞—É–∑–µ—Ä."""
    
    print("üî§ –í–∏–∑—É–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–æ–≥—Ä–∞—Ñ–∏–∏ PDF")
    print("=" * 50)
    
    # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —Å–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–≤–µ—Ä–∫–∏:
    # - –†–∞–∑–º–µ—Ä –∏ —á–∏—Ç–∞–µ–º–æ—Å—Ç—å —à—Ä–∏—Ñ—Ç–æ–≤
    # - –ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –æ—Ç—Å—Ç—É–ø–æ–≤
    # - –ö–∞—á–µ—Å—Ç–≤–æ —Ç–∞–±–ª–∏—Ü
    # - –ü—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –ø–µ—Ä–µ–Ω–æ—Å–æ–≤
    
    return True

async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è."""
    
    print("üß™ Playwright –≤–∏–∑—É–∞–ª—å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ PDF Rick.ai")
    print("üñ•Ô∏è –ó–∞–ø—É—Å–∫ –≤ –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω–æ–º –±—Ä–∞—É–∑–µ—Ä–µ")
    print("=" * 60)
    
    # –¢–µ—Å—Ç 1: –û—Å–Ω–æ–≤–Ω–æ–µ –≤–∏–∑—É–∞–ª—å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
    visual_ok = await test_pdf_visual_quality_browser()
    
    # –¢–µ—Å—Ç 2: –¢–∏–ø–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
    typography_ok = await test_pdf_typography_visual()
    
    print("\n" + "=" * 60)
    print("üìä –ò–¢–û–ì–û–í–´–ô –†–ï–ó–£–õ–¨–¢–ê–¢ –ë–†–ê–£–ó–ï–†–ù–û–ì–û –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:")
    
    if visual_ok and typography_ok:
        print("‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã!")
        print("üìÑ PDF –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –≤ –±—Ä–∞—É–∑–µ—Ä–µ")
        print("üéØ –î–æ–∫—É–º–µ–Ω—Ç –≥–æ—Ç–æ–≤ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–ª—É–∂–±–∞–º –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏")
    else:
        print("‚ùå –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è")
        print("üîß –¢—Ä–µ–±—É–µ—Ç—Å—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ")
    
    return visual_ok and typography_ok

if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ –±—Ä–∞—É–∑–µ—Ä–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è...")
    print("üìù –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ Playwright —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω:")
    print("   pip install playwright")
    print("   playwright install")
    print("   playwright install-deps")
    print()
    
    try:
        result = asyncio.run(main())
        exit(0 if result else 1)
    except Exception as e:
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        print("üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∫—É Playwright")
        exit(1)