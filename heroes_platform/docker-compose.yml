version: "3.8"

services:
  # Heroes Platform PostgreSQL
  heroes_postgres:
    image: pgvector/pgvector:pg17
    container_name: heroes_postgres
    environment:
      POSTGRES_DB: heroes_platform
      POSTGRES_USER: heroes_user
      POSTGRES_PASSWORD: heroes_password
    ports:
      - "5432:5432"
    volumes:
      - heroes_postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U heroes_user -d heroes_platform"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - heroes-network

  # Potpie PostgreSQL
  potpie_postgres:
    image: postgres:latest
    container_name: potpie_postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: mysecretpassword
      POSTGRES_DB: momentum
    ports:
      - "5433:5432"
    volumes:
      - potpie_postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - heroes-network

  # Neo4j for Potpie
  neo4j:
    image: neo4j:latest
    container_name: potpie_neo4j
    environment:
      NEO4J_AUTH: neo4j/mysecretpassword
      NEO4JLABS_PLUGINS: '["apoc"]'
      NEO4J_dbms_security_procedures_unrestricted: 'apoc.*'
      NEO4J_dbms_memory_transaction_total_max: 0
    ports:
      - "7474:7474"
      - "7687:7687"
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
    networks:
      - heroes-network

  # Redis for both Heroes Platform and Potpie
  redis:
    image: redis:latest
    container_name: heroes_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - heroes-network

  # Heroes Platform FastAPI
  heroes_api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: heroes_api
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://heroes_user:heroes_password@heroes_postgres:5432/heroes_platform
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      heroes_postgres:
        condition: service_healthy
      redis:
        condition: service_started
    volumes:
      - .:/app
    networks:
      - heroes-network

  # Potpie FastAPI
  potpie_api:
    build:
      context: ./potpie
      dockerfile: dockerfile
    container_name: potpie_api
    ports:
      - "8001:8001"
    environment:
      - POSTGRES_SERVER=postgresql://postgres:mysecretpassword@potpie_postgres:5432/momentum
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USERNAME=neo4j
      - NEO4J_PASSWORD=mysecretpassword
      - REDISHOST=redis
      - REDISPORT=6379
      - BROKER_URL=redis://redis:6379/0
      - CELERY_QUEUE_NAME=dev
      - isDevelopmentMode=enabled
      - ENV=development
    depends_on:
      potpie_postgres:
        condition: service_healthy
      neo4j:
        condition: service_started
      redis:
        condition: service_started
    volumes:
      - ./potpie:/app
    networks:
      - heroes-network

  # Potpie Celery Worker
  potpie_celery:
    build:
      context: ./potpie
      dockerfile: dockerfile
    container_name: potpie_celery
    environment:
      - POSTGRES_SERVER=postgresql://postgres:mysecretpassword@potpie_postgres:5432/momentum
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USERNAME=neo4j
      - NEO4J_PASSWORD=mysecretpassword
      - REDISHOST=redis
      - REDISPORT=6379
      - BROKER_URL=redis://redis:6379/0
      - CELERY_QUEUE_NAME=dev
      - isDevelopmentMode=enabled
      - ENV=development
    depends_on:
      potpie_postgres:
        condition: service_healthy
      neo4j:
        condition: service_started
      redis:
        condition: service_started
    volumes:
      - ./potpie:/app
    command: celery -A app.celery.celery_app worker --loglevel=debug -Q "dev_process_repository" -E --concurrency=1 --pool=solo
    networks:
      - heroes-network

volumes:
  heroes_postgres_data:
  potpie_postgres_data:
  neo4j_data:
  neo4j_logs:
  redis_data:

networks:
  heroes-network:
    driver: bridge
