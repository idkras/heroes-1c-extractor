#!/usr/bin/env python3
"""
Figma MCP Server Wrapper
–ó–∞–ø—É—Å–∫–∞–µ—Ç figma-developer-mcp —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏ –æ–∫—Ä—É–∂–µ–Ω–∏—è
"""

import os
import subprocess
import sys
from pathlib import Path


def get_project_root():
    """–ü–æ–ª—É—á–∏—Ç—å –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞"""
    return Path(__file__).parent.parent


def get_heroes_platform_path():
    """–ü–æ–ª—É—á–∏—Ç—å –ø—É—Ç—å –∫ heroes-platform"""
    return Path(__file__).parent


def get_node_path():
    """–ü–æ–ª—É—á–∏—Ç—å –ø—É—Ç—å –∫ Node.js"""
    # –ü–æ–ø—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ Node.js –≤ —Å–∏—Å—Ç–µ–º–Ω–æ–º PATH
    try:
        result = subprocess.run(["which", "node"], capture_output=True, text=True)
        if result.returncode == 0:
            node_path = result.stdout.strip()
            # –ü–æ–ª—É—á–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é Node.js
            return str(Path(node_path).parent)
    except:
        pass

    # Fallback –Ω–∞ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –ø—É—Ç–∏
    common_paths = [
        "/usr/local/bin",
        "/usr/bin",
        "/opt/homebrew/bin",
        "/usr/local/Cellar/node/24.7.0/bin",
    ]

    for path in common_paths:
        if Path(path).exists() and Path(path, "node").exists():
            return path

    return None


def get_figma_api_key():
    """–ü–æ–ª—É—á–∏—Ç—å Figma API –∫–ª—é—á —á–µ—Ä–µ–∑ credentials_manager"""
    try:
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º credentials_manager
        import sys

        from heroes_platform.shared.credentials_manager import get_credential

        # –ü–æ–ª—É—á–∞–µ–º API –∫–ª—é—á —á–µ—Ä–µ–∑ credentials_manager
        api_key = get_credential("figma_api_key")
        if api_key:
            return api_key
    except Exception as e:
        print(
            f"ERROR: Error getting Figma API key from credentials_manager: {e}",
            file=sys.stderr,
        )

    return None


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞"""
    print("üé® Starting Figma MCP Server...", file=sys.stderr)

    # –ü–æ–ª—É—á–∞–µ–º –ø—É—Ç–∏
    heroes_platform_path = get_heroes_platform_path()
    node_path = get_node_path()

    if not node_path:
        print("ERROR: Node.js not found in system PATH", file=sys.stderr)
        sys.exit(1)

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ figma-developer-mcp
    figma_mcp_path = (
        heroes_platform_path / "node_modules" / ".bin" / "figma-developer-mcp"
    )
    if not figma_mcp_path.exists():
        print(
            f"ERROR: figma-developer-mcp not found at {figma_mcp_path}", file=sys.stderr
        )
        sys.exit(1)

    # –ü–æ–ª—É—á–∞–µ–º API –∫–ª—é—á
    api_key = get_figma_api_key()
    if not api_key:
        print("ERROR: Figma API key not found in keychain", file=sys.stderr)
        sys.exit(1)

    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    env = os.environ.copy()
    env["FIGMA_API_KEY"] = api_key
    env["PATH"] = f"{node_path}:{env.get('PATH', '')}"

    # –ó–∞–ø—É—Å–∫–∞–µ–º figma-developer-mcp
    cmd = [str(figma_mcp_path), "--stdio"]

    print(f"RUNNING: {' '.join(cmd)}", file=sys.stderr)
    print(f"WORKDIR: {heroes_platform_path}", file=sys.stderr)
    print(f"API_KEY: {'*' * 8}{api_key[-4:]}", file=sys.stderr)

    try:
        # –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å
        process = subprocess.Popen(
            cmd,
            cwd=str(heroes_platform_path),
            env=env,
            stdin=sys.stdin,
            stdout=sys.stdout,
            stderr=sys.stderr,
        )

        # –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
        process.wait()
        sys.exit(process.returncode)

    except KeyboardInterrupt:
        print("\nSTOPPING: Stopping Figma MCP Server...", file=sys.stderr)
        process.terminate()
        sys.exit(0)
    except Exception as e:
        print(f"ERROR: Error running figma-developer-mcp: {e}", file=sys.stderr)
        sys.exit(1)


if __name__ == "__main__":
    main()
