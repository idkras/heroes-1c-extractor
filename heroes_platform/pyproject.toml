[build-system]
requires = ["setuptools>=65.5.1", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
where = ["."]
exclude = [
    "config",
    "logs",
    "docs",
    "tests",
    "code-quality-template",
    "mcp_server",
    "telegram-mcp",
    "playwright-mcp",
    "n8n-mcp",
    "cocoindex-project",
    "chrome-mcp-extension",
    "mcp-chrome-project",
    "rickai-mkdocs",
    "output",
    "output_screenshot",
    "archive",
    ".venv",
    ".git",
    ".mypy_cache",
    ".ruff_cache",
    ".pytest_cache",
    ".hypothesis",
]

[project]
name = "heroes_platform"
version = "1.0.0"
description = "Heroes Platform - универсальная библиотека для создания AI-ассистированных проектов с интеграцией MCP серверов, стандартов и workflow"
authors = [{name = "Ilya Krasinsky", email = "ilya@magicrick.com"}]
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    # Core framework
    "pydantic>=2.9.2,<3.0.0",
    "mcp[cli]>=1.12.4",
    "python-dotenv>=1.1.0,<2.0.0",
    "typing-extensions>=4.7.0,<5.0.0",
    
    # HTTP and API
    "requests>=2.32.0,<3.0.0",
    "aiohttp>=3.9.0,<4.0.0",
    "gql>=3.4.0,<4.0.0",
    
    # Telegram Integration
    "telethon>=1.41.2,<2.0.0",
    "nest-asyncio>=1.6.0,<2.0.0",
    
    # PDF processing
    "PyPDF2>=3.0.0,<4.0.0",
    "weasyprint>=60.0,<61.0.0",
    
    # Authentication
    "PyJWT>=2.8.0,<3.0.0",
    
    # Date utilities
    "arrow>=1.3.0,<2.0.0",
    
    # JSON utilities
    "ujson>=5.8.0,<6.0.0",
]

[project.optional-dependencies]
dev = [
    # Code formatting and linting
    "black>=25.1.0,<26.0.0",
    "ruff>=0.12.9,<1.0.0",
    "mypy>=1.17.1,<2.0.0",
    
    # Security
    "bandit>=1.8.6,<2.0.0",
    "safety>=3.6.0,<4.0.0",
    
    # Testing
    "pytest>=8.3.5,<9.0.0",
    "pytest-asyncio>=1.0.0,<2.0.0",
    "pytest-cov>=6.2.0,<7.0.0",
    "pytest-xdist>=3.8.0,<4.0.0",
    "hypothesis>=6.138.2,<7.0.0",
    "coverage>=7.10.3,<8.0.0",
    
    # Development tools
    "pre-commit>=4.3.0,<5.0.0",
    "radon>=6.0.0,<7.0.0",
    
    # Type stubs
    "types-requests>=2.31.0,<3.0.0",
]

production = [
    # Web framework
    "fastapi>=0.110.0,<1.0.0",
    "uvicorn>=0.30.0,<1.0.0",
    
    # Database
    "sqlalchemy>=2.0.0,<3.0.0",
    "alembic>=1.16.0,<2.0.0",
    "psycopg2-binary>=2.9.0,<3.0.0",
    
    # Caching and tasks
    "redis>=5.0.0,<6.0.0",
    "celery>=5.3.0,<6.0.0",
]

mcp = [
    "mcp[cli]>=1.12.4",
    "playwright>=1.40.0,<2.0.0",
]

potpie = [
    # Core Potpie dependencies
    "fastapi[all]>=0.115.6,<1.0.0",
    "instructor>=1.5.2,<2.0.0",
    "litellm>=1.72.1,<2.0.0",
    "pydantic[email]>=2.10.3,<3.0.0",
    "pydantic_ai>=0.4.3,<1.0.0",
    
    # Database and ORM
    "sqlalchemy>=2.0.36,<3.0.0",
    "alembic>=1.14.0,<2.0.0",
    "psycopg2-binary>=2.9.10,<3.0.0",
    "neo4j>=5.27.0,<6.0.0",
    
    # AI and ML
    "openai>=1.76.0,<2.0.0",
    "anthropic>=0.40.0,<1.0.0",
    "crewai>=0.95.0,<1.0.0",
    "sentence-transformers>=4.0.2,<5.0.0",
    "transformers>=4.48.0,<5.0.0",
    "torch>=2.5.1,<3.0.0",
    "scikit-learn>=1.5.2,<2.0.0",
    "nltk>=3.9.1,<4.0.0",
    
    # Code analysis
    "tree-sitter>=0.20.4,<1.0.0",
    "tree-sitter-languages>=1.10.2,<2.0.0",
    "grep-ast>=0.4.1,<1.0.0",
    "pygments>=2.18.0,<3.0.0",
    "networkx>=3.4.2,<4.0.0",
    "blar-graph>=1.1.6,<2.0.0",
    
    # External services
    "firebase-admin>=6.6.0,<7.0.0",
    "portkey-ai>=1.10.3,<2.0.0",
    "resend>=2.4.0,<3.0.0",
    "firecrawl-py>=1.11.1,<2.0.0",
    
    # Git and GitHub
    "gitPython>=3.1.43,<4.0.0",
    "PyGithub>=2.5.0,<3.0.0",
    
    # Google Cloud
    "google-cloud-secret-manager>=2.21.1,<3.0.0",
    "google-cloud-storage>=2.10.0,<3.0.0",
    
    # Monitoring and logging
    "sentry-sdk[fastapi]>=2.20.0,<3.0.0",
    "posthog>=3.7.4,<4.0.0",
    "newrelic>=9.0.0,<10.0.0",
    "agentops>=0.3.26,<1.0.0",
    
    # Utilities
    "uuid6>=2024.7.10,<2025.0.0",
    "chardet>=5.2.0,<6.0.0",
    "tiktoken>=0.7.0,<1.0.0",
    "pathspec>=0.12.1,<1.0.0",
    "python-multipart>=0.0.7,<1.0.0",
    "Pillow>=10.0.1,<11.0.0",
    
    # Async and HTTP
    "aiohttp>=3.11.9,<4.0.0",
    "aiofiles>=24.1.0,<25.0.0",
    
    # LangChain ecosystem
    "langchain>=0.3.16,<1.0.0",
    "langchain-community>=0.3.16,<1.0.0",
    "langchain-core>=0.3.32,<1.0.0",
    "langchain-postgres>=0.0.12,<1.0.0",
    "langgraph>=0.2.58,<1.0.0",
    "langgraph-checkpoint>=2.0.10,<3.0.0",
    "langgraph-sdk>=0.1.51,<1.0.0",
    "langsmith>=0.3.3,<1.0.0",
    
    # Task queue
    "celery>=5.4.0,<6.0.0",
    "redis>=5.2.0,<6.0.0",
    "flower>=2.0.1,<3.0.0",
    "kombu>=5.4.2,<6.0.0",
    
    # Development tools
    "pre-commit>=4.0.1,<5.0.0",
    "isort>=5.13.2,<6.0.0",
    "black>=24.10.0,<25.0.0",
    "ruff>=0.8.1,<1.0.0",
    "pylint>=3.3.2,<4.0.0",
    "bandit>=1.8.0,<2.0.0",
    
    # Testing
    "pytest>=8.0.0,<9.0.0",
    "pytest-asyncio>=0.21.0,<1.0.0",
    
    # Server
    "uvicorn>=0.32.1,<1.0.0",
    "gunicorn>=23.0.0,<24.0.0",
    "jiter>=0.5.0,<1.0.0",
    
    # Other utilities
    "joblib>=1.4.2,<2.0.0",
    "json_repair>=0.35.0,<1.0.0",
    "json5>=0.9.28,<1.0.0",
    "tqdm>=4.67.1,<5.0.0",
    "postgres>=4.0,<5.0.0",
]

[project.urls]
Homepage = "https://github.com/heroes-template/heroes_platform"
Documentation = "https://heroes_platform.readthedocs.io/"
Repository = "https://github.com/heroes-template/heroes_platform.git"
"Bug Tracker" = "https://github.com/heroes-template/heroes_platform/issues"

[project.scripts]
heroes_platform = "heroes_platform.cli:main"
setup-mcp = "heroes_platform.scripts.setup_mcp_config:main"

[tool.black]
line-length = 88
target-version = ['py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["heroes_platform"]
known_third_party = ["pytest", "fastapi", "pydantic"]

[tool.ruff]
target-version = "py39"
line-length = 88

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = ["E501", "B008", "C901"]

[tool.mypy]
python_version = "3.11"
warn_return_any = false
warn_unused_configs = false
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = false
disallow_untyped_decorators = false
no_implicit_optional = false
warn_redundant_casts = false
warn_unused_ignores = false
warn_no_return = false
warn_unreachable = false
strict_equality = false
ignore_missing_imports = true
ignore_errors = true

[[tool.mypy.overrides]]
module = [
    "tests.*",
    "test.*",
    "mcp.*",
    "mcp_server.*",
    "standards.*",
    "telethon.*",
    "telethon.sessions.*",
    "telethon.tl.*",
    "telethon.tl.types.*",
    "telethon.tl.functions.*",
    "telethon.errors.*",
    "telethon.errors.rpcerrorlist.*",
    "nest_asyncio.*",
    "telegram-mcp.*",
    "zoom-mcp.*",
    "scripts.*",
    "potpie.*",
    "potpie.app.*",
    "app.*"
]
disallow_untyped_defs = false
disallow_untyped_decorators = false
ignore_errors = true
ignore_missing_imports = true

[tool.pyright]
include = ["."]
exclude = [
    "**/node_modules",
    "**/__pycache__",
    "../.venv",
    ".mypy_cache",
    ".ruff_cache",
    "mcp_server",
    "telegram-mcp",
    "playwright-mcp",
    "n8n-mcp",
    "cocoindex-project",
    "chrome-mcp-extension",
    "mcp-chrome-project",
    "rickai-mkdocs",
    "output",
    "output_screenshot",
    "archive",
    "../scripts",
]
pythonVersion = "3.11"
pythonPlatform = "Darwin"
typeCheckingMode = "off"
useLibraryCodeForTypes = true
venvPath = "."
venv = ".venv"
reportMissingImports = false
pythonPath = [
    ".",
    "./heroes_platform/src",
    "./heroes_platform/heroes_mcp",
    "./heroes_platform/heroes_mcp/src",
    "./heroes_platform/heroes_mcp/workflows",
    "./heroes_platform/utils",
    "./heroes_platform/scripts",
    "./heroes_platform/potpie/app"
]
reportMissingTypeStubs = false
reportUnusedImport = true
reportUnusedClass = true
reportUnusedFunction = true
reportUnusedVariable = true
reportDuplicateImport = true
reportOptionalSubscript = true
reportOptionalMemberAccess = true
reportOptionalCall = true
reportOptionalIterable = true
reportOptionalContextManager = true
reportOptionalOperand = true
reportUntypedFunctionDecorator = true
reportUntypedClassDecorator = true
reportUntypedBaseClass = true
reportUntypedNamedTuple = true
reportPrivateUsage = true
reportConstantRedefinition = true
reportIncompatibleMethodOverride = true
reportIncompatibleVariableOverride = true
reportInconsistentConstructor = true
reportOverlappingOverloads = true
reportMissingSuperCall = true
reportUninitializedInstanceVariable = true
reportInvalidStringEscapeSequence = true
reportUnknownParameterType = true
reportUnknownArgumentType = true
reportUnknownLambdaType = true
reportUnknownVariableType = true
reportUnknownMemberType = true
reportMissingParameterType = true
reportMissingTypeArgument = true
reportInvalidTypeVarUse = true
reportCallInDefaultInitializer = true
reportUnnecessaryIsInstance = true
reportUnnecessaryCast = true
reportUnnecessaryComparison = true
reportAssertAlwaysTrue = true
reportSelfClsParameterName = true
reportImplicitStringConcatenation = true
reportUnusedExpression = true
reportGeneralTypeIssues = true

[tool.bandit]
exclude_dirs = ["tests", "test"]
skips = ["B101", "B601"]

[tool.safety]
output-format = "json"

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --strict-config --tb=short"
testpaths = ["tests"]
pythonpath = ["."]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "e2e: marks tests as end-to-end tests",
    "visual: marks tests as visual validation tests",
    "manual: marks tests as manual validation tests",
    "playwright: marks tests as Playwright browser tests",
]
asyncio_default_fixture_loop_scope = "function"
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
    "ignore::UserWarning",
]

[tool.coverage.run]
source = ["."]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/.venv/*",
    "*/build/*",
    "*/dist/*",
    "mcp_server/*",
    "telegram-mcp/*",
    "playwright-mcp/*",
    "n8n-mcp/*",
    "cocoindex-project/*",
    "chrome-mcp-extension/*",
    "mcp-chrome-project/*",
    "rickai-mkdocs/*",
    "output/*",
    "output_screenshot/*",
    "archive/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
fail_under = 80
show_missing = true
precision = 2
