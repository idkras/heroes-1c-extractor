#!/usr/bin/env python3
"""
Heroes Platform - Portable Setup Script

–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç heroes-platform –¥–ª—è –æ—Ç—á—É–∂–¥–∞–µ–º–æ—Å—Ç–∏ –º–µ–∂–¥—É –ø—Ä–æ–µ–∫—Ç–∞–º–∏.
–°–æ–∑–¥–∞–µ—Ç .venv –≤–Ω—É—Ç—Ä–∏ heroes-platform/ –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –≤—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏.

–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
    python3 setup_portable.py

–ü–æ—Å–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è heroes-platform/ –º–æ–∂–Ω–æ –∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –≤ –ª—é–±–æ–π –ø—Ä–æ–µ–∫—Ç.
"""

import os
import sys
import subprocess
import shutil
from pathlib import Path

def run_command(cmd, cwd=None, check=True):
    """–í—ã–ø–æ–ª–Ω–∏—Ç—å –∫–æ–º–∞–Ω–¥—É —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫"""
    print(f"üîÑ –í—ã–ø–æ–ª–Ω—è—é: {' '.join(cmd)}")
    try:
        result = subprocess.run(cmd, cwd=cwd, check=check, capture_output=True, text=True)
        if result.stdout:
            print(f"‚úÖ {result.stdout.strip()}")
        return result
    except subprocess.CalledProcessError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        if e.stderr:
            print(f"   {e.stderr.strip()}")
        if check:
            sys.exit(1)
        return e

def check_python_version():
    """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –≤–µ—Ä—Å–∏—é Python"""
    print("üêç –ü—Ä–æ–≤–µ—Ä—è—é –≤–µ—Ä—Å–∏—é Python...")
    version = sys.version_info
    if version.major < 3 or (version.major == 3 and version.minor < 11):
        print(f"‚ùå –¢—Ä–µ–±—É–µ—Ç—Å—è Python 3.11+, —Ç–µ–∫—É—â–∞—è –≤–µ—Ä—Å–∏—è: {version.major}.{version.minor}")
        sys.exit(1)
    print(f"‚úÖ Python {version.major}.{version.minor}.{version.micro} - OK")

def setup_venv():
    """–°–æ–∑–¥–∞—Ç—å –∏ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å .venv"""
    print("\nüîß –ù–∞—Å—Ç—Ä–∞–∏–≤–∞—é –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ...")
    
    # –£–¥–∞–ª–∏—Ç—å —Å—Ç–∞—Ä—ã–π .venv –µ—Å–ª–∏ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    venv_path = Path(".venv")
    if venv_path.exists():
        print("üóëÔ∏è –£–¥–∞–ª—è—é —Å—Ç–∞—Ä—ã–π .venv...")
        shutil.rmtree(venv_path)
    
    # –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π .venv
    print("üì¶ –°–æ–∑–¥–∞—é –Ω–æ–≤—ã–π .venv...")
    run_command([sys.executable, "-m", "venv", ".venv"])
    
    # –û–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø—É—Ç—å –∫ pip –≤ .venv
    if os.name == 'nt':  # Windows
        pip_path = ".venv/Scripts/pip"
        python_path = ".venv/Scripts/python"
    else:  # Unix/Linux/macOS
        pip_path = ".venv/bin/pip"
        python_path = ".venv/bin/python"
    
    # –û–±–Ω–æ–≤–∏—Ç—å pip
    print("‚¨ÜÔ∏è –û–±–Ω–æ–≤–ª—è—é pip...")
    run_command([python_path, "-m", "pip", "install", "--upgrade", "pip"])
    
    return python_path, pip_path

def install_dependencies(python_path, pip_path):
    """–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏"""
    print("\nüìö –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏...")
    
    # –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ heroes-mcp
    if Path("heroes-mcp/requirements.txt").exists():
        print("üîß –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ heroes-mcp...")
        run_command([pip_path, "install", "-r", "heroes-mcp/requirements.txt"])
    
    # –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ pyproject.toml
    if Path("pyproject.toml").exists():
        print("üîß –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ pyproject.toml...")
        run_command([pip_path, "install", "-e", ".[dev]"])

def test_installation(python_path):
    """–ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å —É—Å—Ç–∞–Ω–æ–≤–∫—É"""
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä—É—é —É—Å—Ç–∞–Ω–æ–≤–∫—É...")
    
    # –¢–µ—Å—Ç heroes-mcp
    if Path("heroes-mcp/src/heroes-mcp.py").exists():
        print("üîß –¢–µ—Å—Ç–∏—Ä—É—é heroes-mcp...")
        result = run_command([python_path, "heroes-mcp/src/heroes-mcp.py", "--test"], check=False)
        if result.returncode == 0:
            print("‚úÖ heroes-mcp —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        else:
            print("‚ö†Ô∏è heroes-mcp –∏–º–µ–µ—Ç –ø—Ä–æ–±–ª–µ–º—ã, –Ω–æ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞")

def create_activation_script():
    """–°–æ–∑–¥–∞—Ç—å —Å–∫—Ä–∏–ø—Ç –∞–∫—Ç–∏–≤–∞—Ü–∏–∏"""
    print("\nüìù –°–æ–∑–¥–∞—é —Å–∫—Ä–∏–ø—Ç –∞–∫—Ç–∏–≤–∞—Ü–∏–∏...")
    
    activation_script = """#!/bin/bash
# Heroes Platform - Activation Script
# –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: source activate.sh

echo "üöÄ –ê–∫—Ç–∏–≤–∏—Ä—É—é Heroes Platform..."

# –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å .venv
if [ -f ".venv/bin/activate" ]; then
    source .venv/bin/activate
    echo "‚úÖ –í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–æ"
else
    echo "‚ùå .venv –Ω–µ –Ω–∞–π–¥–µ–Ω. –ó–∞–ø—É—Å—Ç–∏—Ç–µ setup_portable.py"
    exit 1
fi

# –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å PYTHONPATH
export PYTHONPATH="$(pwd):$PYTHONPATH"
echo "‚úÖ PYTHONPATH —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: $(pwd)"

echo "üéâ Heroes Platform –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!"
echo "üí° –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
echo "   python3 heroes-mcp/src/heroes-mcp.py --test"
echo "   python3 -m pytest tests/"
"""
    
    with open("activate.sh", "w") as f:
        f.write(activation_script)
    
    # –°–¥–µ–ª–∞—Ç—å –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–º
    os.chmod("activate.sh", 0o755)
    print("‚úÖ –°–∫—Ä–∏–ø—Ç –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ —Å–æ–∑–¥–∞–Ω: activate.sh")

def create_readme():
    """–°–æ–∑–¥–∞—Ç—å README –¥–ª—è –æ—Ç—á—É–∂–¥–∞–µ–º–æ—Å—Ç–∏"""
    print("\nüìñ –°–æ–∑–¥–∞—é README...")
    
    readme_content = """# Heroes Platform - Portable Setup

## üöÄ –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç

1. **–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –æ–∫—Ä—É–∂–µ–Ω–∏–µ:**
   ```bash
   source activate.sh
   ```

2. **–ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å heroes-mcp:**
   ```bash
   python3 heroes-mcp/src/heroes-mcp.py --test
   ```

3. **–ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç—ã:**
   ```bash
   python3 -m pytest tests/
   ```

## üìÅ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞

```
heroes-platform/
‚îú‚îÄ‚îÄ .venv/                    # –í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ
‚îú‚îÄ‚îÄ heroes-mcp/               # MCP —Å–µ—Ä–≤–µ—Ä—ã
‚îú‚îÄ‚îÄ telegram-mcp/             # Telegram MCP
‚îú‚îÄ‚îÄ playwright-mcp/           # Playwright MCP
‚îú‚îÄ‚îÄ n8n-mcp/                  # N8N MCP
‚îú‚îÄ‚îÄ pyproject.toml            # –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø—Ä–æ–µ–∫—Ç–∞
‚îú‚îÄ‚îÄ requirements.txt          # –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
‚îú‚îÄ‚îÄ activate.sh               # –°–∫—Ä–∏–ø—Ç –∞–∫—Ç–∏–≤–∞—Ü–∏–∏
‚îî‚îÄ‚îÄ README.md                 # –≠—Ç–æ—Ç —Ñ–∞–π–ª
```

## üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤ Cursor

–î–æ–±–∞–≤—å—Ç–µ –≤ `.cursor/mcp.json`:

```json
{
  "mcpServers": {
    "heroes-mcp": {
      "command": "python3",
      "args": [
        "${workspaceFolder}/heroes-platform/heroes-mcp/src/heroes-mcp.py"
      ],
      "env": {
        "PYTHONPATH": "${workspaceFolder}/heroes-platform"
      }
    }
  }
}
```

## üì¶ –û—Ç—á—É–∂–¥–∞–µ–º–æ—Å—Ç—å

–≠—Ç–æ—Ç –ø—Ä–æ–µ–∫—Ç –ø–æ–ª–Ω–æ—Å—Ç—å—é –æ—Ç—á—É–∂–¥–∞–µ–º:
- ‚úÖ –ö–æ–ø–∏—Ä—É–π—Ç–µ `heroes-platform/` –≤ –ª—é–±–æ–π –ø—Ä–æ–µ–∫—Ç
- ‚úÖ –ó–∞–ø—É—Å—Ç–∏—Ç–µ `source activate.sh`
- ‚úÖ –í—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –∏ –º–æ–¥—É–ª–∏ –∑–∞–≥—Ä—É–∂–∞—é—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏

## üÜò –£—Å—Ç—Ä–∞–Ω–µ–Ω–∏–µ –Ω–µ–ø–æ–ª–∞–¥–æ–∫

### –ü—Ä–æ–±–ª–µ–º–∞: "Module not found"
```bash
source activate.sh
export PYTHONPATH="$(pwd):$PYTHONPATH"
```

### –ü—Ä–æ–±–ª–µ–º–∞: "MCP server not found"
- –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ Cursor IDE –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω
- –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—É—Ç—å –≤ `.cursor/mcp.json`
- –ê–∫—Ç–∏–≤–∏—Ä—É–π—Ç–µ .venv: `source activate.sh`

### –ü—Ä–æ–±–ª–µ–º–∞: "Dependencies missing"
```bash
source activate.sh
pip install -r heroes-mcp/requirements.txt
```

## üìû –ü–æ–¥–¥–µ—Ä–∂–∫–∞

–ü—Ä–∏ –≤–æ–∑–Ω–∏–∫–Ω–æ–≤–µ–Ω–∏–∏ –ø—Ä–æ–±–ª–µ–º:
1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ .venv –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω
2. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ PYTHONPATH —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
3. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ Cursor IDE
"""
    
    with open("README.md", "w") as f:
        f.write(readme_content)
    
    print("‚úÖ README —Å–æ–∑–¥–∞–Ω: README.md")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ Heroes Platform - Portable Setup")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, —á—Ç–æ –º—ã –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    if not Path("pyproject.toml").exists():
        print("‚ùå pyproject.toml –Ω–µ –Ω–∞–π–¥–µ–Ω. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –∏–∑ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ heroes-platform/")
        sys.exit(1)
    
    # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –≤–µ—Ä—Å–∏—é Python
    check_python_version()
    
    # –ù–∞—Å—Ç—Ä–æ–∏—Ç—å .venv
    python_path, pip_path = setup_venv()
    
    # –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
    install_dependencies(python_path, pip_path)
    
    # –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å —É—Å—Ç–∞–Ω–æ–≤–∫—É
    test_installation(python_path)
    
    # –°–æ–∑–¥–∞—Ç—å —Å–∫—Ä–∏–ø—Ç –∞–∫—Ç–∏–≤–∞—Ü–∏–∏
    create_activation_script()
    
    # –°–æ–∑–¥–∞—Ç—å README
    create_readme()
    
    print("\nüéâ Heroes Platform –Ω–∞—Å—Ç—Ä–æ–µ–Ω –¥–ª—è –æ—Ç—á—É–∂–¥–∞–µ–º–æ—Å—Ç–∏!")
    print("\nüìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
    print("1. source activate.sh")
    print("2. python3 heroes-mcp/src/heroes-mcp.py --test")
    print("3. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ heroes-platform/ –≤ –ª—é–±–æ–π –ø—Ä–æ–µ–∫—Ç")
    print("\n‚úÖ –ì–æ—Ç–æ–≤–æ! –ü—Ä–æ–µ–∫—Ç –ø–æ–ª–Ω–æ—Å—Ç—å—é –æ—Ç—á—É–∂–¥–∞–µ–º.")

if __name__ == "__main__":
    main()
