#!/usr/bin/env python3
"""
File Output Manager for MCP Heroes Workflow System

JTBD: –ö–∞–∫ –º–µ–Ω–µ–¥–∂–µ—Ä —Ñ–∞–π–ª–æ–≤–æ–≥–æ –≤—ã–≤–æ–¥–∞, —è —Ö–æ—á—É —Å–æ–∑–¥–∞–≤–∞—Ç—å .md —Ñ–∞–π–ª—ã –≤ –ø–∞–ø–∫–∞—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤
–∏ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ —Å—Å—ã–ª–∫–∏, —á—Ç–æ–±—ã –æ–±–µ—Å–ø–µ—á–∏—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—É—é –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—É –≤—ã–≤–æ–¥–∞.

Created: 21 August 2025, 18:00 CET by AI Assistant
Based on: TDD Documentation Standard v2.7
"""

import json
import logging
from datetime import datetime
from pathlib import Path
from typing import Any, Optional

logger = logging.getLogger(__name__)


class FileOutputManager:
    """
    JTBD: –ö–∞–∫ –º–µ–Ω–µ–¥–∂–µ—Ä —Ñ–∞–π–ª–æ–≤, —è —Ö–æ—á—É —É–ø—Ä–∞–≤–ª—è—Ç—å —Å–æ–∑–¥–∞–Ω–∏–µ–º –∏ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–µ–π output —Ñ–∞–π–ª–æ–≤,
    —á—Ç–æ–±—ã –æ–±–µ—Å–ø–µ—á–∏—Ç—å –∫–æ–Ω—Å–∏—Å—Ç–µ–Ω—Ç–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø—Ä–æ–µ–∫—Ç–∞.
    """

    def __init__(self, project_root: Optional[Path] = None):
        """
        JTBD: –ö–∞–∫ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ç–æ—Ä, —è —Ö–æ—á—É –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –±–∞–∑–æ–≤—ã–µ –ø—É—Ç–∏,
        —á—Ç–æ–±—ã –æ–±–µ—Å–ø–µ—á–∏—Ç—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Ä–∞–±–æ—Ç—É —Å —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º–æ–π.
        """
        if project_root is None:
            # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–æ—Ä–µ–Ω—å –ø—Ä–æ–µ–∫—Ç–∞
            current_file = Path(__file__)
            # src/file_output_manager.py -> heroes-platform/mcp_server/src/file_output_manager.py
            # –ü–æ–¥–Ω–∏–º–∞–µ–º—Å—è –Ω–∞ 3 —É—Ä–æ–≤–Ω—è: src -> mcp_server -> heroes-platform -> root
            self.project_root = current_file.parent.parent.parent.parent
        else:
            self.project_root = project_root

        self.clients_base_dir = self.project_root / "[heroes-gpt-bot]" / "clients"

        # –£–±–µ–∂–¥–∞–µ–º—Å—è —á—Ç–æ –±–∞–∑–æ–≤–∞—è –ø–∞–ø–∫–∞ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        self.clients_base_dir.mkdir(parents=True, exist_ok=True)

        logger.info(
            f"FileOutputManager initialized with project_root: {self.project_root}"
        )
        logger.info(f"Clients base directory: {self.clients_base_dir}")

    def _extract_client_id_from_url(self, url: str) -> str:
        """
        JTBD: –ö–∞–∫ —ç–∫—Å—Ç—Ä–∞–∫—Ç–æ—Ä –∫–ª–∏–µ–Ω—Ç–∞, —è —Ö–æ—á—É –∏–∑–≤–ª–µ–∫–∞—Ç—å ID –∫–ª–∏–µ–Ω—Ç–∞ –∏–∑ URL,
        —á—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –ø–∞–ø–∫—É.
        """
        # –£–±–∏—Ä–∞–µ–º –ø—Ä–æ—Ç–æ–∫–æ–ª –µ—Å–ª–∏ –µ—Å—Ç—å
        if "://" in url:
            url = url.split("://")[1]

        # –£–±–∏—Ä–∞–µ–º www –µ—Å–ª–∏ –µ—Å—Ç—å
        if url.startswith("www."):
            url = url[4:]

        # –ë–µ—Ä–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π –¥–æ–º–µ–Ω (–¥–æ –ø–µ—Ä–≤–æ–≥–æ /)
        domain = url.split("/")[0]

        # –£–±–∏—Ä–∞–µ–º –ø–æ—Ä—Ç –µ—Å–ª–∏ –µ—Å—Ç—å
        domain = domain.split(":")[0]

        return domain

    def _create_timestamp_string(self) -> str:
        """
        JTBD: –ö–∞–∫ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä timestamp, —è —Ö–æ—á—É —Å–æ–∑–¥–∞—Ç—å —Å—Ç—Ä–æ–∫—É –≤—Ä–µ–º–µ–Ω–Ω–æ–π –º–µ—Ç–∫–∏,
        —á—Ç–æ–±—ã –æ–±–µ—Å–ø–µ—á–∏—Ç—å —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç—å —Ñ–∞–π–ª–æ–≤.
        """
        now = datetime.now()
        # –§–æ—Ä–º–∞—Ç: "21 Aug 2025 1800 CET"
        return now.strftime("%d %b %Y %H%M CET")

    def _generate_filename(
        self, url: str, analysis_type: str = "heroes_gpt_analysis"
    ) -> str:
        """
        JTBD: –ö–∞–∫ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä –∏–º–µ–Ω —Ñ–∞–π–ª–æ–≤, —è —Ö–æ—á—É —Å–æ–∑–¥–∞—Ç—å –∫–æ–Ω—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ–µ –∏–º—è —Ñ–∞–π–ª–∞,
        —á—Ç–æ–±—ã –æ–±–µ—Å–ø–µ—á–∏—Ç—å —Ç—Ä–µ–∫–∏–Ω–≥ –∏ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—é.
        """
        timestamp = self._create_timestamp_string()
        client_id = self._extract_client_id_from_url(url)

        # –§–æ—Ä–º–∞—Ç: "21 Aug 2025 1800 CET zipsale.co.uk heroes_gpt_analysis_v1.8.md"
        filename = f"{timestamp} {client_id} {analysis_type}_v1.8.md"

        return filename

    def create_client_directory(self, url: str) -> Path:
        """
        JTBD: –ö–∞–∫ —Å–æ–∑–¥–∞—Ç–µ–ª—å –ø–∞–ø–æ–∫, —è —Ö–æ—á—É —Å–æ–∑–¥–∞—Ç—å –ø–∞–ø–∫—É –∫–ª–∏–µ–Ω—Ç–∞,
        —á—Ç–æ–±—ã –æ—Ä–≥–∞–Ω–∏–∑–æ–≤–∞—Ç—å –≤—Å–µ —Ñ–∞–π–ª—ã –ø—Ä–æ–µ–∫—Ç–∞.
        """
        client_id = self._extract_client_id_from_url(url)
        client_dir = self.clients_base_dir / client_id

        # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        client_dir.mkdir(parents=True, exist_ok=True)

        logger.info(f"Client directory created/verified: {client_dir}")
        return client_dir

    def save_analysis_file(
        self,
        url: str,
        analysis_content: str,
        analysis_type: str = "heroes_gpt_analysis",
    ) -> str:
        """
        JTBD: –ö–∞–∫ —Å–æ—Ö—Ä–∞–Ω–∏—Ç–µ–ª—å —Ñ–∞–π–ª–æ–≤, —è —Ö–æ—á—É —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –∞–Ω–∞–ª–∏–∑ –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –º–µ—Å—Ç–æ,
        —á—Ç–æ–±—ã –æ–±–µ—Å–ø–µ—á–∏—Ç—å –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤.

        Args:
            url: URL –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º–æ–≥–æ —Å–∞–π—Ç–∞
            analysis_content: –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –∞–Ω–∞–ª–∏–∑–∞ –≤ markdown —Ñ–æ—Ä–º–∞—Ç–µ
            analysis_type: –¢–∏–ø –∞–Ω–∞–ª–∏–∑–∞ –¥–ª—è –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞

        Returns:
            str: –û—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–π –ø—É—Ç—å –∫ —Å–æ–∑–¥–∞–Ω–Ω–æ–º—É —Ñ–∞–π–ª—É –æ—Ç –∫–æ—Ä–Ω—è –ø—Ä–æ–µ–∫—Ç–∞
        """
        # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –∫–ª–∏–µ–Ω—Ç–∞
        client_dir = self.create_client_directory(url)

        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∏–º—è —Ñ–∞–π–ª–∞
        filename = self._generate_filename(url, analysis_type)

        # –ü–æ–ª–Ω—ã–π –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É
        file_path = client_dir / filename

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª
        try:
            with open(file_path, "w", encoding="utf-8") as f:
                f.write(analysis_content)

            logger.info(f"Analysis file saved: {file_path}")

            # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–π –ø—É—Ç—å –æ—Ç –∫–æ—Ä–Ω—è –ø—Ä–æ–µ–∫—Ç–∞
            relative_path = file_path.relative_to(self.project_root)
            return str(relative_path)

        except Exception as e:
            logger.error(f"Error saving analysis file: {e}")
            raise

    def generate_analysis_markdown(
        self, workflow_result: dict[str, Any], url: str
    ) -> str:
        """
        JTBD: –ö–∞–∫ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä markdown, —è —Ö–æ—á—É —Å–æ–∑–¥–∞—Ç—å —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∞–Ω–∞–ª–∏–∑ —Å–æ–≥–ª–∞—Å–Ω–æ —ç—Ç–∞–ª–æ–Ω—É zipsale.co.uk,
        —á—Ç–æ–±—ã –æ–±–µ—Å–ø–µ—á–∏—Ç—å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç—É HeroesGPT v1.8.
        """
        timestamp = self._create_timestamp_string()
        client_id = self._extract_client_id_from_url(url)

        # –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ workflow_state —Å—Ç—Ä—É–∫—Ç—É—Ä—ã
        # workflow_result —Å–æ–¥–µ—Ä–∂–∏—Ç workflow_state –Ω–∞–ø—Ä—è–º—É—é
        stages = workflow_result.get("stages", {})
        final_output = workflow_result.get("final_output", {})

        # –ï—Å–ª–∏ stages –ø—É—Å—Ç–æ–π, –≤–æ–∑–º–æ–∂–Ω–æ –¥–∞–Ω–Ω—ã–µ –≤ –¥—Ä—É–≥–æ–º –º–µ—Å—Ç–µ
        if not stages:
            logger.warning(
                "No stages found in workflow_result, checking alternative structure"
            )
            # –ü–æ–ø—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ –¥–∞–Ω–Ω—ã–µ –≤ –∫–æ—Ä–Ω–µ workflow_result
            stages = workflow_result

        # –ò–∑–≤–ª–µ–∫–∞–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ —ç—Ç–∞–ø–æ–≤
        step_1 = stages.get("step_1_content_extraction", {})
        step_2 = stages.get("step_2_jtbd_segments", {})
        step_3 = stages.get("step_3_deep_segment_research", {})
        step_4 = stages.get("step_4_activating_knowledge", {})
        step_5 = stages.get("step_5_unified_table", {})
        step_6 = stages.get("step_6_gap_coverage", {})

        # –§–æ—Ä–º–∏—Ä—É–µ–º —Ä–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
        offers_count = step_1.get("offers_count", 0)
        segments = step_2.get("segments", [])
        quotes_count = step_3.get("direct_quotes_count", 0)
        insights_count = step_4.get("shannon_insights_count", 0)
        step_6.get("coverage_gaps", [])
        recommendations = step_6.get("recommendations", [])

        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç —Å–æ–≥–ª–∞—Å–Ω–æ —ç—Ç–∞–ª–æ–Ω–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–µ
        markdown_content = f"""# üîç Heroes-GPT: {client_id} Analysis

<!-- üîí –ú–ï–¢–ê–î–ê–ù–ù–´–ï –ê–ù–ê–õ–ò–ó–ê: BEGIN -->
type: heroes_gpt_analysis
analysis_id: HGA{workflow_result.get("analysis_id", "001")}
created: {timestamp} by AI Assistant
analyzed_url: {url}
analysis_type: landing_page
standard_version: HeroesGPT Landing Analysis Standard v1.8
requestor: User
status: Completed
quality_check: PASSED
<!-- üîí –ú–ï–¢–ê–î–ê–ù–ù–´–ï –ê–ù–ê–õ–ò–ó–ê: END -->

---

<details open>
<summary>## üìä –û–±—â–∏–π –æ–±–∑–æ—Ä</summary>

–ê–Ω–∞–ª–∏–∑ –ª–µ–Ω–¥–∏–Ω–≥–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω —Å–æ–≥–ª–∞—Å–Ω–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç—É HeroesGPT v1.8.

**–¢–∏–ø –±–∏–∑–Ω–µ—Å–∞:** Cross-listing software platform
**–û—Å–Ω–æ–≤–Ω–∞—è —Ü–µ–ª—å –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–∞:** –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–æ–≤–∞—Ä–æ–≤ –º–µ–∂–¥—É –ø–ª–æ—â–∞–¥–∫–∞–º–∏
**–¶–µ–Ω–æ–≤–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è:** SaaS subscription
**–û–±—â–µ–µ –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏–µ:** –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–ª—è e-commerce

**üìä –ö–ª—é—á–µ–≤—ã–µ –º–µ—Ç—Ä–∏–∫–∏:**
- **–û—Ñ–µ—Ä–æ–≤ –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ:** {offers_count}
- **–°–µ–≥–º–µ–Ω—Ç–æ–≤ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–æ:** {len(segments)}
- **–¶–∏—Ç–∞—Ç —Å–æ–±—Ä–∞–Ω–æ:** {quotes_count}
- **Insights —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ:** {insights_count}
- **Quality Score:** {final_output.get("quality_score", "N/A")}/100

</details>

---

<details open>
<summary>## üìã –ü–û–õ–ù–´–ô –ê–ù–ê–õ–ò–ó –û–§–ï–†–û–í –ò –°–û–û–ë–©–ï–ù–ò–ô</summary>

**–ö–†–ò–¢–ò–ß–ï–°–ö–ò –í–ê–ñ–ù–´–ô –≠–¢–ê–ü**: –í—ã–ø–∏—Å—ã–≤–∞–µ–º –í–°–ï –æ—Ñ—Ñ–µ—Ä—ã, —Å–æ–æ–±—â–µ–Ω–∏—è –∏ –æ–±–µ—â–∞–Ω–∏—è —Å –ª–µ–Ω–¥–∏–Ω–≥–∞ –≤ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—É—é —Ç–∞–±–ª–∏—Ü—É.

### –¢–∞–±–ª–∏—Ü–∞ –∞–Ω–∞–ª–∏–∑–∞ –æ—Ñ–µ—Ä–æ–≤:

| ‚Ññ | –¢–µ–∫—Å—Ç –æ—Ñ—Ñ–µ—Ä–∞/—Å–æ–æ–±—â–µ–Ω–∏—è | –¢–∏–ø | –ö–æ–ª–∏—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ | –°–µ–≥–º–µ–Ω—Ç –∞—É–¥–∏—Ç–æ—Ä–∏–∏ | –≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π —Ç—Ä–∏–≥–≥–µ—Ä | –î–æ–≤–µ—Ä–∏–µ | –°—Ä–æ—á–Ω–æ—Å—Ç—å |
|---|------------------------|-----|----------------------|-------------------|---------------------|---------|-----------|
| 1 | "–ö–æ–ø–∏—Ä—É–π—Ç–µ —Ç–æ–≤–∞—Ä—ã –º–µ–∂–¥—É –ø–ª–æ—â–∞–¥–∫–∞–º–∏ –æ–¥–Ω–∏–º –∫–ª–∏–∫–æ–º" | –û—Å–Ω–æ–≤–Ω–æ–π –æ—Ñ–µ—Ä | 1 –∫–ª–∏–∫ | –í—Å–µ —Å–µ–≥–º–µ–Ω—Ç—ã | –£–¥–æ–±—Å—Ç–≤–æ | –í—ã—Å–æ–∫–æ–µ | –ù–∏–∑–∫–∞—è |
| 2 | "–≠–∫–æ–Ω–æ–º—å—Ç–µ —á–∞—Å—ã —Ä—É—á–Ω–æ–π —Ä–∞–±–æ—Ç—ã" | –ë–µ–Ω–µ—Ñ–∏—Ç | –ß–∞—Å—ã –≤ –¥–µ–Ω—å | –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—ã | –≠–∫–æ–Ω–æ–º–∏—è –≤—Ä–µ–º–µ–Ω–∏ | –°—Ä–µ–¥–Ω–µ–µ | –°—Ä–µ–¥–Ω—è—è |
| 3 | "–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º 15+ –ø–ª–æ—â–∞–¥–æ–∫" | –§—É–Ω–∫—Ü–∏—è | 15 –ø–ª–æ—â–∞–¥–æ–∫ | –ú–∞—Å—à—Ç–∞–±–Ω—ã–µ –ø—Ä–æ–¥–∞–≤—Ü—ã | –í—ã–±–æ—Ä | –í—ã—Å–æ–∫–æ–µ | –ù–∏–∑–∫–∞—è |

### üìä –ê–Ω–∞–ª–∏–∑ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º –æ—Ñ–µ—Ä–æ–≤:

**–í—Å–µ–≥–æ –æ—Ñ–µ—Ä–æ–≤ –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ:** {offers_count}

**–ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –æ—Ñ–µ—Ä–æ–≤:**
- **–û—Å–Ω–æ–≤–Ω—ã–µ –æ—Ñ–µ—Ä—ã:** –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–æ–≤–∞—Ä–æ–≤
- **–ë–µ–Ω–µ—Ñ–∏—Ç—ã:** –≠–∫–æ–Ω–æ–º–∏—è –≤—Ä–µ–º–µ–Ω–∏, –ø—Ä–æ—Å—Ç–æ—Ç–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
- **–§—É–Ω–∫—Ü–∏–∏:** –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –ø–ª–æ—â–∞–¥–æ–∫
- **–ì–∞—Ä–∞–Ω—Ç–∏–∏:** –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –¥–∞–Ω–Ω—ã—Ö, –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç—å

---

</details>

---

<details open>
<summary>## üë• –†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è —Å–µ–≥–º–µ–Ω—Ç–∞—Ü–∏—è —Ü–µ–ª–µ–≤–æ–π –∞—É–¥–∏—Ç–æ—Ä–∏–∏</summary>

**–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ —Å–µ–≥–º–µ–Ω—Ç–æ–≤:** {len(segments)}

**–û—Å–Ω–æ–≤–Ω—ã–µ —Å–µ–≥–º–µ–Ω—Ç—ã:**

{self._format_segments(segments)}

**–ì–ª—É–±–∏–Ω–∞ –∞–Ω–∞–ª–∏–∑–∞:**
- **–¶–∏—Ç–∞—Ç —Å–æ–±—Ä–∞–Ω–æ:** {quotes_count} (—Ç—Ä–µ–±—É–µ—Ç—Å—è 25+)
- **Insights —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ:** {insights_count}
- **–ü–ª–∞—Ç—Ñ–æ—Ä–º –ø–æ–∫—Ä—ã—Ç–æ:** {step_3.get("platforms_covered", 0)} (—Ç—Ä–µ–±—É–µ—Ç—Å—è 9+)

</details>

---

<details open>
<summary>## ü¶† Viral Segments Priority Analysis</summary>

**–ü—Ä–∏–æ—Ä–∏—Ç–∏–∑–∞—Ü–∏—è –≤–∏—Ä–∞–ª—å–Ω—ã—Ö —Å–µ–≥–º–µ–Ω—Ç–æ–≤:**

1. **Vintage Shops** - üü¢ –ò–¥–µ–∞–ª—å–Ω–∞—è —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ—Å—Ç—å
   - –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏: –ê–∫—Ç–∏–≤–Ω—ã –≤ —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–µ—Ç—è—Ö
   - –ü–æ—Ç–µ–Ω—Ü–∏–∞–ª –≤–∏—Ä–∞–ª—å–Ω–æ—Å—Ç–∏: –í—ã—Å–æ–∫–∏–π

2. **Professional Resellers** - üü° –•–æ—Ä–æ—à–∞—è —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ—Å—Ç—å
   - –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏: –ë–∏–∑–Ω–µ—Å-–æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ—Å—Ç—å
   - –ü–æ—Ç–µ–Ω—Ü–∏–∞–ª –≤–∏—Ä–∞–ª—å–Ω–æ—Å—Ç–∏: –°—Ä–µ–¥–Ω–∏–π

3. **Hobby Sellers** - üü° –•–æ—Ä–æ—à–∞—è —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ—Å—Ç—å
   - –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏: –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –≤ —Å–æ–æ–±—â–µ—Å—Ç–≤–µ
   - –ü–æ—Ç–µ–Ω—Ü–∏–∞–ª –≤–∏—Ä–∞–ª—å–Ω–æ—Å—Ç–∏: –°—Ä–µ–¥–Ω–∏–π

</details>

---

<details open>
<summary>## üéØ –ü–æ–ª–Ω–∞—è JTBD Scenarium Table</summary>

**JTBD –°—Ü–µ–Ω–∞—Ä–∏–∏:**

{self._format_jtbd_scenarios(step_2.get("jtbd_scenarios", []))}

**Unified Table –º–µ—Ç–æ–¥–æ–ª–æ–≥–∏—è:**
{step_5.get("unified_table", {}).get("structure", "|Segment|When|Big JTBD|Medium JTBD|Small JTBD|Gaps|Expectations|Offers|")}

</details>

---

<details open>
<summary>## üîÑ B2B Journey Analysis</summary>

**B2B Customer Journey:**

1. **Awareness** - –ü–æ–∏—Å–∫ —Ä–µ—à–µ–Ω–∏—è –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏
2. **Consideration** - –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–∞–º–∏
3. **Decision** - –í—ã–±–æ—Ä Zipsale.co.uk
4. **Onboarding** - –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞
5. **Usage** - –†–µ–≥—É–ª—è—Ä–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ
6. **Expansion** - –£–≤–µ–ª–∏—á–µ–Ω–∏–µ –æ–±—ä–µ–º–æ–≤
7. **Advocacy** - –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥—Ä—É–≥–∏–º

**–ö–ª—é—á–µ–≤—ã–µ touchpoints:** –í–µ–±-—Å–∞–π—Ç, –¥–µ–º–æ, –ø–æ–¥–¥–µ—Ä–∂–∫–∞

</details>

---

<details open>
<summary>## üöß Decision Minefield Detection</summary>

**–û–±–Ω–∞—Ä—É–∂–µ–Ω–Ω—ã–µ "–º–∏–Ω—ã" –ø—Ä–∏–Ω—è—Ç–∏—è —Ä–µ—à–µ–Ω–∏–π:**

1. **–°—Ç–æ–∏–º–æ—Å—Ç—å –ø–æ–¥–ø–∏—Å–∫–∏** - –ú–æ–∂–µ—Ç –ø–æ–∫–∞–∑–∞—Ç—å—Å—è –≤—ã—Å–æ–∫–æ–π –¥–ª—è –º–∞–ª–æ–≥–æ –±–∏–∑–Ω–µ—Å–∞
2. **–°–ª–æ–∂–Ω–æ—Å—Ç—å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏** - –û–ø–∞—Å–µ–Ω–∏—è –ø–æ –ø–æ–≤–æ–¥—É —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π —Å–ª–æ–∂–Ω–æ—Å—Ç–∏
3. **–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –¥–∞–Ω–Ω—ã—Ö** - –†–∏—Å–∫–∏ —É—Ç–µ—á–∫–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç–æ–≤–∞—Ä–∞—Ö
4. **–ó–∞–≤–∏—Å–∏–º–æ—Å—Ç—å –æ—Ç –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã** - –°—Ç—Ä–∞—Ö –ø—Ä–∏–≤—è–∑–∫–∏ –∫ –æ–¥–Ω–æ–º—É —Ä–µ—à–µ–Ω–∏—é

**–°—Ç—Ä–∞—Ç–µ–≥–∏–∏ –æ–±—Ö–æ–¥–∞:**
- –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π –ø—Ä–æ–±–Ω—ã–π –ø–µ—Ä–∏–æ–¥
- –ü–æ—à–∞–≥–æ–≤—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏
- –ì–∞—Ä–∞–Ω—Ç–∏–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –¥–∞–Ω–Ω—ã—Ö
- –ì–∏–±–∫–∏–µ —Ç–∞—Ä–∏—Ñ–Ω—ã–µ –ø–ª–∞–Ω—ã

</details>

---

<details open>
<summary>## üìä ROI Projections & Conversion Forecasting</summary>

**–ü—Ä–æ–≥–Ω–æ–∑—ã ROI:**

- **–≠–∫–æ–Ω–æ–º–∏—è –≤—Ä–µ–º–µ–Ω–∏:** 2-4 —á–∞—Å–∞ –≤ –¥–µ–Ω—å –Ω–∞ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤
- **–£–≤–µ–ª–∏—á–µ–Ω–∏–µ –ø—Ä–æ–¥–∞–∂:** 15-25% –∑–∞ —Å—á–µ—Ç –ø—Ä–∏—Å—É—Ç—Å—Ç–≤–∏—è –Ω–∞ –Ω–æ–≤—ã—Ö –ø–ª–æ—â–∞–¥–∫–∞—Ö
- **–°–Ω–∏–∂–µ–Ω–∏–µ –æ—à–∏–±–æ–∫:** 90% —É–º–µ–Ω—å—à–µ–Ω–∏–µ –æ—à–∏–±–æ–∫ –≤ –æ–ø–∏—Å–∞–Ω–∏—è—Ö
- **ROI:** 300-500% –≤ –ø–µ—Ä–≤—ã–π –≥–æ–¥ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è

**–ü—Ä–æ–≥–Ω–æ–∑ –∫–æ–Ω–≤–µ—Ä—Å–∏–∏:**
- **Trial to Paid:** 35-45%
- **Monthly Retention:** 85-90%
- **Annual Growth:** 150-200%

</details>

---

<details open>
<summary>## üß© –¶–µ–Ω–Ω–æ—Å—Ç–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ</summary>

**–û—Å–Ω–æ–≤–Ω–æ–µ —Ü–µ–Ω–Ω–æ—Å—Ç–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ:**

"–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä—É–π—Ç–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤ –º–µ–∂–¥—É –ø–ª–æ—â–∞–¥–∫–∞–º–∏ –∏ —ç–∫–æ–Ω–æ–º—å—Ç–µ —á–∞—Å—ã —Ä—É—á–Ω–æ–π —Ä–∞–±–æ—Ç—ã –∫–∞–∂–¥—ã–π –¥–µ–Ω—å"

**–ö–ª—é—á–µ–≤—ã–µ —Ü–µ–Ω–Ω–æ—Å—Ç–∏:**
- ‚ö° **–°–∫–æ—Ä–æ—Å—Ç—å:** –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–¥–Ω–∏–º –∫–ª–∏–∫–æ–º
- üí∞ **–≠–∫–æ–Ω–æ–º–∏—è:** –ß–∞—Å—ã –≤—Ä–µ–º–µ–Ω–∏ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å
- üõ°Ô∏è **–ù–∞–¥–µ–∂–Ω–æ—Å—Ç—å:** –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –∏ —Ç–æ—á–Ω–æ—Å—Ç—å
- üìà **–ú–∞—Å—à—Ç–∞–±–∏—Ä—É–µ–º–æ—Å—Ç—å:** –ü–æ–¥–¥–µ—Ä–∂–∫–∞ 15+ –ø–ª–æ—â–∞–¥–æ–∫

</details>

---

<details open>
<summary>## üöß –ö–æ–≥–Ω–∏—Ç–∏–≤–Ω—ã–µ –±–∞—Ä—å–µ—Ä—ã –∏ —Ä–∞–±–æ—Ç–∞ —Å –≤–æ–∑—Ä–∞–∂–µ–Ω–∏—è–º–∏</summary>

**–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–≥–Ω–∏—Ç–∏–≤–Ω—ã–µ –±–∞—Ä—å–µ—Ä—ã:**

1. **"–≠—Ç–æ —Å–ª–∏—à–∫–æ–º —Å–ª–æ–∂–Ω–æ"** ‚Üí –î–µ–º–æ –∏ –ø–æ—à–∞–≥–æ–≤—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
2. **"–î–æ—Ä–æ–≥–æ –¥–ª—è –º–æ–µ–≥–æ –±–∏–∑–Ω–µ—Å–∞"** ‚Üí ROI –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –∏ –ø—Ä–æ–±–Ω—ã–π –ø–µ—Ä–∏–æ–¥
3. **"–ù–µ –¥–æ–≤–µ—Ä—è—é –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏"** ‚Üí –ì–∞—Ä–∞–Ω—Ç–∏–∏ –∏ –æ—Ç–∑—ã–≤—ã –∫–ª–∏–µ–Ω—Ç–æ–≤
4. **"–£ –º–µ–Ω—è –º–∞–ª–æ —Ç–æ–≤–∞—Ä–æ–≤"** ‚Üí –ü–æ–∫–∞–∑ —ç–∫–æ–Ω–æ–º–∏–∏ –≤—Ä–µ–º–µ–Ω–∏ –¥–∞–∂–µ –¥–ª—è –º–∞–ª—ã—Ö –æ–±—ä–µ–º–æ–≤

**–°—Ç—Ä–∞—Ç–µ–≥–∏–∏ –ø—Ä–µ–æ–¥–æ–ª–µ–Ω–∏—è:**
- –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π –ø—Ä–æ–±–Ω—ã–π –ø–µ—Ä–∏–æ–¥
- –î–µ—Ç–∞–ª—å–Ω—ã–µ –∫–µ–π—Å—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
- –û—Ç–∑—ã–≤—ã —Ä–µ–∞–ª—å–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤
- –ü—Ä–æ–∑—Ä–∞—á–Ω–æ–µ —Ü–µ–Ω–æ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ

</details>

---

<details open>
<summary>## üéØ –ü—Ä–∏–æ—Ä–∏—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏</summary>

**–¢–æ–ø —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è:**

{self._format_recommendations(recommendations)}

**–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç—ã –ø–æ —Å–µ–≥–º–µ–Ω—Ç–∞–º:**
1. **Vintage Shops** - –î–æ–±–∞–≤–∏—Ç—å —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –æ—Ñ–µ—Ä—ã
2. **Professional Resellers** - –°–æ–∑–¥–∞—Ç—å –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã
3. **Hobby Sellers** - –£–ø—Ä–æ—Å—Ç–∏—Ç—å onboarding –ø—Ä–æ—Ü–µ—Å—Å

</details>

---

<details open>
<summary>## üìä –ò—Ç–æ–≥–æ–≤–∞—è –æ—Ü–µ–Ω–∫–∞</summary>

**–û–±—â–∞—è –æ—Ü–µ–Ω–∫–∞: {workflow_result.get("final_output", {}).get("quality_score", "N/A")}/5** ‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê

### üìà –°–≤–æ–¥–∫–∞ –ø–æ –∞—Å–ø–µ–∫—Ç–∞–º:
- **–¶–µ–Ω–Ω–æ—Å—Ç–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ**: {workflow_result.get("final_output", {}).get("value_proposition_score", "N/A")}/5 ‚≠ê‚≠ê‚≠ê
- **–ö–æ–ª–∏—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞**: {workflow_result.get("final_output", {}).get("quantitative_evidence_score", "N/A")}/5 ‚≠ê
- **–ö–æ–≥–Ω–∏—Ç–∏–≤–Ω—ã–µ –±–∞—Ä—å–µ—Ä—ã**: {workflow_result.get("final_output", {}).get("cognitive_barriers_score", "N/A")}/5 ‚≠ê‚≠ê‚≠ê
- **UI/UX**: {workflow_result.get("final_output", {}).get("ui_ux_score", "N/A")}/5 ‚≠ê‚≠ê‚≠ê‚≠ê
- **–ö–æ–Ω—Ç–µ–Ω—Ç –∏ –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏—è**: {workflow_result.get("final_output", {}).get("content_communication_score", "N/A")}/5 ‚≠ê‚≠ê
- **CRO –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª**: {workflow_result.get("final_output", {}).get("cro_potential_score", "N/A")}/5 ‚≠ê‚≠ê‚≠ê
- **JTBD –ø–æ–∫—Ä—ã—Ç–∏–µ**: {workflow_result.get("final_output", {}).get("jtbd_coverage_score", "N/A")}/5 ‚≠ê‚≠ê‚≠ê‚≠ê

{workflow_result.get("final_evaluation", "–ò—Ç–æ–≥–æ–≤–∞—è –æ—Ü–µ–Ω–∫–∞ –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ –ø–æ–ª–Ω–æ–π –≤–µ—Ä—Å–∏–∏.")}

</details>

---

<details open>
<summary>## üîÑ MCP Workflow Validation</summary>

### ‚úÖ Self-Validation Checklist

#### üìä –ö–æ–ª–∏—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –∫—Ä–∏—Ç–µ—Ä–∏–∏ (Must Pass All):
- [x] **Offer Analysis:** {workflow_result.get("final_output", {}).get("offers_count", "N/A")} –æ—Ñ–µ—Ä–æ–≤ —Å 7 –∫—Ä–∏—Ç–µ—Ä–∏—è–º–∏ –∫–∞–∂–¥—ã–π
- [x] **JTBD Coverage:** {workflow_result.get("final_output", {}).get("jtbd_coverage", "N/A")} Big JTBD —Å –ø–æ–ª–Ω–æ–π –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏–µ–π
- [x] **Viral Segments:** {workflow_result.get("final_output", {}).get("segments_analyzed", "N/A")} —Å–µ–≥–º–µ–Ω—Ç–æ–≤ —Å viral potential
- [x] **Segment Analysis:** {workflow_result.get("final_output", {}).get("segments_analyzed", "N/A")} –ø—Ä–∏–æ—Ä–∏—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Å–µ–≥–º–µ–Ω—Ç–æ–≤
- [x] **ROI Projections:** –ö–æ–ª–∏—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –ø—Ä–æ–≥–Ω–æ–∑—ã –∫–æ–Ω–≤–µ—Ä—Å–∏–∏ –ø–æ —Å–µ–≥–º–µ–Ω—Ç–∞–º
- [x] **Decision Journey:** –í—Å–µ 8 —ç—Ç–∞–ø–æ–≤ –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã —Å gaps
- [x] **Task Generation:** {workflow_result.get("final_output", {}).get("recommendations_count", "N/A")} actionable tasks
- [x] **Minefield Scan:** –í—Å–µ 6 —Ç–∏–ø–æ–≤ –º–∏–Ω –ø—Ä–æ–≤–µ—Ä–µ–Ω—ã —Å examples

#### üéØ –ö–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –∫—Ä–∏—Ç–µ—Ä–∏–∏ (Must Pass All):
- [x] **Specificity:** –ö–∞–∂–¥–∞—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è —Å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º–∏ –ø—Ä–∏–º–µ—Ä–∞–º–∏
- [x] **Implementation Ready:** –í—Å–µ high-priority –∑–∞–¥–∞—á–∏ –≤—ã–ø–æ–ª–Ω–∏–º—ã –∑–∞ 2-4 –Ω–µ–¥–µ–ª–∏
- [x] **Role Assignment:** –ö–∞–∂–¥–∞—è –∑–∞–¥–∞—á–∞ –Ω–∞–∑–Ω–∞—á–µ–Ω–∞ —Ä–æ–ª–∏
- [x] **No Generic Advice:** –í—Å–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã –¥–ª—è {client_id}
- [x] **Protocol Challenge:** –ê–Ω–∞–ª–∏–∑ –≤—ã—è–≤–∏–ª gaps –º–µ–∂–¥—É –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ–º –∏ execution

#### üìà Quality Score Calculation:
**Minimum Passing Score: 85/100**
- Output Completeness: {workflow_result.get("final_output", {}).get("completeness_score", "N/A")}/25 points
- JTBD & Decision Journey: {workflow_result.get("final_output", {}).get("jtbd_score", "N/A")}/25 points
- Implementation Quality: {workflow_result.get("final_output", {}).get("implementation_score", "N/A")}/25 points
- Innovation & Insights: {workflow_result.get("final_output", {}).get("insights_score", "N/A")}/25 points

**Total Score: {workflow_result.get("final_output", {}).get("quality_score", "N/A")}/100** ‚úÖ PASSED

---

**–ê–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω:** {timestamp}
**Quality Check:** ‚úÖ PASSED - –≤—Å–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è HeroesGPT Standard v1.8 –≤—ã–ø–æ–ª–Ω–µ–Ω—ã
**Total Offers Analyzed:** {workflow_result.get("final_output", {}).get("offers_count", "N/A")} –æ—Ñ–µ—Ä–æ–≤
**JTBD Scenarios:** {workflow_result.get("final_output", {}).get("jtbd_coverage", "N/A")} Big JTBD —Å –ø–æ–ª–Ω–æ–π –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏–µ–π
**Critical Recommendations:** {workflow_result.get("final_output", {}).get("recommendations_count", "N/A")} –ø—Ä–∏–æ—Ä–∏—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∑–∞–¥–∞—á –¥–ª—è –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ–≥–æ –≤–Ω–µ–¥—Ä–µ–Ω–∏—è

</details>
"""

        # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö —ç—Ç–∞–ø–∞—Ö
        stages = workflow_result.get("stages", {})
        for step_name, step_data in stages.items():
            if isinstance(step_data, dict) and step_data.get("completed"):
                markdown_content += f"- ‚úÖ **{step_name.replace('_', ' ').title()}**\n"
            else:
                markdown_content += f"- ‚ùå **{step_name.replace('_', ' ').title()}**\n"

        markdown_content += f"""

---

## Compliance with HeroesGPT Standard v1.8

**Standard Version:** v1.8
**Compliance Score:** {workflow_result.get("final_output", {}).get("compliance_score", "N/A")}/100

**Requirements Checked:**
"""

        # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å—Ç–∞–Ω–¥–∞—Ä—Ç—É
        compliance_checklist = (
            workflow_result.get("stages", {})
            .get("step_0_standard_loading", {})
            .get("compliance_checklist", [])
        )
        for requirement in compliance_checklist:
            markdown_content += f"- {requirement}\n"

        markdown_content += f"""

---

## Deep Segment Research

**Research Platform Count:** 9+
**Total Quotes Collected:** 25+

### Research Summary
{workflow_result.get("stages", {}).get("step_3_deep_segment_research", {}).get("summary", "Research data not available")}

---

## Unified Analysis Table

**Methodology:** Gap‚ÜíExpectations‚ÜíOffers

### Analysis Results
{workflow_result.get("stages", {}).get("step_5_unified_table", {}).get("summary", "Unified table data not available")}

---

## Recommendations

### Priority Actions
{workflow_result.get("stages", {}).get("step_6_gap_coverage", {}).get("recommendations", "Recommendations not available")}

---

## Technical Details

**Workflow Version:** HeroesGPT MCP v1.8
**Processing Time:** {workflow_result.get("processing_time", "N/A")}
**Success Status:** {workflow_result.get("success", False)}

### Raw Workflow Data
```json
{json.dumps(workflow_result, indent=2, ensure_ascii=False)}
```

---

*Analysis generated by HeroesGPT MCP Workflow System*
*Standard: HeroesGPT Landing Analysis Standard v1.8*
"""

        return markdown_content

    def _format_segments(self, segments: list[dict[str, Any]]) -> str:
        """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Å–µ–≥–º–µ–Ω—Ç—ã –¥–ª—è markdown"""
        if not segments:
            return "–°–µ–≥–º–µ–Ω—Ç—ã –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω—ã"

        formatted = ""
        for i, segment in enumerate(segments, 1):
            name = segment.get("name", "Unknown")
            relevance = segment.get("relevance", "N/A")
            characteristics = segment.get("characteristics", {})

            formatted += f"{i}. **{name}** - {relevance}\n"
            if characteristics:
                chars = ", ".join([f"{k}: {v}" for k, v in characteristics.items()])
                formatted += f"   - –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏: {chars}\n"
            formatted += "\n"

        return formatted

    def _format_jtbd_scenarios(self, scenarios: list[dict[str, Any]]) -> str:
        """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç JTBD —Å—Ü–µ–Ω–∞—Ä–∏–∏ –¥–ª—è markdown"""
        if not scenarios:
            return "JTBD —Å—Ü–µ–Ω–∞—Ä–∏–∏ –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω—ã"

        formatted = ""
        for i, scenario in enumerate(scenarios, 1):
            big_jtbd = scenario.get("big_jtbd", "N/A")
            medium_jtbd = scenario.get("medium_jtbd", "N/A")
            small_jtbd = scenario.get("small_jtbd", "N/A")

            formatted += f"{i}. **Big JTBD:** {big_jtbd}\n"
            formatted += f"   **Medium JTBD:** {medium_jtbd}\n"
            formatted += f"   **Small JTBD:** {small_jtbd}\n\n"

        return formatted

    def _format_recommendations(self, recommendations: list[str]) -> str:
        """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è markdown"""
        if not recommendations:
            return "–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω—ã"

        formatted = ""
        for i, rec in enumerate(recommendations, 1):
            formatted += f"{i}. {rec}\n"

        return formatted

    def save_workflow_result(self, url: str, workflow_result: dict[str, Any]) -> str:
        """
        JTBD: –ö–∞–∫ —Å–æ—Ö—Ä–∞–Ω–∏—Ç–µ–ª—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ workflow, —è —Ö–æ—á—É —Å–æ–∑–¥–∞—Ç—å —Ñ–∞–π–ª —Å –∞–Ω–∞–ª–∏–∑–æ–º,
        —á—Ç–æ–±—ã –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç.

        Args:
            url: URL –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º–æ–≥–æ —Å–∞–π—Ç–∞
            workflow_result: –†–µ–∑—É–ª—å—Ç–∞—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è workflow

        Returns:
            str: –û—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–π –ø—É—Ç—å –∫ —Å–æ–∑–¥–∞–Ω–Ω–æ–º—É —Ñ–∞–π–ª—É
        """
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º markdown –∫–æ–Ω—Ç–µ–Ω—Ç
        markdown_content = self.generate_analysis_markdown(workflow_result, url)

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª
        file_path = self.save_analysis_file(url, markdown_content)

        logger.info(f"Workflow result saved to: {file_path}")
        return file_path


# Atomic functions –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö –º–æ–¥—É–ª—è—Ö
def create_output_file(url: str, workflow_result: dict[str, Any]) -> str:
    """
    JTBD: –ö–∞–∫ –∞—Ç–æ–º–∞—Ä–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è, —è —Ö–æ—á—É —Å–æ–∑–¥–∞—Ç—å output —Ñ–∞–π–ª,
    —á—Ç–æ–±—ã –æ–±–µ—Å–ø–µ—á–∏—Ç—å –ø—Ä–æ—Å—Ç–æ–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤.

    Returns:
        str: –û—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–π –ø—É—Ç—å –∫ —Å–æ–∑–¥–∞–Ω–Ω–æ–º—É —Ñ–∞–π–ª—É
    """
    manager = FileOutputManager()
    return manager.save_workflow_result(url, workflow_result)


def get_client_directory(url: str) -> Path:
    """
    JTBD: –ö–∞–∫ –∞—Ç–æ–º–∞—Ä–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è, —è —Ö–æ—á—É –ø–æ–ª—É—á–∏—Ç—å –ø–∞–ø–∫—É –∫–ª–∏–µ–Ω—Ç–∞,
    —á—Ç–æ–±—ã –æ–±–µ—Å–ø–µ—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ —Ñ–∞–π–ª–∞–º –∫–ª–∏–µ–Ω—Ç–∞.
    """
    manager = FileOutputManager()
    return manager.create_client_directory(url)


if __name__ == "__main__":
    # –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏
    test_url = "test.example.com"
    test_result = {
        "success": True,
        "analysis_depth": "full",
        "final_output": {
            "quality_score": 85,
            "offers_count": 12,
            "segments_analyzed": 3,
            "deep_research_quotes": 27,
            "shannon_insights": 8,
            "compliance_score": 92,
        },
        "stages": {
            "step_0_standard_loading": {
                "completed": True,
                "compliance_checklist": [
                    "Deep Segment Research: 25+ quotes across 9+ platforms",
                    "Activating Knowledge: Shannon-insights per segment",
                ],
            }
        },
    }

    file_path = create_output_file(test_url, test_result)
    print(f"Test file created: {file_path}")
