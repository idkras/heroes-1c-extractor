#!/usr/bin/env python3
"""
JTBD: –ö–∞–∫ –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ç–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç, —è —Ö–æ—á—É –∑–∞–ø—É—Å–∫–∞—Ç—å —Ç–µ—Å—Ç—ã –±–µ–∑ pytest,
—á—Ç–æ–±—ã –æ–±–æ–π—Ç–∏ —Å–∏—Å—Ç–µ–º–Ω—É—é –ø—Ä–æ–±–ª–µ–º—É —Å –º–æ–¥—É–ª–µ–º platform.
"""

import importlib.util
import sys
from pathlib import Path


def run_test_file(test_file_path):
    """
    JTBD: –ö–∞–∫ —Ç–µ—Å—Ç–æ–≤—ã–π —Ä–∞–Ω–Ω–µ—Ä, —è —Ö–æ—á—É –∑–∞–ø—É—Å–∫–∞—Ç—å –æ—Ç–¥–µ–ª—å–Ω—ã–µ —Ç–µ—Å—Ç–æ–≤—ã–µ —Ñ–∞–π–ª—ã,
    —á—Ç–æ–±—ã –æ–±–µ—Å–ø–µ—á–∏—Ç—å —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–µ–∑ pytest.
    """
    print(f"Running tests from: {test_file_path}")

    # –ó–∞–≥—Ä—É–∂–∞–µ–º –º–æ–¥—É–ª—å
    spec = importlib.util.spec_from_file_location("test_module", test_file_path)
    module = importlib.util.module_from_spec(spec)
    spec.loader.exec_module(module)

    # –ò—â–µ–º —Ñ—É–Ω–∫—Ü–∏–∏, –Ω–∞—á–∏–Ω–∞—é—â–∏–µ—Å—è —Å test_
    test_functions = []
    for name in dir(module):
        if name.startswith('test_') and callable(getattr(module, name)):
            test_functions.append(name)

    print(f"Found {len(test_functions)} test functions")

    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã
    passed = 0
    failed = 0

    for test_name in test_functions:
        test_func = getattr(module, test_name)
        try:
            print(f"  Running {test_name}...", end=" ")
            test_func()
            print("‚úÖ PASSED")
            passed += 1
        except Exception as e:
            print(f"‚ùå FAILED: {e}")
            failed += 1

    return passed, failed


def main():
    """
    JTBD: –ö–∞–∫ –æ—Å–Ω–æ–≤–Ω–æ–π —Ç–µ—Å—Ç–æ–≤—ã–π —Ä–∞–Ω–Ω–µ—Ä, —è —Ö–æ—á—É –∑–∞–ø—É—Å–∫–∞—Ç—å –≤—Å–µ —Ç–µ—Å—Ç—ã,
    —á—Ç–æ–±—ã –æ–±–µ—Å–ø–µ—á–∏—Ç—å –ø–æ–ª–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞.
    """
    print("üß™ Running Tests (Pytest Alternative)")
    print("=" * 50)

    # –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ —Ç–µ—Å—Ç–æ–≤—ã–µ —Ñ–∞–π–ª—ã
    test_files = []
    tests_dir = Path("tests")

    if tests_dir.exists():
        for test_file in tests_dir.rglob("*.py"):
            if test_file.name.startswith("test_") or test_file.name == "simple_test.py":
                test_files.append(test_file)

    if not test_files:
        print("‚ùå No test files found!")
        return 1

    print(f"Found {len(test_files)} test files")
    print()

    total_passed = 0
    total_failed = 0

    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã
    for test_file in test_files:
        passed, failed = run_test_file(test_file)
        total_passed += passed
        total_failed += failed
        print()

    # –†–µ–∑—É–ª—å—Ç–∞—Ç—ã
    print("=" * 50)
    print("üìä Test Results:")
    print(f"  ‚úÖ Passed: {total_passed}")
    print(f"  ‚ùå Failed: {total_failed}")
    print(f"  üìà Total: {total_passed + total_failed}")

    if total_failed == 0:
        print("üéâ All tests passed!")
        return 0
    else:
        print("‚ö†Ô∏è  Some tests failed!")
        return 1


if __name__ == "__main__":
    sys.exit(main())
