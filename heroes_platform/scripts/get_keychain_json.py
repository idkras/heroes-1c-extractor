#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è Service Account JSON –∏–∑ Keychain
JTBD: –ö–∞–∫ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫, —è —Ö–æ—á—É –∏–∑–≤–ª–µ—á—å JSON –∏–∑ Keychain
–¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ MCP —Å–µ—Ä–≤–µ—Ä–∞—Ö.
"""

import json
import subprocess
import tempfile


def get_json_from_keychain():
    """–ü–æ–ª—É—á–∏—Ç—å JSON –∏–∑ Keychain"""
    try:
        result = subprocess.run(
            [
                "security",
                "find-generic-password",
                "-s",
                "google-service-account-json",
                "-a",
                "rick@service",
                "-w",
            ],
            capture_output=True,
            text=True,
            check=True,
        )

        # –î–µ–∫–æ–¥–∏—Ä—É–µ–º hex –¥–∞–Ω–Ω—ã–µ
        hex_data = result.stdout.strip()
        json_string = subprocess.run(
            ["xxd", "-r", "-p"],
            input=hex_data,
            capture_output=True,
            text=True,
            check=True,
        ).stdout

        json_data = json.loads(json_string)
        return json_data

    except subprocess.CalledProcessError:
        print("‚ùå JSON –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ Keychain")
        return None
    except json.JSONDecodeError:
        print("‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON –∏–∑ Keychain")
        return None


def create_temp_json_file(json_data):
    """–°–æ–∑–¥–∞—Ç—å –≤—Ä–µ–º–µ–Ω–Ω—ã–π JSON —Ñ–∞–π–ª"""
    try:
        temp_file = tempfile.NamedTemporaryFile(
            mode="w", suffix=".json", prefix="service-account-", delete=False
        )

        json.dump(json_data, temp_file, indent=2)
        temp_file.close()

        print(f"‚úÖ –í—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª —Å–æ–∑–¥–∞–Ω: {temp_file.name}")
        return temp_file.name

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞: {e}")
        return None


def main():
    print("üîë –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ Service Account JSON –∏–∑ Keychain")
    print("=" * 50)

    json_data = get_json_from_keychain()
    if not json_data:
        return

    print("‚úÖ JSON –ø–æ–ª—É—á–µ–Ω –∏–∑ Keychain")
    print(f"üìß Client Email: {json_data.get('client_email', 'N/A')}")
    print(f"üîë Key ID: {json_data.get('private_key_id', 'N/A')}")

    temp_file = create_temp_json_file(json_data)
    if temp_file:
        print()
        print("üìã –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:")
        print(f"export GOOGLE_SERVICE_ACCOUNT_KEY='{temp_file}'")
        print("mcp-google-sheets-server")


if __name__ == "__main__":
    main()
