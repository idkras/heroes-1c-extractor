#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è Google OAuth 2.0 tokens
JTBD: –ö–∞–∫ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫, —è —Ö–æ—á—É –ø–æ–ª—É—á–∏—Ç—å Client Secret –∏ Refresh Token –¥–ª—è Google Sheets API,
—á—Ç–æ–±—ã MCP —Å–µ—Ä–≤–µ—Ä –º–æ–≥ —á–∏—Ç–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –∏–∑ Google Sheets.
"""

import requests
import webbrowser
import subprocess
import sys
from urllib.parse import urlencode, parse_qs, urlparse

# OAuth 2.0 configuration
CLIENT_ID = "11002942740-5rgf84foh6k98vpg3lb3ug8d9pv5gq1h.apps.googleusercontent.com"
REDIRECT_URI = "http://localhost:8080"
SCOPE = "https://www.googleapis.com/auth/spreadsheets.readonly"

def get_client_secret():
    """–ü–æ–ª—É—á–∏—Ç—å Client Secret –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    print("üîë –ü–æ–ª—É—á–µ–Ω–∏–µ Client Secret")
    print("1. –ó–∞–π–¥–∏—Ç–µ –≤ [Google Cloud Console](https://console.cloud.google.com/)")
    print("2. –ü—Ä–æ–µ–∫—Ç: rick-382109")
    print("3. APIs & Services ‚Üí Credentials")
    print("4. –ù–∞–π–¥–∏—Ç–µ 'Rick.ai BigQuery integration' –≤ OAuth 2.0 Client IDs")
    print("5. –ù–∞–∂–º–∏—Ç–µ 'Edit' (–∫–∞—Ä–∞–Ω–¥–∞—à)")
    print("6. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ 'Client secret'")
    print()
    
    client_secret = input("–í–≤–µ–¥–∏—Ç–µ Client Secret: ").strip()
    if not client_secret:
        print("‚ùå Client Secret –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º")
        return None
    
    return client_secret

def get_authorization_code():
    """–ü–æ–ª—É—á–∏—Ç—å authorization code —á–µ—Ä–µ–∑ –±—Ä–∞—É–∑–µ—Ä"""
    print("üåê –ü–æ–ª—É—á–µ–Ω–∏–µ authorization code")
    
    # Step 1: Get authorization URL
    auth_url = "https://accounts.google.com/o/oauth2/auth"
    params = {
        "client_id": CLIENT_ID,
        "redirect_uri": REDIRECT_URI,
        "scope": SCOPE,
        "response_type": "code",
        "access_type": "offline",
        "prompt": "consent"  # –í—Å–µ–≥–¥–∞ –∑–∞–ø—Ä–∞—à–∏–≤–∞—Ç—å consent –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è refresh_token
    }
    
    auth_url_with_params = f"{auth_url}?{urlencode(params)}"
    print(f"–û—Ç–∫—Ä—ã–≤–∞—é –±—Ä–∞—É–∑–µ—Ä –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏...")
    webbrowser.open(auth_url_with_params)
    
    print()
    print("–ü–æ—Å–ª–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –≤ –±—Ä–∞—É–∑–µ—Ä–µ:")
    print("1. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ URL –∏–∑ –∞–¥—Ä–µ—Å–Ω–æ–π —Å—Ç—Ä–æ–∫–∏")
    print("2. –ù–∞–π–¥–∏—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä 'code=' –≤ URL")
    print("3. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ—Å–ª–µ 'code='")
    print()
    
    auth_code = input("–í–≤–µ–¥–∏—Ç–µ authorization code: ").strip()
    if not auth_code:
        print("‚ùå Authorization code –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º")
        return None
    
    return auth_code

def exchange_code_for_tokens(client_secret, auth_code):
    """–û–±–º–µ–Ω—è—Ç—å authorization code –Ω–∞ tokens"""
    print("üîÑ –û–±–º–µ–Ω authorization code –Ω–∞ tokens")
    
    token_url = "https://oauth2.googleapis.com/token"
    token_data = {
        "client_id": CLIENT_ID,
        "client_secret": client_secret,
        "code": auth_code,
        "grant_type": "authorization_code",
        "redirect_uri": REDIRECT_URI
    }
    
    try:
        response = requests.post(token_url, data=token_data)
        response.raise_for_status()
        tokens = response.json()
        
        access_token = tokens.get('access_token')
        refresh_token = tokens.get('refresh_token')
        
        if not access_token:
            print("‚ùå Access token –Ω–µ –ø–æ–ª—É—á–µ–Ω")
            return None
        
        if not refresh_token:
            print("‚ö†Ô∏è Refresh token –Ω–µ –ø–æ–ª—É—á–µ–Ω. –í–æ–∑–º–æ–∂–Ω–æ, –Ω—É–∂–Ω–æ –ø–µ—Ä–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è.")
            return None
        
        print("‚úÖ Tokens –ø–æ–ª—É—á–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
        return tokens
        
    except requests.exceptions.RequestException as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ tokens: {e}")
        return None

def save_to_keychain(client_secret, refresh_token):
    """–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –≤ macOS Keychain"""
    print("üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ Keychain")
    
    try:
        # –°–æ—Ö—Ä–∞–Ω–∏—Ç—å Client Secret
        subprocess.run([
            "security", "add-generic-password",
            "-s", "google_oauth_client_secret",
            "-a", "rick@service",
            "-w", client_secret
        ], check=True, capture_output=True)
        print("‚úÖ Client Secret —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ Keychain")
        
        # –°–æ—Ö—Ä–∞–Ω–∏—Ç—å Refresh Token
        subprocess.run([
            "security", "add-generic-password",
            "-s", "google_refresh_token",
            "-a", "rick@service",
            "-w", refresh_token
        ], check=True, capture_output=True)
        print("‚úÖ Refresh Token —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ Keychain")
        
        return True
        
    except subprocess.CalledProcessError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –≤ Keychain: {e}")
        return False

def test_google_sheets_access(access_token):
    """–ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –¥–æ—Å—Ç—É–ø –∫ Google Sheets"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–æ—Å—Ç—É–ø–∞ –∫ Google Sheets")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–∞ Vipavenue —Ç–∞–±–ª–∏—Ü–µ
    spreadsheet_id = "1Wh1SF0_izRo4TJ8YkquJrMeDcoSi2AAc2cIG_s9LWVg"
    url = f"https://sheets.googleapis.com/v4/spreadsheets/{spreadsheet_id}"
    
    headers = {
        "Authorization": f"Bearer {access_token}",
        "Content-Type": "application/json"
    }
    
    try:
        response = requests.get(url, headers=headers)
        if response.status_code == 200:
            data = response.json()
            print("‚úÖ –î–æ—Å—Ç—É–ø –∫ Google Sheets —Ä–∞–±–æ—Ç–∞–µ—Ç!")
            print(f"üìä –ù–∞–∑–≤–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã: {data.get('properties', {}).get('title', 'Unknown')}")
            return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞: {response.status_code} - {response.text}")
            return False
            
    except requests.exceptions.RequestException as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
        return False

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ Google OAuth 2.0 Token Generator")
    print("=" * 50)
    
    # 1. –ü–æ–ª—É—á–∏—Ç—å Client Secret
    client_secret = get_client_secret()
    if not client_secret:
        return
    
    # 2. –ü–æ–ª—É—á–∏—Ç—å authorization code
    auth_code = get_authorization_code()
    if not auth_code:
        return
    
    # 3. –û–±–º–µ–Ω—è—Ç—å code –Ω–∞ tokens
    tokens = exchange_code_for_tokens(client_secret, auth_code)
    if not tokens:
        return
    
    access_token = tokens.get('access_token')
    refresh_token = tokens.get('refresh_token')
    
    print(f"üîë Access Token: {access_token[:20]}...")
    print(f"üîÑ Refresh Token: {refresh_token[:20]}...")
    
    # 4. –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤ Keychain
    if save_to_keychain(client_secret, refresh_token):
        print("‚úÖ –í—Å–µ –¥–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ Keychain")
    else:
        print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –≤ Keychain")
        return
    
    # 5. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –¥–æ—Å—Ç—É–ø
    if test_google_sheets_access(access_token):
        print("üéâ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
        print()
        print("–¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å MCP –∫–æ–º–∞–Ω–¥—ã:")
        print("- google_sheets_read_spreadsheet")
        print("- google_sheets_read_formulas")
    else:
        print("‚ö†Ô∏è –î–æ—Å—Ç—É–ø –∫ Google Sheets –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")

if __name__ == "__main__":
    main()
