#!/usr/bin/env python3
"""
Setup MCP Configuration Script

–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞–µ—Ç –ª–æ–∫–∞–ª—å–Ω—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é MCP –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞.
"""

import json
from pathlib import Path


def setup_mcp_config():
    """–°–æ–∑–¥–∞—Ç—å –ª–æ–∫–∞–ª—å–Ω—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é MCP"""
    heroes_platform_path = Path(__file__).parent.parent.absolute()
    project_root = heroes_platform_path.parent
    cursor_dir = project_root / ".cursor"

    # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é .cursor –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    cursor_dir.mkdir(exist_ok=True)

    # –ü—É—Ç—å –∫ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    mcp_config_path = cursor_dir / "mcp.json"

    # –ß–∏—Ç–∞–µ–º –ø—Ä–∏–º–µ—Ä –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    example_config_path = heroes_platform_path / ".cursor" / "mcp.json.example"

    if not example_config_path.exists():
        print(f"‚ùå Example config not found: {example_config_path}")
        return False

    try:
        with open(example_config_path) as f:
            config_content = f.read()

        # –ó–∞–º–µ–Ω—è–µ–º –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä—ã –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–µ –ø—É—Ç–∏
        config_content = config_content.replace(
            "{HEROES_PLATFORM_PATH}", str(heroes_platform_path)
        )

        # –ü–∞—Ä—Å–∏–º JSON
        config = json.loads(config_content)

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
        with open(mcp_config_path, "w") as f:
            json.dump(config, f, indent=2)

        print(f"‚úÖ MCP configuration created: {mcp_config_path}")
        print(f"‚úÖ Heroes Platform path: {heroes_platform_path}")

        return True

    except Exception as e:
        print(f"‚ùå Error creating MCP config: {e}")
        return False


def main():
    print("üîß Setting up MCP Configuration...")
    print("=" * 50)

    success = setup_mcp_config()

    if success:
        print("\nüéâ MCP configuration setup completed!")
        print("\nüìã Next steps:")
        print("1. Restart Cursor")
        print("2. Check MCP Tools settings")
        print("3. Test MCP commands")
    else:
        print("\n‚ùå Failed to setup MCP configuration")


if __name__ == "__main__":
    main()
