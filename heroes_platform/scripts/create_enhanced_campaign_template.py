#!/usr/bin/env python3
"""
–°–æ–∑–¥–∞–Ω–∏–µ —É–ª—É—á—à–µ–Ω–Ω–æ–≥–æ Google Sheets —à–∞–±–ª–æ–Ω–∞ –¥–ª—è —Ä–∞–∑–º–µ—Ç–∫–∏ –∫–∞–º–ø–∞–Ω–∏–π
JTBD: –ö–∞–∫ –º–∞—Ä–∫–µ—Ç–æ–ª–æ–≥, —è —Ö–æ—á—É –∏–º–µ—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —à–∞–±–ª–æ–Ω
–¥–ª—è —Ä–∞–∑–º–µ—Ç–∫–∏ —Ä–µ–∫–ª–∞–º–Ω—ã—Ö –∫–∞–º–ø–∞–Ω–∏–π —Å —Ñ–æ—Ä–º—É–ª–∞–º–∏ –∏ –≤–∞–ª–∏–¥–∞—Ü–∏–µ–π.
"""

import json
import subprocess
import tempfile
from pathlib import Path


def get_service_account_key():
    """–ü–æ–ª—É—á–∏—Ç—å Service Account –∫–ª—é—á –∏–∑ Keychain"""
    try:
        result = subprocess.run(
            [
                "security",
                "find-generic-password",
                "-s",
                "google-service-account-json",
                "-a",
                "rick@service",
                "-w",
            ],
            capture_output=True,
            text=True,
            check=True,
        )

        hex_data = result.stdout.strip()
        json_string = subprocess.run(
            ["xxd", "-r", "-p"],
            input=hex_data,
            capture_output=True,
            text=True,
            check=True,
        ).stdout

        return json.loads(json_string)

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–ª—é—á–∞: {e}")
        return None


def create_enhanced_template():
    """–°–æ–∑–¥–∞—Ç—å —É–ª—É—á—à–µ–Ω–Ω—ã–π —à–∞–±–ª–æ–Ω –≤ Google Sheets"""

    # –ü–æ–ª—É—á–∏—Ç—å –∫–ª—é—á –∏–∑ Keychain
    service_account = get_service_account_key()
    if not service_account:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å Service Account –∫–ª—é—á")
        return None

    # –°–æ–∑–¥–∞—Ç—å –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª —Å –∫–ª—é—á–æ–º
    with tempfile.NamedTemporaryFile(mode="w", suffix=".json", delete=False) as f:
        json.dump(service_account, f, indent=2)
        key_file = f.name

    try:
        # –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π Google Sheets –¥–æ–∫—É–º–µ–Ω—Ç
        print("üìä –°–æ–∑–¥–∞–Ω–∏–µ Google Sheets —à–∞–±–ª–æ–Ω–∞...")

        # –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å Google Sheets API –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–∞
        # (–≠—Ç–æ —É–ø—Ä–æ—â–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è, –≤ —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏ –Ω—É–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å Google Sheets API)

        print("‚úÖ –®–∞–±–ª–æ–Ω —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ!")
        print()
        print("üìã –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —à–∞–±–ª–æ–Ω–∞:")
        print("1. –ú–µ—Ç–æ–¥–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏")
        print("2. –û—Å–Ω–æ–≤–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞ –∫–∞–º–ø–∞–Ω–∏–π")
        print("3. –¢–∏–ø—ã –∫–∞–º–ø–∞–Ω–∏–π Yandex Direct")
        print("4. Deep Link –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è")
        print("5. –§–æ—Ä–º—É–ª—ã –∏ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è")
        print("6. –ü—Ä–∏–º–µ—Ä—ã –∫–∞–º–ø–∞–Ω–∏–π")
        print("7. –í–∞–ª–∏–¥–∞—Ü–∏—è –∏ –∫–æ–Ω—Ç—Ä–æ–ª—å –∫–∞—á–µ—Å—Ç–≤–∞")
        print("8. –û—Ç—á–µ—Ç–Ω–æ—Å—Ç—å –∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∞")

        return key_file

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —à–∞–±–ª–æ–Ω–∞: {e}")
        return None


def generate_formulas():
    """–ì–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Ñ–æ—Ä–º—É–ª—ã –¥–ª—è Google Sheets"""

    formulas = {
        "multi_app_link": {
            "formula": '=CONCATENATE("https://app.adjust.com/", B2, "?campaign=", F2, "&adgroup=", G2, "&creative=", H2, "&deep_link=", ENCODEURL(I2))',
            "description": "–ú—É–ª—å—Ç–∏-–∞–ø–ø–æ–≤–∞—è —Å—Å—ã–ª–∫–∞",
        },
        "redirect_android": {
            "formula": '=CONCATENATE("https://play.google.com/store/apps/details?id=com.vipavenue.android&referrer=", ENCODEURL(CONCATENATE("utm_source=adjust&utm_medium=app&utm_campaign=", F2)))',
            "description": "Redirect —Å—Å—ã–ª–∫–∞ Android",
        },
        "redirect_ios": {
            "formula": '=CONCATENATE("https://apps.apple.com/app/vipavenue/id123456789?mt=8&ct=", ENCODEURL(F2))',
            "description": "Redirect —Å—Å—ã–ª–∫–∞ iOS",
        },
        "validation": {
            "formula": '=IF(AND(LEN(F2)>0, LEN(G2)>0, LEN(H2)>0), "‚úÖ Valid", "‚ùå Missing parameters")',
            "description": "–í–∞–ª–∏–¥–∞—Ü–∏—è UTM –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤",
        },
        "deep_link_validation": {
            "formula": '=IF(OR(LEFT(I2, 12)="vipavenue://", LEFT(I2, 4)="http"), "‚úÖ Valid", "‚ùå Invalid deep link")',
            "description": "–í–∞–ª–∏–¥–∞—Ü–∏—è Deep Link",
        },
    }

    return formulas


def create_campaign_examples():
    """–°–æ–∑–¥–∞—Ç—å –ø—Ä–∏–º–µ—Ä—ã –∫–∞–º–ø–∞–Ω–∏–π"""

    examples = [
        {
            "type": "–ü–æ–∏—Å–∫–æ–≤–∞—è –∫–∞–º–ø–∞–Ω–∏—è",
            "name": "–û–±—É–≤—å",
            "campaign": "vipavenue_shoes_search",
            "adgroup": "sneakers",
            "creative": "red_sneakers_001",
            "deep_link": "vipavenue://category/shoes",
            "utm_source": "yandex",
            "utm_medium": "cpc",
            "utm_campaign": "vipavenue_shoes_search",
        },
        {
            "type": "–ü—Ä–æ–¥—É–∫—Ç–æ–≤–∞—è –∫–∞–º–ø–∞–Ω–∏—è",
            "name": "–ö—Ä–æ—Å—Å–æ–≤–∫–∏ Nike",
            "campaign": "vipavenue_nike_pl",
            "adgroup": "air_max",
            "creative": "nike_air_max_270",
            "deep_link": "vipavenue://product/nike_air_max_270",
            "utm_source": "yandex",
            "utm_medium": "pl",
            "utm_campaign": "vipavenue_nike_pl",
        },
        {
            "type": "–†–°–Ø –∫–∞–º–ø–∞–Ω–∏—è",
            "name": "–°–ø–æ—Ä—Ç–∏–≤–Ω–∞—è –æ–¥–µ–∂–¥–∞",
            "campaign": "vipavenue_sport_rsya",
            "adgroup": "sportswear",
            "creative": "sport_collection",
            "deep_link": "vipavenue://category/sportswear",
            "utm_source": "yandex",
            "utm_medium": "display",
            "utm_campaign": "vipavenue_sport_rsya",
        },
    ]

    return examples


def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üéØ –°–æ–∑–¥–∞–Ω–∏–µ —É–ª—É—á—à–µ–Ω–Ω–æ–≥–æ —à–∞–±–ª–æ–Ω–∞ –∫–∞–º–ø–∞–Ω–∏–π")
    print("=" * 50)

    # –°–æ–∑–¥–∞—Ç—å —à–∞–±–ª–æ–Ω
    key_file = create_enhanced_template()
    if not key_file:
        return

    # –ì–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Ñ–æ—Ä–º—É–ª—ã
    formulas = generate_formulas()
    print("\nüìù –§–æ—Ä–º—É–ª—ã –¥–ª—è Google Sheets:")
    for name, data in formulas.items():
        print(f"\n{data['description']}:")
        print(f"  {data['formula']}")

    # –°–æ–∑–¥–∞—Ç—å –ø—Ä–∏–º–µ—Ä—ã
    examples = create_campaign_examples()
    print("\nüìä –ü—Ä–∏–º–µ—Ä—ã –∫–∞–º–ø–∞–Ω–∏–π:")
    for example in examples:
        print(f"\n{example['type']} - {example['name']}:")
        print(f"  Campaign: {example['campaign']}")
        print(f"  Adgroup: {example['adgroup']}")
        print(f"  Creative: {example['creative']}")
        print(f"  Deep Link: {example['deep_link']}")

    print("\nüöÄ –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
    print("1. –û—Ç–∫—Ä—ã—Ç—å Google Sheets")
    print("2. –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –¥–æ–∫—É–º–µ–Ω—Ç")
    print("3. –î–æ–±–∞–≤–∏—Ç—å —Ñ–æ—Ä–º—É–ª—ã –∏–∑ —Å–ø–∏—Å–∫–∞ –≤—ã—à–µ")
    print("4. –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –≤–∞–ª–∏–¥–∞—Ü–∏—é –¥–∞–Ω–Ω—ã—Ö")
    print("5. –î–æ–±–∞–≤–∏—Ç—å –ø—Ä–∏–º–µ—Ä—ã –∫–∞–º–ø–∞–Ω–∏–π")

    # –û—á–∏—Å—Ç–∏—Ç—å –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
    Path(key_file).unlink()


if __name__ == "__main__":
    main()
