#!/usr/bin/env python3

import json
from datetime import datetime

from onec_dtools.database_reader import DatabaseReader


def safe_get_blob_content(value):
    """
    –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ BLOB –ø–æ–ª—è
    """
    try:
        if hasattr(value, "value"):
            content = value.value
            if content and len(str(content)) > 0:
                return str(content)
        elif hasattr(value, "__iter__"):
            try:
                iterator = iter(value)
                content = next(iterator)
                if content and len(content) > 0:
                    return str(content)
            except StopIteration:
                pass
        elif hasattr(value, "__bytes__"):
            try:
                content = bytes(value)
                if content and len(content) > 0:
                    return str(content)
            except:
                pass
    except Exception as e:
        return f"–û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è BLOB: {e}"

    return None


def search_bratislavskaya_documents():
    """
    –ü–æ–∏—Å–∫ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –ø–æ –ë—Ä–∞—Ç–∏—Å–ª–∞–≤—Å–∫–æ–π
    """
    print("üîç –ü–æ–∏—Å–∫ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –ø–æ –ë—Ä–∞—Ç–∏—Å–ª–∞–≤—Å–∫–æ–π")
    print("üéØ –¶–ï–õ–¨: –ù–∞–π—Ç–∏ –≤—Å–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –ë—Ä–∞—Ç–∏—Å–ª–∞–≤—Å–∫–æ–π")
    print("=" * 60)

    try:
        with open("data/raw/1Cv8.1CD", "rb") as f:
            db = DatabaseReader(f)

            print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –æ—Ç–∫—Ä—ã—Ç–∞ —É—Å–ø–µ—à–Ω–æ!")
            print(f"üìä –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–∞–±–ª–∏—Ü: {len(db.tables)}")

            results = {
                "bratislavskaya_documents": [],
                "metadata": {
                    "extraction_date": datetime.now().isoformat(),
                    "total_tables": len(db.tables),
                    "source_file": "data/raw/1Cv8.1CD",
                },
            }

            # –ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞
            search_keywords = [
                "–±—Ä–∞—Ç–∏—Å–ª–∞–≤—Å–∫–∞—è",
                "–±—Ä–∞—Ç–∏—Å–ª–∞–≤—Å–∫–∞—è",
                "–±—Ä–∞—Ç–∏—Å–ª–∞–≤—Å–∫–∞—è",
                "–±—Ä–∞—Ç–∏—Å–ª–∞–≤—Å–∫–∞—è",
                "–±—Ä–∞—Ç–∏—Å–ª–∞–≤—Å–∫–∞—è",
            ]

            print("\nüîç –ü–æ–∏—Å–∫ –ø–æ –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º")
            print("-" * 40)

            # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
            document_tables = [
                "_DOCUMENT163",  # –ê–∫—Ç—ã –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö —Ä–∞–±–æ—Ç
                "_DOCUMENT184",  # –°—á–µ—Ç–∞-—Ñ–∞–∫—Ç—É—Ä—ã
                "_DOCUMENT154",  # –ù–∞–∫–ª–∞–¥–Ω—ã–µ
                "_DOCUMENT137",  # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã
                "_DOCUMENT12259",  # –°–ª—É–∂–µ–±–Ω—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã
            ]

            for table_name in document_tables:
                if table_name in db.tables:
                    print(f"\nüìä –ê–Ω–∞–ª–∏–∑ —Ç–∞–±–ª–∏—Ü—ã: {table_name}")
                    table = db.tables[table_name]
                    print(f"   üìà –í—Å–µ–≥–æ –∑–∞–ø–∏—Å–µ–π: {len(table):,}")

                    # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–µ—Ä–≤—ã–µ 100 –∑–∞–ø–∏—Å–µ–π
                    found_documents = []
                    for i in range(min(100, len(table))):
                        try:
                            row = table[i]
                            if not row.is_empty:
                                # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∑–∞–ø–∏—Å–∏
                                row_data = row.as_dict()

                                # –ò—â–µ–º –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –≤ –ø–æ–ª—è—Ö
                                found_keywords = []
                                for field_name, value in row_data.items():
                                    if value is not None:
                                        value_str = str(value).lower()
                                        for keyword in search_keywords:
                                            if keyword.lower() in value_str:
                                                found_keywords.append(keyword)

                                # –ò—â–µ–º –≤ BLOB –ø–æ–ª—è—Ö
                                blob_content = ""
                                for field_name, value in row_data.items():
                                    if hasattr(value, "__class__") and "Blob" in str(
                                        value.__class__,
                                    ):
                                        content = safe_get_blob_content(value)
                                        if content:
                                            blob_content += content.lower()

                                for keyword in search_keywords:
                                    if keyword.lower() in blob_content:
                                        found_keywords.append(f"{keyword} (–≤ BLOB)")

                                if found_keywords:
                                    document = {
                                        "table_name": table_name,
                                        "row_index": i,
                                        "fields": row_data,
                                        "found_keywords": found_keywords,
                                        "blob_content": blob_content[:500]
                                        if blob_content
                                        else "",
                                    }
                                    found_documents.append(document)
                                    print(
                                        f"   ‚úÖ –ù–∞–π–¥–µ–Ω –¥–æ–∫—É–º–µ–Ω—Ç {i}: {found_keywords}",
                                    )

                        except Exception as e:
                            print(f"   ‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ –∑–∞–ø–∏—Å–∏ {i}: {e}")
                            continue

                    if found_documents:
                        results["bratislavskaya_documents"].extend(found_documents)
                        print(f"   üìã –ù–∞–π–¥–µ–Ω–æ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤: {len(found_documents)}")

            # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
            with open(
                "data/results/bratislavskaya_search.json",
                "w",
                encoding="utf-8",
            ) as f:
                json.dump(results, f, ensure_ascii=False, indent=2)

            print(
                "\nüìÑ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤: data/results/bratislavskaya_search.json",
            )
            print(
                f"üìä –í—Å–µ–≥–æ –Ω–∞–π–¥–µ–Ω–æ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤: {len(results['bratislavskaya_documents'])}",
            )

            return results

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback

        print("üîç –î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:")
        traceback.print_exc()
        return None


if __name__ == "__main__":
    search_bratislavskaya_documents()
