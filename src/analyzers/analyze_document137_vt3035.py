#!/usr/bin/env python3
# -*- coding: utf-8 -*-

from onec_dtools.database_reader import DatabaseReader
import json
import sys
import os
from datetime import datetime

def safe_get_blob_content(value):
    """
    –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ BLOB –ø–æ–ª—è
    """
    try:
        if hasattr(value, 'value'):
            content = value.value
            if content and len(str(content)) > 0:
                return str(content)
        elif hasattr(value, '__iter__'):
            try:
                iterator = iter(value)
                content = next(iterator)
                if content and len(content) > 0:
                    return str(content)
            except StopIteration:
                pass
        elif hasattr(value, '__bytes__'):
            try:
                content = bytes(value)
                if content and len(content) > 0:
                    return str(content)
            except:
                pass
    except Exception as e:
        return f"–û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è BLOB: {e}"
    
    return None

def analyze_document137_vt3035():
    """
    –î–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ —Ç–∞–±–ª–∏—Ü—ã _DOCUMENT137_VT3035 (–û—Ç—á–µ—Ç –æ —Ä–æ–∑–Ω–∏—á–Ω—ã—Ö –ø—Ä–æ–¥–∞–∂–∞—Ö)
    """
    print("üîç –î–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ —Ç–∞–±–ª–∏—Ü—ã _DOCUMENT137_VT3035")
    print("üéØ –¶–ï–õ–¨: –û—Ç—á–µ—Ç –æ —Ä–æ–∑–Ω–∏—á–Ω—ã—Ö –ø—Ä–æ–¥–∞–∂–∞—Ö - –∏–∑–≤–ª–µ—á—å –ø–µ—Ä–≤–∏—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ –∫–∞—á–µ—Å—Ç–≤–µ —Ç–æ–≤–∞—Ä–æ–≤")
    print("=" * 60)
    
    try:
        with open('raw/1Cv8.1CD', 'rb') as f:
            db = DatabaseReader(f)
            
            print(f"‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –æ—Ç–∫—Ä—ã—Ç–∞ —É—Å–ø–µ—à–Ω–æ!")
            
            results = {
                'document137_vt3035': {},
                'metadata': {
                    'extraction_date': datetime.now().isoformat(),
                    'source_file': 'raw/1Cv8.1CD',
                    'table_name': '_DOCUMENT137_VT3035',
                    'document_type': '–û—Ç—á–µ—Ç –æ —Ä–æ–∑–Ω–∏—á–Ω—ã—Ö –ø—Ä–æ–¥–∞–∂–∞—Ö'
                }
            }
            
            print("\nüîç –≠—Ç–∞–ø 1: –ê–Ω–∞–ª–∏–∑ —Ç–∞–±–ª–∏—Ü—ã _DOCUMENT137_VT3035")
            print("-" * 60)
            
            # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ç–∞–±–ª–∏—Ü—É _DOCUMENT137_VT3035
            table_name = '_DOCUMENT137_VT3035'
            if table_name in db.tables:
                table = db.tables[table_name]
                record_count = len(table)
                print(f"üìä –ù–∞–π–¥–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π: {record_count:,}")
                
                # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–µ—Ä–≤—ã–µ 30 –∑–∞–ø–∏—Å–µ–π –¥–ª—è –ø–æ–Ω–∏–º–∞–Ω–∏—è —Å—Ç—Ä—É–∫—Ç—É—Ä—ã
                sample_records = []
                for i in range(min(30, len(table))):
                    try:
                        row = table[i]
                        if not row.is_empty:
                            # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∑–∞–ø–∏—Å–∏
                            row_data = row.as_dict()
                            sample_records.append(row_data)
                            
                            print(f"    üìÑ –ó–∞–ø–∏—Å—å {i+1}:")
                            
                            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –ø–æ–ª—è
                            for field_name, field_value in row_data.items():
                                if not str(field_value).startswith('<onec_dtools.database_reader.Blob'):
                                    print(f"        üìã {field_name}: {field_value}")
                            
                            # –ò—â–µ–º BLOB –ø–æ–ª—è
                            blob_fields = []
                            for field_name, field_value in row_data.items():
                                if str(field_value).startswith('<onec_dtools.database_reader.Blob'):
                                    blob_fields.append(field_name)
                            
                            if blob_fields:
                                print(f"        üîç BLOB –ø–æ–ª—è: {blob_fields}")
                                
                                # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ BLOB –ø–æ–ª–µ–π
                                for blob_field in blob_fields[:3]:  # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–µ—Ä–≤—ã–µ 3 BLOB –ø–æ–ª—è
                                    try:
                                        blob_value = row_data[blob_field]
                                        content = safe_get_blob_content(blob_value)
                                        if content:
                                            print(f"        üìã {blob_field}: {content[:200]}...")
                                            
                                            # –ò—â–µ–º –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –∫–∞—á–µ—Å—Ç–≤–∞
                                            quality_keywords = [
                                                "–∫–∞—á–µ—Å—Ç–≤–æ", "–±—Ä–∞–∫", "–¥–µ—Ñ–µ–∫—Ç", "–Ω–µ–∫–æ–Ω–¥–∏—Ü–∏—è", "—Å—Ç–∞–Ω–¥–∞—Ä—Ç",
                                                "–ø—Ä–µ–º–∏—É–º", "—ç–ª–∏—Ç", "—Ü–≤–µ—Ç", "—Ü–≤–µ—Ç—ã", "—Ä–æ–∑—ã", "—Ç—é–ª—å–ø–∞–Ω—ã",
                                                "—Ñ–ª–æ—Ä–∏—Å—Ç–∏–∫–∞", "–≥–æ—Ä—à–µ—á–Ω—ã–µ", "–ø–æ—Å—Ç–∞–≤–∫–∞", "–ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç"
                                            ]
                                            
                                            for keyword in quality_keywords:
                                                if keyword.lower() in content.lower():
                                                    print(f"            üéØ –ù–∞–π–¥–µ–Ω–æ –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ: '{keyword}'")
                                        
                                    except Exception as e:
                                        print(f"        ‚ö†Ô∏è –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è BLOB {blob_field}: {e}")
                            
                            print()  # –ü—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞ –¥–ª—è —Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è
                    
                    except Exception as e:
                        print(f"    ‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ –∑–∞–ø–∏—Å–∏ {i}: {e}")
                        continue
                
                # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–Ω–∞–ª–∏–∑–∞
                table_analysis = {
                    'table_name': table_name,
                    'record_count': record_count,
                    'sample_records': sample_records,
                    'fields': list(sample_records[0].keys()) if sample_records else []
                }
                results['document137_vt3035'] = table_analysis
                
                print(f"‚úÖ –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ {len(sample_records)} –∑–∞–ø–∏—Å–µ–π")
                
                # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø–æ–ª–µ–π
                if sample_records:
                    print(f"\nüìã –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø–æ–ª–µ–π:")
                    fields = list(sample_records[0].keys())
                    for i, field_name in enumerate(fields):
                        print(f"    {i+1:2d}. {field_name}")
                
            else:
                print(f"‚ùå –¢–∞–±–ª–∏—Ü–∞ {table_name} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")
                print("üîç –ò—â–µ–º –ø–æ—Ö–æ–∂–∏–µ —Ç–∞–±–ª–∏—Ü—ã...")
                
                # –ò—â–µ–º –ø–æ—Ö–æ–∂–∏–µ —Ç–∞–±–ª–∏—Ü—ã
                similar_tables = []
                for table_name in db.tables.keys():
                    if '_DOCUMENT137' in table_name and '_VT' in table_name:
                        table = db.tables[table_name]
                        if len(table) > 0:
                            similar_tables.append((table_name, len(table)))
                
                if similar_tables:
                    print(f"üìä –ù–∞–π–¥–µ–Ω–æ –ø–æ—Ö–æ–∂–∏—Ö —Ç–∞–±–ª–∏—Ü: {len(similar_tables)}")
                    for table_name, record_count in similar_tables:
                        print(f"  üìã {table_name} ({record_count:,} –∑–∞–ø–∏—Å–µ–π)")
                        
                        # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–µ—Ä–≤—É—é –ø–æ—Ö–æ–∂—É—é —Ç–∞–±–ª–∏—Ü—É
                        if similar_tables:
                            first_table_name, first_record_count = similar_tables[0]
                            print(f"\nüîç –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–µ—Ä–≤—É—é —Ç–∞–±–ª–∏—Ü—É: {first_table_name}")
                            
                            table = db.tables[first_table_name]
                            if len(table) > 0:
                                try:
                                    # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–µ—Ä–≤—ã–µ 5 –∑–∞–ø–∏—Å–µ–π
                                    sample_records = []
                                    for i in range(min(5, len(table))):
                                        sample_record = table[i]
                                        if not sample_record.is_empty:
                                            record_data = sample_record.as_dict()
                                            sample_records.append(record_data)
                                            
                                            print(f"    üìÑ –ó–∞–ø–∏—Å—å {i+1}:")
                                            for field_name, field_value in record_data.items():
                                                if not str(field_value).startswith('<onec_dtools.database_reader.Blob'):
                                                    print(f"        üìã {field_name}: {field_value}")
                                            
                                            print()  # –ü—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞
                                    
                                    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–Ω–∞–ª–∏–∑–∞ –ø–æ—Ö–æ–∂–µ–π —Ç–∞–±–ª–∏—Ü—ã
                                    similar_table_analysis = {
                                        'table_name': first_table_name,
                                        'record_count': first_record_count,
                                        'sample_records': sample_records,
                                        'fields': list(sample_records[0].keys()) if sample_records else []
                                    }
                                    results['similar_table'] = similar_table_analysis
                                    
                                except Exception as e:
                                    print(f"    ‚ö†Ô∏è –û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ –ø–æ—Ö–æ–∂–µ–π —Ç–∞–±–ª–∏—Ü—ã: {e}")
                else:
                    print("üìä –ü–æ—Ö–æ–∂–∏–µ —Ç–∞–±–ª–∏—Ü—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
            
            print("\nüîç –≠—Ç–∞–ø 2: –ü–æ–∏—Å–∫ —Å–≤—è–∑–∞–Ω–Ω—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤")
            print("-" * 60)
            
            # –ò—â–µ–º —Å–≤—è–∑–∞–Ω–Ω—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã
            related_documents = []
            for table_name in db.tables.keys():
                if '_DOCUMENT137' in table_name and '_VT' not in table_name:
                    table = db.tables[table_name]
                    if len(table) > 0:
                        related_documents.append((table_name, len(table)))
            
            if related_documents:
                print(f"üìä –ù–∞–π–¥–µ–Ω–æ —Å–≤—è–∑–∞–Ω–Ω—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤: {len(related_documents)}")
                for table_name, record_count in related_documents[:5]:
                    print(f"  üìã {table_name} ({record_count:,} –∑–∞–ø–∏—Å–µ–π)")
                    
                    # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–µ—Ä–≤—ã–π —Å–≤—è–∑–∞–Ω–Ω—ã–π –¥–æ–∫—É–º–µ–Ω—Ç
                    if related_documents:
                        first_doc_name, first_doc_count = related_documents[0]
                        print(f"\nüîç –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–≤—è–∑–∞–Ω–Ω—ã–π –¥–æ–∫—É–º–µ–Ω—Ç: {first_doc_name}")
                        
                        table = db.tables[first_doc_name]
                        if len(table) > 0:
                            try:
                                # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–µ—Ä–≤—ã–µ 3 –∑–∞–ø–∏—Å–∏
                                sample_records = []
                                for i in range(min(3, len(table))):
                                    sample_record = table[i]
                                    if not sample_record.is_empty:
                                        record_data = sample_record.as_dict()
                                        sample_records.append(record_data)
                                        
                                        print(f"    üìÑ –ó–∞–ø–∏—Å—å {i+1}:")
                                        for field_name, field_value in record_data.items():
                                            if not str(field_value).startswith('<onec_dtools.database_reader.Blob'):
                                                print(f"        üìã {field_name}: {field_value}")
                                        
                                        print()  # –ü—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞
                                
                                # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–Ω–∞–ª–∏–∑–∞ —Å–≤—è–∑–∞–Ω–Ω–æ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞
                                related_doc_analysis = {
                                    'table_name': first_doc_name,
                                    'record_count': first_doc_count,
                                    'sample_records': sample_records,
                                    'fields': list(sample_records[0].keys()) if sample_records else []
                                }
                                results['related_document'] = related_doc_analysis
                                
                            except Exception as e:
                                print(f"    ‚ö†Ô∏è –û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ —Å–≤—è–∑–∞–Ω–Ω–æ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞: {e}")
            else:
                print("üìä –°–≤—è–∑–∞–Ω–Ω—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
            with open('document137_vt3035_analysis.json', 'w', encoding='utf-8') as f:
                json.dump(results, f, ensure_ascii=False, indent=2, default=str)
            
            print(f"\n‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ document137_vt3035_analysis.json")
            
            if 'document137_vt3035' in results and results['document137_vt3035']:
                print(f"üìä –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞ —Ç–∞–±–ª–∏—Ü–∞: {results['document137_vt3035']['table_name']}")
                print(f"üìä –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π: {results['document137_vt3035']['record_count']:,}")
                print(f"üìä –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª–µ–π: {len(results['document137_vt3035']['fields'])}")
            
            return results
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return None

if __name__ == "__main__":
    analyze_document137_vt3035()
