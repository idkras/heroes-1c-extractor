#!/usr/bin/env python3
# -*- coding: utf-8 -*-

from onec_dtools.database_reader import DatabaseReader
import json
import sys
import os
from datetime import datetime

def safe_get_blob_content(value):
    """
    –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ BLOB –ø–æ–ª—è
    """
    try:
        if hasattr(value, 'value'):
            content = value.value
            if content and len(str(content)) > 0:
                return str(content)
        elif hasattr(value, '__iter__'):
            try:
                iterator = iter(value)
                content = next(iterator)
                if content and len(content) > 0:
                    return str(content)
            except StopIteration:
                pass
        elif hasattr(value, '__bytes__'):
            try:
                content = bytes(value)
                if content and len(content) > 0:
                    return str(content)
            except:
                pass
    except Exception as e:
        return f"–û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è BLOB: {e}"
    
    return None

def analyze_document138_detailed():
    """
    –î–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –Ω–∞–π–¥–µ–Ω–Ω–æ–π –∫–ª—é—á–µ–≤–æ–π —Ç–∞–±–ª–∏—Ü—ã _DOCUMENT138
    –¶–ï–õ–¨: –ò–∑–≤–ª–µ—á—å –≤—Å–µ –∑–∞–ø–∏—Å–∏ —Å –∫–ª—é—á–µ–≤—ã–º–∏ —Å–ª–æ–≤–∞–º–∏ –∏ –ø–æ–Ω—è—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä—É
    """
    print("üîç –î–ï–¢–ê–õ–¨–ù–´–ô –ê–ù–ê–õ–ò–ó _DOCUMENT138")
    print("üéØ –¶–ï–õ–¨: –ò–∑–≤–ª–µ—á—å –≤—Å–µ –∑–∞–ø–∏—Å–∏ —Å –∫–ª—é—á–µ–≤—ã–º–∏ —Å–ª–æ–≤–∞–º–∏")
    print("=" * 60)
    
    try:
        with open('raw/1Cv8.1CD', 'rb') as f:
            db = DatabaseReader(f)
            
            print(f"‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –æ—Ç–∫—Ä—ã—Ç–∞ —É—Å–ø–µ—à–Ω–æ!")
            
            results = {
                'document138_analysis': {},
                'keyword_records': {},
                'metadata': {
                    'extraction_date': datetime.now().isoformat(),
                    'source_file': 'raw/1Cv8.1CD',
                    'table_name': '_DOCUMENT138'
                }
            }
            
            # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ç–∞–±–ª–∏—Ü—É _DOCUMENT138
            table_name = '_DOCUMENT138'
            if table_name in db.tables:
                table = db.tables[table_name]
                record_count = len(table)
                print(f"üìä –ù–∞–π–¥–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π: {record_count:,}")
                
                # –ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞
                keywords = {
                    '–ø–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ': ['–ø–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ', '–ø–µ—Ä–µ–º–µ—â'],
                    '–∫–∞—á–µ—Å—Ç–≤–æ': ['–Ω–µ–∫–æ–Ω–¥–∏—Ü–∏—è', '–±—Ä–∞–∫', '–¥–µ—Ñ–µ–∫—Ç', '–∫–∞—á–µ—Å—Ç–≤–æ'],
                    '–ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏–µ': ['–ø—Ä–∏—Ö–æ–¥', '–ø–æ—Å—Ç—É–ø–ª', '–ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏–µ'],
                    '–≤–æ–∑–≤—Ä–∞—Ç': ['–≤–æ–∑–≤—Ä–∞—Ç', '—Ä–µ–∫–ª–∞–º–∞—Ü–∏—è'],
                    '—Ñ–ª–æ—Ä–∏—Å—Ç–∏–∫–∞': ['—Ñ–ª–æ—Ä–∏—Å—Ç–∏—á–µ—Å–∫–∏–π', '—Ñ–ª–æ—Ä', '—Ü–≤–µ—Ç', '—Ü–≤–µ—Ç—ã'],
                    '—Å–∫–ª–∞–¥': ['—Å–∫–ª–∞–¥', '—Å–∫–ª–∞–¥—ã', '–æ—Ç–≥—Ä—É–∑–∫–∏', '–ø–æ–ª—É—á–∞—Ç–µ–ª—å']
                }
                
                # –°—á–µ—Ç—á–∏–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∫–ª—é—á–µ–≤–æ–≥–æ —Å–ª–æ–≤–∞
                keyword_counts = {keyword: 0 for keyword in keywords.keys()}
                
                # –°–æ–±–∏—Ä–∞–µ–º –∑–∞–ø–∏—Å–∏ —Å –∫–ª—é—á–µ–≤—ã–º–∏ —Å–ª–æ–≤–∞–º–∏
                keyword_records = {keyword: [] for keyword in keywords.keys()}
                
                # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–µ—Ä–≤—ã–µ 1000 –∑–∞–ø–∏—Å–µ–π –¥–ª—è –ø–æ–∏—Å–∫–∞ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤
                print(f"\nüîç –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–µ—Ä–≤—ã–µ 1000 –∑–∞–ø–∏—Å–µ–π –¥–ª—è –ø–æ–∏—Å–∫–∞ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤...")
                
                for i in range(min(1000, len(table))):
                    try:
                        row = table[i]
                        if not row.is_empty:
                            row_data = row.as_dict()
                            
                            # –ò—â–µ–º –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –≤ BLOB –ø–æ–ª—è—Ö
                            found_keywords = set()
                            
                            for field_name, field_value in row_data.items():
                                if str(field_value).startswith('<onec_dtools.database_reader.Blob'):
                                    content = safe_get_blob_content(field_value)
                                    if content and len(content) > 10:
                                        # –ò—â–µ–º –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞
                                        for keyword, variations in keywords.items():
                                            for variation in variations:
                                                if variation.lower() in content.lower():
                                                    found_keywords.add(keyword)
                                                    keyword_counts[keyword] += 1
                                                    
                                                    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∑–∞–ø–∏—Å—å —Å –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–æ–º
                                                    if len(keyword_records[keyword]) < 10:  # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º 10 –∑–∞–ø–∏—Å—è–º–∏ –Ω–∞ –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ
                                                        keyword_records[keyword].append({
                                                            'record_index': i,
                                                            'field_name': field_name,
                                                            'content': content[:300],
                                                            'full_record': {k: v for k, v in row_data.items() if not str(v).startswith('<onec_dtools.database_reader.Blob')}
                                                        })
                            
                            # –ò—â–µ–º –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –≤ –æ–±—ã—á–Ω—ã—Ö –ø–æ–ª—è—Ö
                            for field_name, field_value in row_data.items():
                                if not str(field_value).startswith('<onec_dtools.database_reader.Blob'):
                                    field_str = str(field_value).lower()
                                    for keyword, variations in keywords.items():
                                        for variation in variations:
                                            if variation.lower() in field_str:
                                                found_keywords.add(keyword)
                                                keyword_counts[keyword] += 1
                                
                            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –∫–∞–∂–¥—ã–µ 100 –∑–∞–ø–∏—Å–µ–π
                            if (i + 1) % 100 == 0:
                                print(f"    üìä –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ –∑–∞–ø–∏—Å–µ–π: {i + 1:,}")
                                for keyword, count in keyword_counts.items():
                                    if count > 0:
                                        print(f"        üéØ {keyword}: {count} –∑–∞–ø–∏—Å–µ–π")
                    
                    except Exception as e:
                        if i < 10:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—à–∏–±–∫–∏ —Ç–æ–ª—å–∫–æ –¥–ª—è –ø–µ—Ä–≤—ã—Ö 10 –∑–∞–ø–∏—Å–µ–π
                            print(f"    ‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ –∑–∞–ø–∏—Å–∏ {i}: {e}")
                        continue
                
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏—Ç–æ–≥–æ–≤—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º
                print(f"\nüìä –ò–¢–û–ì–û–í–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ü–û –ö–õ–Æ–ß–ï–í–´–ú –°–õ–û–í–ê–ú:")
                print("-" * 60)
                
                for keyword, count in keyword_counts.items():
                    if count > 0:
                        print(f"üéØ {keyword}: {count} –∑–∞–ø–∏—Å–µ–π")
                    else:
                        print(f"‚ùå {keyword}: –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
                
                # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø–æ–ª–µ–π –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø–µ—Ä–≤—ã—Ö –∑–∞–ø–∏—Å–µ–π
                print(f"\nüîç –ê–ù–ê–õ–ò–ó –°–¢–†–£–ö–¢–£–†–´ –ü–û–õ–ï–ô:")
                print("-" * 60)
                
                if len(table) > 0:
                    try:
                        first_record = table[0]
                        if not first_record.is_empty:
                            first_record_data = first_record.as_dict()
                            
                            print(f"üìã –í—Å–µ–≥–æ –ø–æ–ª–µ–π: {len(first_record_data)}")
                            print(f"üìã –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø–æ–ª–µ–π:")
                            
                            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 20 –ø–æ–ª–µ–π
                            for i, (field_name, field_value) in enumerate(list(first_record_data.items())[:20]):
                                field_type = "BLOB" if str(field_value).startswith('<onec_dtools.database_reader.Blob') else "–û–±—ã—á–Ω–æ–µ"
                                print(f"    {i+1:2d}. {field_name} ({field_type}): {field_value}")
                            
                            # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø–æ–ª–µ–π
                            fields_structure = {
                                'total_fields': len(first_record_data),
                                'field_names': list(first_record_data.keys()),
                                'field_types': {name: "BLOB" if str(val).startswith('<onec_dtools.database_reader.Blob') else "–û–±—ã—á–Ω–æ–µ" 
                                              for name, val in first_record_data.items()}
                            }
                            
                            results['document138_analysis']['fields_structure'] = fields_structure
                            
                    except Exception as e:
                        print(f"    ‚ö†Ô∏è –û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø–æ–ª–µ–π: {e}")
                
                # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–Ω–∞–ª–∏–∑–∞
                results['document138_analysis']['record_count'] = record_count
                results['document138_analysis']['keyword_counts'] = keyword_counts
                results['keyword_records'] = keyword_records
                
                # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—Å–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
                with open('document138_detailed_analysis.json', 'w', encoding='utf-8') as f:
                    json.dump(results, f, ensure_ascii=False, indent=2, default=str)
                
                print(f"\n‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ document138_detailed_analysis.json")
                
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–±—Ä–∞–∑—Ü—ã –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π
                print(f"\nüîç –û–ë–†–ê–ó–¶–´ –ù–ê–ô–î–ï–ù–ù–´–• –ó–ê–ü–ò–°–ï–ô:")
                print("-" * 60)
                
                for keyword, records in keyword_records.items():
                    if records:
                        print(f"\nüéØ {keyword.upper()} (–Ω–∞–π–¥–µ–Ω–æ {len(records)} –∑–∞–ø–∏—Å–µ–π):")
                        for j, record in enumerate(records[:3]):  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 3 –∑–∞–ø–∏—Å–∏
                            print(f"    üìÑ –ó–∞–ø–∏—Å—å {j+1} (–∏–Ω–¥–µ–∫—Å {record['record_index']}):")
                            print(f"        üìã –ü–æ–ª–µ: {record['field_name']}")
                            print(f"        üìã –°–æ–¥–µ—Ä–∂–∏–º–æ–µ: {record['content']}...")
                            print()
                
                return results
                
            else:
                print(f"‚ùå –¢–∞–±–ª–∏—Ü–∞ {table_name} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")
                return None
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return None

if __name__ == "__main__":
    analyze_document138_detailed()
