#!/usr/bin/env python3
# -*- coding: utf-8 -*-

from onec_dtools.database_reader import DatabaseReader
import json
import sys
import os
from datetime import datetime

def safe_get_blob_content(value):
    """
    –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ BLOB –ø–æ–ª—è
    """
    try:
        if hasattr(value, 'value'):
            content = value.value
            if content and len(str(content)) > 0:
                return str(content)
        elif hasattr(value, '__iter__'):
            try:
                iterator = iter(value)
                content = next(iterator)
                if content and len(content) > 0:
                    return str(content)
            except StopIteration:
                pass
        elif hasattr(value, '__bytes__'):
            try:
                content = bytes(value)
                if content and len(content) > 0:
                    return str(content)
            except:
                pass
    except Exception as e:
        return f"–û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è BLOB: {e}"
    
    return None

def analyze_retail_sales():
    """
    –î–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ "–û—Ç—á–µ—Ç –æ —Ä–æ–∑–Ω–∏—á–Ω—ã—Ö –ø—Ä–æ–¥–∞–∂–∞—Ö"
    """
    print("üîç –î–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ '–û—Ç—á–µ—Ç –æ —Ä–æ–∑–Ω–∏—á–Ω—ã—Ö –ø—Ä–æ–¥–∞–∂–∞—Ö'")
    print("üéØ –¶–ï–õ–¨: –ò–∑–≤–ª–µ—á—å –¥–∞–Ω–Ω—ã–µ –æ —Ä–æ–∑–Ω–∏—á–Ω—ã—Ö –ø—Ä–æ–¥–∞–∂–∞—Ö –∏ –∫–∞—á–µ—Å—Ç–≤–µ —Ç–æ–≤–∞—Ä–æ–≤")
    print("=" * 60)
    
    try:
        with open('raw/1Cv8.1CD', 'rb') as f:
            db = DatabaseReader(f)
            
            print(f"‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –æ—Ç–∫—Ä—ã—Ç–∞ —É—Å–ø–µ—à–Ω–æ!")
            
            results = {
                'retail_sales_documents': [],
                'journal_analysis': {},
                'metadata': {
                    'extraction_date': datetime.now().isoformat(),
                    'source_file': 'raw/1Cv8.1CD',
                    'total_retail_documents': 0,
                    'total_journal_records': 0
                }
            }
            
            print("\nüîç –≠—Ç–∞–ø 1: –ê–Ω–∞–ª–∏–∑ —Ç–∞–±–ª–∏—Ü—ã _DOCUMENT184 (–û—Ç—á–µ—Ç –æ —Ä–æ–∑–Ω–∏—á–Ω—ã—Ö –ø—Ä–æ–¥–∞–∂–∞—Ö)")
            print("-" * 60)
            
            # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ç–∞–±–ª–∏—Ü—É _DOCUMENT184
            if '_DOCUMENT184' in db.tables:
                table = db.tables['_DOCUMENT184']
                record_count = len(table)
                print(f"üìä –ù–∞–π–¥–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π: {record_count:,}")
                
                results['metadata']['total_retail_documents'] = record_count
                
                # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–µ—Ä–≤—ã–µ 20 –∑–∞–ø–∏—Å–µ–π
                sample_records = []
                for i in range(min(20, len(table))):
                    try:
                        row = table[i]
                        if not row.is_empty:
                            # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∑–∞–ø–∏—Å–∏
                            row_data = row.as_dict()
                            sample_records.append(row_data)
                            
                            print(f"    üìÑ –ó–∞–ø–∏—Å—å {i+1}:")
                            print(f"        üìã –ù–æ–º–µ—Ä: {row_data.get('_NUMBER', 'N/A')}")
                            print(f"        üìÖ –î–∞—Ç–∞: {row_data.get('_DATE_TIME', 'N/A')}")
                            print(f"        ‚úÖ –ü—Ä–æ–≤–µ–¥–µ–Ω: {row_data.get('_POSTED', 'N/A')}")
                            
                            # –ò—â–µ–º BLOB –ø–æ–ª—è
                            blob_fields = []
                            for field_name, field_value in row_data.items():
                                if str(field_value).startswith('<onec_dtools.database_reader.Blob'):
                                    blob_fields.append(field_name)
                            
                            if blob_fields:
                                print(f"        üîç BLOB –ø–æ–ª—è: {blob_fields}")
                                
                                # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ BLOB –ø–æ–ª–µ–π
                                for blob_field in blob_fields[:3]:  # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–µ—Ä–≤—ã–µ 3 BLOB –ø–æ–ª—è
                                    try:
                                        blob_value = row_data[blob_field]
                                        content = safe_get_blob_content(blob_value)
                                        if content:
                                            print(f"        üìã {blob_field}: {content[:150]}...")
                                    except Exception as e:
                                        print(f"        ‚ö†Ô∏è –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è BLOB {blob_field}: {e}")
                            
                            print()  # –ü—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞ –¥–ª—è —Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è
                    
                    except Exception as e:
                        print(f"    ‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ –∑–∞–ø–∏—Å–∏ {i}: {e}")
                        continue
                
                # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–Ω–∞–ª–∏–∑–∞
                table_analysis = {
                    'table_name': '_DOCUMENT184',
                    'record_count': record_count,
                    'sample_records': sample_records,
                    'fields': list(sample_records[0].keys()) if sample_records else []
                }
                results['retail_sales_documents'].append(table_analysis)
                
                print(f"‚úÖ –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ {len(sample_records)} –∑–∞–ø–∏—Å–µ–π")
            else:
                print("‚ùå –¢–∞–±–ª–∏—Ü–∞ _DOCUMENT184 –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")
            
            print("\nüîç –≠—Ç–∞–ø 2: –ê–Ω–∞–ª–∏–∑ –∂—É—Ä–Ω–∞–ª–∞ _DOCUMENT184_VT4940")
            print("-" * 60)
            
            # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∂—É—Ä–Ω–∞–ª –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ (—Ç–∞–±–ª–∏—á–Ω—É—é —á–∞—Å—Ç—å)
            journal_table_name = '_DOCUMENT184_VT4940'
            if journal_table_name in db.tables:
                table = db.tables[journal_table_name]
                record_count = len(table)
                print(f"üìä –ù–∞–π–¥–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π –≤ –∂—É—Ä–Ω–∞–ª–µ: {record_count:,}")
                
                results['metadata']['total_journal_records'] = record_count
                
                # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–µ—Ä–≤—ã–µ 15 –∑–∞–ø–∏—Å–µ–π
                sample_records = []
                for i in range(min(15, len(table))):
                    try:
                        row = table[i]
                        if not row.is_empty:
                            # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∑–∞–ø–∏—Å–∏
                            row_data = row.as_dict()
                            sample_records.append(row_data)
                            
                            print(f"    üìÑ –ó–∞–ø–∏—Å—å {i+1}:")
                            
                            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –ø–æ–ª—è
                            for field_name, field_value in row_data.items():
                                if not str(field_value).startswith('<onec_dtools.database_reader.Blob'):
                                    print(f"        üìã {field_name}: {field_value}")
                            
                            # –ò—â–µ–º BLOB –ø–æ–ª—è
                            blob_fields = []
                            for field_name, field_value in row_data.items():
                                if str(field_value).startswith('<onec_dtools.database_reader.Blob'):
                                    blob_fields.append(field_name)
                            
                            if blob_fields:
                                print(f"        üîç BLOB –ø–æ–ª—è: {blob_fields}")
                                
                                # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ BLOB –ø–æ–ª–µ–π
                                for blob_field in blob_fields[:2]:  # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–µ—Ä–≤—ã–µ 2 BLOB –ø–æ–ª—è
                                    try:
                                        blob_value = row_data[blob_field]
                                        content = safe_get_blob_content(blob_value)
                                        if content:
                                            print(f"        üìã {blob_field}: {content[:150]}...")
                                    except Exception as e:
                                        print(f"        ‚ö†Ô∏è –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è BLOB {blob_field}: {e}")
                            
                            print()  # –ü—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞ –¥–ª—è —Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è
                    
                    except Exception as e:
                        print(f"    ‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ –∑–∞–ø–∏—Å–∏ {i}: {e}")
                        continue
                
                # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–Ω–∞–ª–∏–∑–∞ –∂—É—Ä–Ω–∞–ª–∞
                journal_analysis = {
                    'table_name': journal_table_name,
                    'record_count': record_count,
                    'sample_records': sample_records,
                    'fields': list(sample_records[0].keys()) if sample_records else []
                }
                results['journal_analysis'][journal_table_name] = journal_analysis
                
                print(f"‚úÖ –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ {len(sample_records)} –∑–∞–ø–∏—Å–µ–π –∂—É—Ä–Ω–∞–ª–∞")
            else:
                print(f"‚ùå –ñ—É—Ä–Ω–∞–ª {journal_table_name} –Ω–µ –Ω–∞–π–¥–µ–Ω!")
            
            print("\nüîç –≠—Ç–∞–ø 3: –ü–æ–∏—Å–∫ —Å–≤—è–∑–∞–Ω–Ω—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤")
            print("-" * 60)
            
            # –ò—â–µ–º —Å–≤—è–∑–∞–Ω–Ω—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã
            related_documents = []
            for table_name in db.tables.keys():
                if '_DOCUMENT' in table_name and '_VT' not in table_name:
                    if '184' in table_name or '—Ä–æ–∑–Ω–∏—á–Ω' in table_name.lower():
                        table = db.tables[table_name]
                        if len(table) > 0:
                            related_documents.append((table_name, len(table)))
            
            if related_documents:
                print(f"üìä –ù–∞–π–¥–µ–Ω–æ —Å–≤—è–∑–∞–Ω–Ω—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤: {len(related_documents)}")
                for table_name, record_count in related_documents:
                    print(f"  üìã {table_name} ({record_count:,} –∑–∞–ø–∏—Å–µ–π)")
            else:
                print("üìä –°–≤—è–∑–∞–Ω–Ω—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
            with open('retail_sales_analysis.json', 'w', encoding='utf-8') as f:
                json.dump(results, f, ensure_ascii=False, indent=2, default=str)
            
            print(f"\n‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ retail_sales_analysis.json")
            print(f"üìä –ù–∞–π–¥–µ–Ω–æ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ —Ä–æ–∑–Ω–∏—á–Ω—ã—Ö –ø—Ä–æ–¥–∞–∂: {results['metadata']['total_retail_documents']}")
            print(f"üìä –ù–∞–π–¥–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π –≤ –∂—É—Ä–Ω–∞–ª–µ: {results['metadata']['total_journal_records']}")
            
            return results
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return None

if __name__ == "__main__":
    analyze_retail_sales()
