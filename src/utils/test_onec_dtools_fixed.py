#!/usr/bin/env python3
# -*- coding: utf-8 -*-

from onec_dtools.database_reader import DatabaseReader
import sys
import os

def extract_flower_data():
    """
    –ò–∑–≤–ª–µ–∫–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –æ —Ü–≤–µ—Ç–∞—Ö –∏–∑ 1CD —Ñ–∞–π–ª–∞ –∏—Å–ø–æ–ª—å–∑—É—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—É—é onec_dtools
    """
    print("üöÄ –ó–∞–ø—É—Å–∫ –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –æ —Ü–≤–µ—Ç–∞—Ö –∏–∑ 1CD —Ñ–∞–π–ª–∞")
    print("=" * 60)
    
    try:
        # –û—Ç–∫—Ä—ã–≤–∞–µ–º 1CD —Ñ–∞–π–ª
        print("üîç –û—Ç–∫—Ä—ã–≤–∞–µ–º 1CD —Ñ–∞–π–ª...")
        with open('raw/1Cv8.1CD', 'rb') as f:
            db = DatabaseReader(f)
            
            print(f"‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –æ—Ç–∫—Ä—ã—Ç–∞ —É—Å–ø–µ—à–Ω–æ!")
            print(f"üìä –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–∞–±–ª–∏—Ü: {len(db.tables)}")
            
            # –í—ã–≤–æ–¥–∏–º —Å–ø–∏—Å–æ–∫ —Ç–∞–±–ª–∏—Ü
            print("\nüìã –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã:")
            for i, table_name in enumerate(db.tables.keys()):
                if i < 20:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 20 —Ç–∞–±–ª–∏—Ü
                    print(f"  {i+1}. {table_name}")
                elif i == 20:
                    print(f"  ... –∏ –µ—â–µ {len(db.tables) - 20} —Ç–∞–±–ª–∏—Ü")
                    break
            
            # –ò—â–µ–º —Ç–∞–±–ª–∏—Ü—ã —Å –¥–∞–Ω–Ω—ã–º–∏ –æ —Ç–æ–≤–∞—Ä–∞—Ö/—Ü–≤–µ—Ç–∞—Ö
            print("\nüîç –ü–æ–∏—Å–∫ —Ç–∞–±–ª–∏—Ü —Å –¥–∞–Ω–Ω—ã–º–∏ –æ —Ç–æ–≤–∞—Ä–∞—Ö...")
            product_tables = []
            for table_name in db.tables.keys():
                if any(keyword in table_name.lower() for keyword in ['—Ç–æ–≤–∞—Ä', '–Ω–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä–∞', '—Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫', '—Ü–≤–µ—Ç', 'flower']):
                    product_tables.append(table_name)
            
            if product_tables:
                print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(product_tables)} —Ç–∞–±–ª–∏—Ü —Å —Ç–æ–≤–∞—Ä–∞–º–∏:")
                for table_name in product_tables:
                    print(f"  üìä {table_name}")
                    
                    # –ü—Ä–æ–±—É–µ–º –ø—Ä–æ—á–∏—Ç–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –∏–∑ –ø–µ—Ä–≤–æ–π —Ç–∞–±–ª–∏—Ü—ã
                    table = db.tables[table_name]
                    print(f"    üìà –ó–∞–ø–∏—Å–µ–π –≤ —Ç–∞–±–ª–∏—Ü–µ: {len(table)}")
                    
                    if len(table) > 0:
                        # –ß–∏—Ç–∞–µ–º –ø–µ—Ä–≤—É—é –∑–∞–ø–∏—Å—å
                        first_row = table[0]
                        print(f"    üìù –ü–µ—Ä–≤–∞—è –∑–∞–ø–∏—Å—å: {first_row.as_dict(read_blobs=True)}")
                        break
            else:
                print("‚ùå –¢–∞–±–ª–∏—Ü—ã —Å —Ç–æ–≤–∞—Ä–∞–º–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
                
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ —Ç–∞–±–ª–∏—Ü—ã –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
                print("\nüìã –í—Å–µ —Ç–∞–±–ª–∏—Ü—ã –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞:")
                for table_name in list(db.tables.keys())[:10]:
                    table = db.tables[table_name]
                    print(f"  üìä {table_name}: {len(table)} –∑–∞–ø–∏—Å–µ–π")
                    
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    extract_flower_data()
    print("\n‚úÖ –ê–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω") 