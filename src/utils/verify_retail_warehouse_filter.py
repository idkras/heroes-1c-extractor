#!/usr/bin/env python3
# -*- coding: utf-8 -*-

from onec_dtools.database_reader import DatabaseReader
import json
import sys
import os
from datetime import datetime

def safe_get_blob_content(value):
    """
    –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ BLOB –ø–æ–ª—è
    """
    try:
        if hasattr(value, 'value'):
            content = value.value
            if content and len(str(content)) > 0:
                return str(content)
        elif hasattr(value, '__iter__'):
            try:
                iterator = iter(value)
                content = next(iterator)
                if content and len(content) > 0:
                    return str(content)
            except StopIteration:
                pass
        elif hasattr(value, '__bytes__'):
            try:
                content = bytes(value)
                if content and len(content) > 0:
                    return str(content)
            except:
                pass
    except Exception as e:
        return f"–û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è BLOB: {e}"
    
    return None

def verify_retail_warehouse_filter():
    """
    –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Å–µ—Ö –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Ñ–∏–ª—å—Ç—Ä—É "–≤–∏–¥ —Å–∫–ª–∞–¥–∞ = —Ä–æ–∑–Ω–∏—Ü–∞"
    –¶–ï–õ–¨: –ò—Å–∫–ª—é—á–∏—Ç—å –æ–ø—Ç–æ–≤—ã–µ —Å–∫–ª–∞–¥—ã, –æ—Å—Ç–∞–≤–∏—Ç—å —Ç–æ–ª—å–∫–æ —Ä–æ–∑–Ω–∏—á–Ω—ã–µ –¥–ª—è JTBD —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤
    """
    print("üö® –ü–†–û–í–ï–†–ö–ê –§–ò–õ–¨–¢–†–ê: –í–ò–î –°–ö–õ–ê–î–ê = –†–û–ó–ù–ò–¶–ê")
    print("üéØ –¶–ï–õ–¨: –ò—Å–∫–ª—é—á–∏—Ç—å –æ–ø—Ç–æ–≤—ã–µ —Å–∫–ª–∞–¥—ã, –æ—Å—Ç–∞–≤–∏—Ç—å —Ç–æ–ª—å–∫–æ —Ä–æ–∑–Ω–∏—á–Ω—ã–µ")
    print("=" * 60)
    
    try:
        with open('raw/1Cv8.1CD', 'rb') as f:
            db = DatabaseReader(f)
            
            print(f"‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –æ—Ç–∫—Ä—ã—Ç–∞ —É—Å–ø–µ—à–Ω–æ!")
            
            results = {
                'retail_warehouse_verification': {},
                'filtered_documents': {},
                'excluded_documents': {},
                'metadata': {
                    'extraction_date': datetime.now().isoformat(),
                    'source_file': 'raw/1Cv8.1CD',
                    'filter_criteria': '–≤–∏–¥ —Å–∫–ª–∞–¥–∞ = —Ä–æ–∑–Ω–∏—Ü–∞'
                }
            }
            
            # –ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ä–æ–∑–Ω–∏—á–Ω—ã—Ö —Å–∫–ª–∞–¥–æ–≤
            retail_keywords = [
                '–º–∞–≥–∞–∑–∏–Ω', '—Ä–æ–∑–Ω–∏—Ü–∞', '—Ä–æ–∑–Ω–∏—á–Ω—ã–π', '—Ç–æ—Ä–≥–æ–≤–∞—è —Ç–æ—á–∫–∞', '—Ç—Ç',
                '—Ñ–º', '–ø—Ü', '–∏–Ω—Ç–µ—Ä–Ω–µ—Ç –º–∞–≥–∞–∑–∏–Ω', '–æ–Ω–ª–∞–π–Ω –º–∞–≥–∞–∑–∏–Ω',
                '—è–Ω–¥–µ–∫—Å –º–∞—Ä–∫–µ—Ç', '—è–Ω–¥–µ–∫—Å –¥–∏—Ä–µ–∫—Ç', '—è–Ω–¥–µ–∫—Å-–µ–¥–∞'
            ]
            
            # –ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –¥–ª—è –∏—Å–∫–ª—é—á–µ–Ω–∏—è –æ–ø—Ç–æ–≤—ã—Ö —Å–∫–ª–∞–¥–æ–≤
            wholesale_keywords = [
                '–æ–ø—Ç', '–æ–ø—Ç–æ–≤—ã–π', '–ø–æ—Å—Ç–∞–≤—â–∏–∫', '–ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ', '–ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ–Ω–Ω—ã–π',
                '—Å–∫–ª–∞–¥ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞', '–±–∞–∑–∞ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞', '—Ü–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π —Å–∫–ª–∞–¥'
            ]
            
            # –°–ø–∏—Å–æ–∫ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
            documents_to_check = [
                '_DOCUMENT137',           # –û—Ç—á–µ—Ç—ã –æ —Ä–æ–∑–Ω–∏—á–Ω—ã—Ö –ø—Ä–æ–¥–∞–∂–∞—Ö
                '_DOCUMENT137_VT3035',    # –¢–∞–±–ª–∏—á–Ω–∞—è —á–∞—Å—Ç—å –æ—Ç—á–µ—Ç–æ–≤
                '_DOCUMENT138',           # –ü–µ—Ä–µ–º–µ—â–µ–Ω–∏—è, –∫–∞—á–µ—Å—Ç–≤–æ, –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è
                '_DOCUMENT163',           # –°–∫–ª–∞–¥—ã, –º–∞–≥–∞–∑–∏–Ω—ã, –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è
                '_DOCUMENT9490_VT9494',  # –¶–≤–µ—Ç–∞, –∫–∞—á–µ—Å—Ç–≤–æ —Ü–≤–µ—Ç–æ–≤
                '_DOCUMENT156'            # –ö–∞—á–µ—Å—Ç–≤–æ
            ]
            
            print(f"\nüìä –ü—Ä–æ–≤–µ—Ä—è–µ–º {len(documents_to_check)} –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Ñ–∏–ª—å—Ç—Ä—É...")
            
            for doc_name in documents_to_check:
                print(f"\nüîç –≠–¢–ê–ü: –ü—Ä–æ–≤–µ—Ä–∫–∞ {doc_name}")
                print("-" * 60)
                
                if doc_name in db.tables:
                    table = db.tables[doc_name]
                    record_count = len(table)
                    print(f"üìä –ù–∞–π–¥–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π: {record_count:,}")
                    
                    # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–µ—Ä–≤—ã–µ 50 –∑–∞–ø–∏—Å–µ–π –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ç–∏–ø–∞ —Å–∫–ª–∞–¥–æ–≤
                    retail_records = []
                    wholesale_records = []
                    unclear_records = []
                    
                    for i in range(min(50, len(table))):
                        try:
                            row = table[i]
                            if not row.is_empty:
                                row_data = row.as_dict()
                                
                                # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –∑–∞–ø–∏—Å–∏
                                record_content = ""
                                is_retail = False
                                is_wholesale = False
                                
                                # –°–æ–±–∏—Ä–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –∏–∑ –≤—Å–µ—Ö –ø–æ–ª–µ–π
                                for field_name, field_value in row_data.items():
                                    if str(field_value).startswith('<onec_dtools.database_reader.Blob'):
                                        content = safe_get_blob_content(field_value)
                                        if content and len(content) > 10:
                                            record_content += " " + content
                                    else:
                                        record_content += " " + str(field_value)
                                
                                record_content = record_content.lower()
                                
                                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ —Ä–æ–∑–Ω–∏—á–Ω—ã–µ –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞
                                for keyword in retail_keywords:
                                    if keyword.lower() in record_content:
                                        is_retail = True
                                        break
                                
                                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –æ–ø—Ç–æ–≤—ã–µ –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞
                                for keyword in wholesale_keywords:
                                    if keyword.lower() in record_content:
                                        is_wholesale = True
                                        break
                                
                                # –ö–ª–∞—Å—Å–∏—Ñ–∏—Ü–∏—Ä—É–µ–º –∑–∞–ø–∏—Å—å
                                if is_retail and not is_wholesale:
                                    retail_records.append({
                                        'record_index': i,
                                        'content_sample': record_content[:200],
                                        'retail_keywords': [k for k in retail_keywords if k.lower() in record_content]
                                    })
                                elif is_wholesale:
                                    wholesale_records.append({
                                        'record_index': i,
                                        'content_sample': record_content[:200],
                                        'wholesale_keywords': [k for k in wholesale_keywords if k.lower() in record_content]
                                    })
                                else:
                                    unclear_records.append({
                                        'record_index': i,
                                        'content_sample': record_content[:200]
                                    })
                        
                        except Exception as e:
                            continue
                    
                    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏
                    print(f"    ‚úÖ –†–æ–∑–Ω–∏—á–Ω—ã–µ –∑–∞–ø–∏—Å–∏: {len(retail_records)}")
                    print(f"    ‚ùå –û–ø—Ç–æ–≤—ã–µ –∑–∞–ø–∏—Å–∏: {len(wholesale_records)}")
                    print(f"    ‚ùì –ù–µ—è—Å–Ω—ã–µ –∑–∞–ø–∏—Å–∏: {len(unclear_records)}")
                    
                    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–±—Ä–∞–∑—Ü—ã —Ä–æ–∑–Ω–∏—á–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π
                    if retail_records:
                        print(f"\n    üîç –û–ë–†–ê–ó–¶–´ –†–û–ó–ù–ò–ß–ù–´–• –ó–ê–ü–ò–°–ï–ô:")
                        for j, record in enumerate(retail_records[:3]):
                            print(f"        üìÑ –ó–∞–ø–∏—Å—å {j+1} (–∏–Ω–¥–µ–∫—Å {record['record_index']}):")
                            print(f"            üè™ –ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞: {', '.join(record['retail_keywords'])}")
                            print(f"            üìã –°–æ–¥–µ—Ä–∂–∏–º–æ–µ: {record['content_sample']}...")
                    
                    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–±—Ä–∞–∑—Ü—ã –æ–ø—Ç–æ–≤—ã—Ö –∑–∞–ø–∏—Å–µ–π (–¥–ª—è –∏—Å–∫–ª—é—á–µ–Ω–∏—è)
                    if wholesale_records:
                        print(f"\n    ‚ö†Ô∏è –û–ë–†–ê–ó–¶–´ –û–ü–¢–û–í–´–• –ó–ê–ü–ò–°–ï–ô (–ò–°–ö–õ–Æ–ß–ê–ï–ú):")
                        for j, record in enumerate(wholesale_records[:2]):
                            print(f"        üìÑ –ó–∞–ø–∏—Å—å {j+1} (–∏–Ω–¥–µ–∫—Å {record['record_index']}):")
                            print(f"            üè≠ –ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞: {', '.join(record['wholesale_keywords'])}")
                            print(f"            üìã –°–æ–¥–µ—Ä–∂–∏–º–æ–µ: {record['content_sample']}...")
                    
                    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø—Ä–æ–≤–µ—Ä–∫–∏
                    doc_verification = {
                        'table_name': doc_name,
                        'total_records': record_count,
                        'analyzed_records': min(50, len(table)),
                        'retail_records_count': len(retail_records),
                        'wholesale_records_count': len(wholesale_records),
                        'unclear_records_count': len(unclear_records),
                        'retail_percentage': round(len(retail_records) / min(50, len(table)) * 100, 1),
                        'retail_samples': retail_records[:5],
                        'wholesale_samples': wholesale_records[:3]
                    }
                    
                    results['retail_warehouse_verification'][doc_name] = doc_verification
                    
                    # –ö–ª–∞—Å—Å–∏—Ñ–∏—Ü–∏—Ä—É–µ–º –¥–æ–∫—É–º–µ–Ω—Ç
                    if len(retail_records) > len(wholesale_records):
                        results['filtered_documents'][doc_name] = {
                            'status': 'INCLUDE',
                            'reason': '–ü—Ä–µ–æ–±–ª–∞–¥–∞—é—Ç —Ä–æ–∑–Ω–∏—á–Ω—ã–µ –∑–∞–ø–∏—Å–∏',
                            'retail_percentage': doc_verification['retail_percentage']
                        }
                        print(f"    ‚úÖ –°–¢–ê–¢–£–°: –í–ö–õ–Æ–ß–ê–ï–ú (—Ä–æ–∑–Ω–∏—á–Ω—ã–π –¥–æ–∫—É–º–µ–Ω—Ç)")
                    elif len(wholesale_records) > len(retail_records):
                        results['excluded_documents'][doc_name] = {
                            'status': 'EXCLUDE',
                            'reason': '–ü—Ä–µ–æ–±–ª–∞–¥–∞—é—Ç –æ–ø—Ç–æ–≤—ã–µ –∑–∞–ø–∏—Å–∏',
                            'wholesale_percentage': round(len(wholesale_records) / min(50, len(table)) * 100, 1)
                        }
                        print(f"    ‚ùå –°–¢–ê–¢–£–°: –ò–°–ö–õ–Æ–ß–ê–ï–ú (–æ–ø—Ç–æ–≤—ã–π –¥–æ–∫—É–º–µ–Ω—Ç)")
                    else:
                        results['filtered_documents'][doc_name] = {
                            'status': 'REVIEW_REQUIRED',
                            'reason': '–ù–µ—è—Å–Ω–∞—è –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—è, —Ç—Ä–µ–±—É–µ—Ç—Å—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑',
                            'retail_percentage': doc_verification['retail_percentage']
                        }
                        print(f"    ‚ùì –°–¢–ê–¢–£–°: –¢–†–ï–ë–£–ï–¢ –ü–†–û–í–ï–†–ö–ò")
                
                else:
                    print(f"    ‚ùå –¢–∞–±–ª–∏—Ü–∞ {doc_name} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")
            
            # –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
            print(f"\nüìä –ò–¢–û–ì–û–í–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê –§–ò–õ–¨–¢–†–ê–¶–ò–ò:")
            print("-" * 60)
            
            included_count = len([d for d in results['filtered_documents'].values() if d['status'] == 'INCLUDE'])
            excluded_count = len(results['excluded_documents'])
            review_count = len([d for d in results['filtered_documents'].values() if d['status'] == 'REVIEW_REQUIRED'])
            
            print(f"    ‚úÖ –í–ö–õ–Æ–ß–ê–ï–ú: {included_count} –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤")
            print(f"    ‚ùå –ò–°–ö–õ–Æ–ß–ê–ï–ú: {excluded_count} –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤")
            print(f"    ‚ùì –¢–†–ï–ë–£–ï–¢ –ü–†–û–í–ï–†–ö–ò: {review_count} –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤")
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤–∫–ª—é—á–µ–Ω–Ω—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã
            if included_count > 0:
                print(f"\n‚úÖ –í–ö–õ–Æ–ß–ï–ù–ù–´–ï –î–û–ö–£–ú–ï–ù–¢–´ (—Ä–æ–∑–Ω–∏—á–Ω—ã–µ):")
                for doc_name, info in results['filtered_documents'].items():
                    if info['status'] == 'INCLUDE':
                        print(f"    üìã {doc_name}: {info['reason']} ({info['retail_percentage']}% —Ä–æ–∑–Ω–∏—á–Ω—ã—Ö)")
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏—Å–∫–ª—é—á–µ–Ω–Ω—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã
            if excluded_count > 0:
                print(f"\n‚ùå –ò–°–ö–õ–Æ–ß–ï–ù–ù–´–ï –î–û–ö–£–ú–ï–ù–¢–´ (–æ–ø—Ç–æ–≤—ã–µ):")
                for doc_name, info in results['excluded_documents'].items():
                    print(f"    üìã {doc_name}: {info['reason']} ({info['wholesale_percentage']}% –æ–ø—Ç–æ–≤—ã—Ö)")
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–æ–∫—É–º–µ–Ω—Ç—ã –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
            if review_count > 0:
                print(f"\n‚ùì –î–û–ö–£–ú–ï–ù–¢–´ –î–õ–Ø –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–û–ô –ü–†–û–í–ï–†–ö–ò:")
                for doc_name, info in results['filtered_documents'].items():
                    if info['status'] == 'REVIEW_REQUIRED':
                        print(f"    üìã {doc_name}: {info['reason']}")
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—Å–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
            with open('retail_warehouse_filter_verification.json', 'w', encoding='utf-8') as f:
                json.dump(results, f, ensure_ascii=False, indent=2, default=str)
            
            print(f"\n‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ retail_warehouse_filter_verification.json")
            
            return results
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return None

if __name__ == "__main__":
    verify_retail_warehouse_filter()
