#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import json
import logging
import os
import sys
from datetime import datetime
from typing import Any, Dict, Optional

logger = logging.getLogger(__name__)

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø–∞—Ç—á–∞–º
sys.path.append(os.path.join(os.path.dirname(__file__), "..", ".."))

# –ü—Ä–∏–º–µ–Ω—è–µ–º –ø–∞—Ç—á –¥–ª—è onec_dtools
from patches.onec_dtools.onec_dtools_patch import apply_patch

apply_patch()

from onec_dtools.database_reader import DatabaseReader

from src.utils.blob_utils import safe_get_blob_content


def search_document_names_in_blob() -> Optional[Dict[str, Any]]:
    """
    –ü–æ–∏—Å–∫ –Ω–∞–∑–≤–∞–Ω–∏–π –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –≤ BLOB –ø–æ–ª—è—Ö
    –¶–ï–õ–¨: –ù–∞–π—Ç–∏ —Ä–µ–∞–ª—å–Ω—ã–µ –Ω–∞–∑–≤–∞–Ω–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –¥–ª—è –ø–æ–Ω–∏–º–∞–Ω–∏—è –∏—Ö –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è
    """
    print("üîç –ü–û–ò–°–ö –ù–ê–ó–í–ê–ù–ò–ô –î–û–ö–£–ú–ï–ù–¢–û–í –í BLOB –ü–û–õ–Ø–•")
    print("üéØ –¶–ï–õ–¨: –û–ø—Ä–µ–¥–µ–ª–∏—Ç—å –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ –∫–∞–∂–¥–æ–≥–æ —Ç–∏–ø–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞")
    print("=" * 60)

    try:
        with open("data/raw/1Cv8.1CD", "rb") as f:
            db = DatabaseReader(f)

            print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –æ—Ç–∫—Ä—ã—Ç–∞ —É—Å–ø–µ—à–Ω–æ!")

            results: Dict[str, Any] = {
                "document_names": {},
                "blob_content_samples": {},
                "metadata": {
                    "extraction_date": datetime.now().isoformat(),
                    "source_file": "data/raw/1Cv8.1CD",
                    "total_tables": len(db.tables),
                },
            }

            print(f"\nüìä –í—Å–µ–≥–æ —Ç–∞–±–ª–∏—Ü –≤ –±–∞–∑–µ: {len(db.tables):,}")

            # –ü–æ–∏—Å–∫ —Ç–∞–±–ª–∏—Ü –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
            document_tables = {}
            for table_name in db.tables.keys():
                if table_name.startswith("_DOCUMENT"):
                    table = db.tables[table_name]
                    if len(table) > 0:
                        document_tables[table_name] = len(table)

            print(f"üìä –ù–∞–π–¥–µ–Ω–æ —Ç–∞–±–ª–∏—Ü –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤: {len(document_tables)}")

            # –ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞ –≤ BLOB –ø–æ–ª—è—Ö
            keywords = {
                "–ø–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ": [
                    "–ø–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ",
                    "–ø–µ—Ä–µ–º–µ—â",
                    "—Å–∫–ª–∞–¥ –æ—Ç–≥—Ä—É–∑–∫–∏",
                    "—Å–∫–ª–∞–¥ –ø–æ–ª—É—á–∞—Ç–µ–ª—å",
                ],
                "—Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è": ["—Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è", "—Ä–µ–∞–ª–∏–∑", "–ø—Ä–æ–¥–∞–∂–∞", "—Å—á–µ—Ç-—Ñ–∞–∫—Ç—É—Ä–∞"],
                "–ø–µ—Ä–µ–∫–æ–º–ø–ª–µ–∫—Ç–∞—Ü–∏—è": ["–ø–µ—Ä–µ–∫–æ–º–ø–ª–µ–∫—Ç–∞—Ü–∏—è", "–∫–æ–º–ø–ª–µ–∫—Ç–∞—Ü–∏—è", "–∫–æ–º–ø–ª–µ–∫—Ç"],
                "–ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏–µ": ["–ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏–µ", "–ø–æ—Å—Ç—É–ø–ª", "–ø—Ä–∏—Ö–æ–¥", "–Ω–∞–∫–ª–∞–¥–Ω–∞—è"],
                "–∫–∞—á–µ—Å—Ç–≤–æ": ["–∫–∞—á–µ—Å—Ç–≤–æ", "–±—Ä–∞–∫", "–¥–µ—Ñ–µ–∫—Ç", "–Ω–µ–∫–æ–Ω–¥–∏—Ü–∏—è", "—Å—Ç–∞–Ω–¥–∞—Ä—Ç"],
                "–ø–æ—Å—Ç–∞–≤–∫–∞": ["–ø–æ—Å—Ç–∞–≤–∫–∞", "–ø–æ—Å—Ç–∞–≤—â", "–¥–æ–≥–æ–≤–æ—Ä –ø–æ—Å—Ç–∞–≤–∫–∏"],
                "—Å–ø–∏—Å–∞–Ω–∏–µ": ["—Å–ø–∏—Å–∞–Ω–∏–µ", "—Å–ø–∏—Å–∞–Ω", "—Ä–∞—Å—Ö–æ–¥", "–±—Ä–∞–∫"],
                "–∏–Ω–≤–µ–Ω—Ç–∞—Ä–∏–∑–∞—Ü–∏—è": ["–∏–Ω–≤–µ–Ω—Ç–∞—Ä–∏–∑–∞—Ü–∏—è", "–ø–µ—Ä–µ—Å—á–µ—Ç", "–æ—Å—Ç–∞—Ç–∫–∏"],
                "–≤–æ–∑–≤—Ä–∞—Ç": ["–≤–æ–∑–≤—Ä–∞—Ç", "—Ä–µ–∫–ª–∞–º–∞—Ü–∏—è", "–≤–æ–∑–≤—Ä–∞—â"],
                "–∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–∞": ["–∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–∞", "–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ", "–∫–æ—Ä—Ä–µ–∫—Ç"],
            }

            # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ç–æ–ø-30 —Ç–∞–±–ª–∏—Ü –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
            sorted_documents = sorted(
                document_tables.items(), key=lambda x: x[1], reverse=True
            )

            print("\nüîç –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ç–æ–ø-30 —Ç–∞–±–ª–∏—Ü –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤...")

            for i, (table_name, record_count) in enumerate(sorted_documents[:30]):
                print(f"\nüìã {i+1:2d}. {table_name} ({record_count:,} –∑–∞–ø–∏—Å–µ–π)")

                try:
                    table = db.tables[table_name]
                    if len(table) > 0:
                        # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–µ—Ä–≤—ã–µ 5 –∑–∞–ø–∏—Å–µ–π –¥–ª—è –ø–æ–∏—Å–∫–∞ –Ω–∞–∑–≤–∞–Ω–∏–π
                        found_names = set()
                        blob_samples = []

                        for j in range(min(5, len(table))):
                            try:
                                record = table[j]
                                if not record.is_empty:
                                    record_data = record.as_dict()

                                    # –ò—â–µ–º BLOB –ø–æ–ª—è
                                    for field_name, field_value in record_data.items():
                                        if str(field_value).startswith(
                                            "<onec_dtools.database_reader.Blob"
                                        ):
                                            content = safe_get_blob_content(field_value)
                                            if content and len(content) > 10:
                                                # –ò—â–µ–º –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞
                                                for (
                                                    keyword,
                                                    variations,
                                                ) in keywords.items():
                                                    for variation in variations:
                                                        if (
                                                            variation.lower()
                                                            in content.lower()
                                                        ):
                                                            found_names.add(
                                                                f"{keyword}: {variation}"
                                                            )

                                                # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±—Ä–∞–∑–µ—Ü BLOB —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ
                                                blob_samples.append(
                                                    {
                                                        "field": field_name,
                                                        "content": content[:200],
                                                    }
                                                )

                                    # –ò—â–µ–º –≤ –æ–±—ã—á–Ω—ã—Ö –ø–æ–ª—è—Ö
                                    for field_name, field_value in record_data.items():
                                        if not str(field_value).startswith(
                                            "<onec_dtools.database_reader.Blob"
                                        ):
                                            field_str = str(field_value).lower()
                                            for keyword, variations in keywords.items():
                                                for variation in variations:
                                                    if variation.lower() in field_str:
                                                        found_names.add(
                                                            f"{keyword}: {variation}"
                                                        )

                            except Exception as e:
                                logger.warning(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ BLOB: {e}")
                                continue

                        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–∞–π–¥–µ–Ω–Ω—ã–µ –Ω–∞–∑–≤–∞–Ω–∏—è
                        if found_names:
                            print("    üéØ –ù–∞–π–¥–µ–Ω—ã –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞:")
                            for name in sorted(found_names):
                                print(f"        ‚úÖ {name}")

                        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–±—Ä–∞–∑—Ü—ã BLOB —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ
                        if blob_samples:
                            print("    üîç –û–±—Ä–∞–∑—Ü—ã BLOB —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ:")
                            for sample in blob_samples[:3]:
                                print(
                                    f"        üìã {sample['field']}: {sample['content']}..."
                                )

                        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–∞–±–ª–∏—Ü–µ
                        table_info = {
                            "table_name": table_name,
                            "record_count": record_count,
                            "found_keywords": list(found_names),
                            "blob_samples": blob_samples[:5],
                        }
                        results["document_names"][table_name] = table_info

                        # –ï—Å–ª–∏ –Ω–∞—à–ª–∏ –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–¥—Ä–æ–±–Ω–µ–µ
                        if found_names:
                            print("    üìä –°—Ç–∞—Ç—É—Å: ‚úÖ –ù–ê–ô–î–ï–ù–´ –ö–õ–Æ–ß–ï–í–´–ï –°–õ–û–í–ê")
                        else:
                            print("    üìä –°—Ç–∞—Ç—É—Å: ‚ùå –ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")

                except Exception as e:
                    print(f"    ‚ö†Ô∏è –û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ —Ç–∞–±–ª–∏—Ü—ã: {e}")
                    continue

            # –ü–æ–∏—Å–∫ –ø–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º
            print("\nüîç –î–ï–¢–ê–õ–¨–ù–´–ô –ü–û–ò–°–ö –ü–û –ö–õ–Æ–ß–ï–í–´–ú –°–õ–û–í–ê–ú")
            print("-" * 60)

            keyword_results = {}

            for keyword, variations in keywords.items():
                print(f"\nüîç –ü–æ–∏—Å–∫: {keyword}")
                print(f"    –í–∞—Ä–∏–∞—Ü–∏–∏: {', '.join(variations)}")

                matching_tables = []

                for table_name, table_info in results["document_names"].items():
                    if table_info["found_keywords"]:
                        for found_keyword in table_info["found_keywords"]:
                            if keyword in found_keyword:
                                matching_tables.append(
                                    {
                                        "table_name": table_name,
                                        "record_count": table_info["record_count"],
                                        "found_keywords": table_info["found_keywords"],
                                    }
                                )
                                break

                if matching_tables:
                    print(f"    ‚úÖ –ù–∞–π–¥–µ–Ω–æ —Ç–∞–±–ª–∏—Ü: {len(matching_tables)}")
                    for match in matching_tables:
                        print(
                            f"        üìã {match['table_name']} ({match['record_count']:,} –∑–∞–ø–∏—Å–µ–π)"
                        )
                        print(f"            üéØ {', '.join(match['found_keywords'])}")
                    keyword_results[keyword] = matching_tables
                else:
                    print("    ‚ùå –¢–∞–±–ª–∏—Ü—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
                    keyword_results[keyword] = []

            # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞ –ø–æ –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º
            results["keyword_search_results"] = keyword_results

            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—Å–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
            with open("document_names_blob_search.json", "w", encoding="utf-8") as file:
                json.dump(results, file, ensure_ascii=False, indent=2, default=str)

            print("\n‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ document_names_blob_search.json")

            # –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
            print("\nüìä –ò–¢–û–ì–û–í–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê:")
            print(f"    üìã –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ —Ç–∞–±–ª–∏—Ü: {len(results['document_names'])}")
            print(
                f"    üîç –ù–∞–π–¥–µ–Ω–æ —Ç–∞–±–ª–∏—Ü —Å –∫–ª—é—á–µ–≤—ã–º–∏ —Å–ª–æ–≤–∞–º–∏: {sum(1 for info in results['document_names'].values() if info['found_keywords'])}"
            )

            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–∞–π–¥–µ–Ω–Ω—ã–µ –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞
            all_found_keywords = set()
            for table_info in results["document_names"].values():
                all_found_keywords.update(table_info["found_keywords"])

            if all_found_keywords:
                print("    üéØ –ù–∞–π–¥–µ–Ω–Ω—ã–µ –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞:")
                for keyword in sorted(all_found_keywords):
                    print(f"        ‚úÖ {keyword}")
            else:
                print("    ‚ùå –ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")

            return results

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return None


if __name__ == "__main__":
    search_document_names_in_blob()
